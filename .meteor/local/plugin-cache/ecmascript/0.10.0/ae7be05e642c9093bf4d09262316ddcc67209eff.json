{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$10","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/server.js","filename":"server/server.js","sourceMapTarget":"server/server.js.map","sourceMaps":true,"presets":[],"passPerPreset":false,"envName":"development","cwd":"/home/juju/app","parserOpts":{"sourceType":"module","sourceFileName":"server/server.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","classProperties","asyncGenerators"]},"generatorOpts":{"filename":"server/server.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"server/server.js.map","sourceFileName":"server/server.js"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nMeteor.startup(() => {// code to run on server at startup\n});\nMeteor.methods({\n  insertInscription: function (data) {\n    console.log(data); //retourne l'ID\n\n    return Inscription.insert(data);\n  }\n});\nMeteor.methods({\n  connexion: function (data) {\n    return Connexion.update({\n      userIdNow: userIdNow\n    }, {\n      $set: {\n        connecté: \"true\",\n        hours: hours\n      }\n    });\n  }\n});\nMeteor.methods({\n  message: function (data3) {\n    return Message.insert(data3);\n  }\n});\nMeteor.methods({\n  newContact: function (data5) {\n    return Contact.insert(data5);\n  }\n});\nMeteor.methods({\n  modifierSurnom: function (userIdNow, contact, newSurnom) {\n    return Contact.update({\n      userIdNow: userIdNow,\n      contact: contact\n    }, {\n      $set: {\n        surnom: newSurnom\n      }\n    });\n  }\n});\nMeteor.methods({\n  notification: function (sessionID, contactID) {\n    return Message.update({\n      idClient1: contactID,\n      idClient2: sessionID,\n      lu: \"false\"\n    }, {\n      $set: {\n        lu: \"true\"\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  lastMessage: function (time, sessionID, contactID) {\n    return Contact.update({\n      contact: sessionID,\n      userIdNow: contactID\n    }, {\n      $set: {\n        lastMessage: time\n      }\n    });\n  }\n});\nMeteor.methods({\n  deco: function (sessionID) {\n    return Inscription.update({\n      userIdNow: sessionID\n    }, {\n      $set: {\n        etat: \"false\"\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  etat: function () {\n    return Inscription.update({\n      _id: userIdNow\n    }, {\n      $set: {\n        etat: \"connecté\"\n      }\n    }, {\n      multi: true\n    });\n  }\n});","map":{"version":3,"sources":["server/server.js"],"names":["Meteor","module","watch","require","v","startup","methods","insertInscription","data","console","log","Inscription","insert","connexion","Connexion","update","userIdNow","$set","connecté","hours","message","data3","Message","newContact","data5","Contact","modifierSurnom","contact","newSurnom","surnom","notification","sessionID","contactID","idClient1","idClient2","lu","multi","lastMessage","time","deco","etat","_id"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,SAAOI,CAAP,EAAS;AAACJ,aAAOI,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAIXJ,OAAOK,OAAP,CAAe,MAAM,CACnB;AACD,CAFD;AAIAL,OAAOM,OAAP,CAAe;AACbC,qBAAmB,UAASC,IAAT,EAAe;AAChCC,YAAQC,GAAR,CAAYF,IAAZ,EADgC,CAEhC;;AACA,WAAOG,YAAYC,MAAZ,CAAmBJ,IAAnB,CAAP;AACD;AALY,CAAf;AASAR,OAAOM,OAAP,CAAe;AACbO,aAAW,UAASL,IAAT,EAAe;AACxB,WAAOM,UAAUC,MAAV,CAAiB;AACtBC,iBAAWA;AADW,KAAjB,EAEJ;AACDC,YAAM;AACJC,kBAAU,MADN;AAEJC,eAAOA;AAFH;AADL,KAFI,CAAP;AAQD;AAVY,CAAf;AAcAnB,OAAOM,OAAP,CAAe;AACbc,WAAS,UAASC,KAAT,EAAgB;AACvB,WAAOC,QAAQV,MAAR,CAAeS,KAAf,CAAP;AACD;AAHY,CAAf;AAMArB,OAAOM,OAAP,CAAe;AACbiB,cAAY,UAASC,KAAT,EAAgB;AAC1B,WAAOC,QAAQb,MAAR,CAAeY,KAAf,CAAP;AACD;AAHY,CAAf;AAMAxB,OAAOM,OAAP,CAAe;AACboB,kBAAgB,UAASV,SAAT,EAAoBW,OAApB,EAA6BC,SAA7B,EAAwC;AACtD,WAAOH,QAAQV,MAAR,CAAe;AACpBC,iBAAWA,SADS;AAEpBW,eAASA;AAFW,KAAf,EAGJ;AACDV,YAAM;AACJY,gBAAQD;AADJ;AADL,KAHI,CAAP;AAQD;AAVY,CAAf;AAaA5B,OAAOM,OAAP,CAAe;AACbwB,gBAAc,UAASC,SAAT,EAAoBC,SAApB,EAA+B;AAC3C,WAAOV,QAAQP,MAAR,CAAe;AACpBkB,iBAAWD,SADS;AAEpBE,iBAAWH,SAFS;AAGpBI,UAAI;AAHgB,KAAf,EAIJ;AACDlB,YAAM;AACJkB,YAAI;AADA;AADL,KAJI,EAQJ;AACDC,aAAO;AADN,KARI,CAAP;AAWD;AAbY,CAAf;AAgBApC,OAAOM,OAAP,CAAe;AACb+B,eAAa,UAASC,IAAT,EAAeP,SAAf,EAA0BC,SAA1B,EAAqC;AAChD,WAAOP,QAAQV,MAAR,CAAe;AACpBY,eAASI,SADW;AAEpBf,iBAAWgB;AAFS,KAAf,EAGJ;AACDf,YAAM;AACJoB,qBAAaC;AADT;AADL,KAHI,CAAP;AAQD;AAVY,CAAf;AAaAtC,OAAOM,OAAP,CAAe;AACbiC,QAAM,UAASR,SAAT,EAAoB;AACxB,WAAOpB,YAAYI,MAAZ,CAAmB;AACxBC,iBAAWe;AADa,KAAnB,EAEJ;AACDd,YAAM;AACJuB,cAAM;AADF;AADL,KAFI,EAMJ;AACDJ,aAAO;AADN,KANI,CAAP;AASD;AAXY,CAAf;AAcApC,OAAOM,OAAP,CAAe;AACbkC,QAAM,YAAW;AACf,WAAO7B,YAAYI,MAAZ,CAAmB;AACxB0B,WAAKzB;AADmB,KAAnB,EAEJ;AACDC,YAAM;AACJuB,cAAM;AADF;AADL,KAFI,EAMJ;AACDJ,aAAO;AADN,KANI,CAAP;AASD;AAXY,CAAf","file":"server/server.js.map","sourcesContent":["import {\n  Meteor\n} from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n\nMeteor.methods({\n  insertInscription: function(data) {\n    console.log(data);\n    //retourne l'ID\n    return Inscription.insert(data);\n  },\n});\n\n\nMeteor.methods({\n  connexion: function(data) {\n    return Connexion.update({\n      userIdNow: userIdNow,\n    }, {\n      $set: {\n        connecté: \"true\",\n        hours: hours,\n      }\n    });\n  },\n});\n\n\nMeteor.methods({\n  message: function(data3) {\n    return Message.insert(data3);\n  },\n});\n\nMeteor.methods({\n  newContact: function(data5) {\n    return Contact.insert(data5);\n  },\n});\n\nMeteor.methods({\n  modifierSurnom: function(userIdNow, contact, newSurnom) {\n    return Contact.update({\n      userIdNow: userIdNow,\n      contact: contact\n    }, {\n      $set: {\n        surnom: newSurnom\n      }\n    });\n  },\n});\n\nMeteor.methods({\n  notification: function(sessionID, contactID) {\n    return Message.update({\n      idClient1: contactID,\n      idClient2: sessionID,\n      lu: \"false\",\n    }, {\n      $set: {\n        lu: \"true\"\n      }\n    }, {\n      multi: true\n    });\n  },\n});\n\nMeteor.methods({\n  lastMessage: function(time, sessionID, contactID) {\n    return Contact.update({\n      contact: sessionID,\n      userIdNow: contactID,\n    }, {\n      $set: {\n        lastMessage: time,\n      }\n    });\n  },\n});\n\nMeteor.methods({\n  deco: function(sessionID) {\n    return Inscription.update({\n      userIdNow: sessionID,\n    }, {\n      $set: {\n        etat: \"false\",\n      }\n    }, {\n      multi: true\n    });\n  },\n});\n\nMeteor.methods({\n  etat: function() {\n    return Inscription.update({\n      _id: userIdNow,\n    }, {\n      $set: {\n        etat: \"connecté\",\n      }\n    }, {\n      multi: true\n    });\n  },\n})\n"]},"hash":"ae7be05e642c9093bf4d09262316ddcc67209eff"}
