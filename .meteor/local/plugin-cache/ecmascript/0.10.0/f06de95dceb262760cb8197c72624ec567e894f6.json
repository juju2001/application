{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$6","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$8","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$10","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$12","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$13","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$16","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$17","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$18","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$20","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$21","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$22","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$23","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$24","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"client/Chat/Discussion/discussion.js","filename":"client/Chat/Discussion/discussion.js","sourceMapTarget":"client/Chat/Discussion/discussion.js.map","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/juju/app","parserOpts":{"sourceType":"module","sourceFileName":"client/Chat/Discussion/discussion.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"client/Chat/Discussion/discussion.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"client/Chat/Discussion/discussion.js.map","sourceFileName":"client/Chat/Discussion/discussion.js"}},"code":"Template.discussion.rendered = function () {\n  document.title = \"Actualité de vos discussions\";\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.discussion.helpers({\n  discussion: function () {\n    var sessionID = Session.get(\"userID\");\n    var noti = Message.find({\n      idClient2: sessionID,\n      lu: false\n    }).fetch();\n\n    if (noti) {\n      var ids = _.pluck(noti, 'idClient1');\n\n      alert(ids);\n      var inscription = Inscription.findOne({\n        _id: ids\n      });\n    }\n\n    var contact = Contact.find({\n      userIdNow: sessionID\n    }, {\n      sort: {\n        lastMessage: -1\n      }\n    }).fetch();\n    return inscription || contact;\n  },\n  notification: function () {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var notification = Message.findOne({\n      idClient1: id.contact,\n      idClient2: sessionID,\n      lu: \"false\"\n    });\n\n    if (notification) {\n      return notification;\n    }\n  },\n  NoFriend: function () {\n    var sessionID = Session.get(\"userID\");\n    var noti = Message.find({\n      idClient2: sessionID,\n      lu: false\n    }).fetch();\n\n    if (noti) {\n      var ids = _.pluck(noti, 'idclient1');\n\n      var inscription = Inscription.findOne({\n        _id: ids\n      });\n      return inscription;\n    }\n  },\n  inscriptionFind: function () {\n    return Session.get(\"inscriptionFind\");\n  },\n  messageFind: function () {\n    return Session.get(\"messageFind\");\n  },\n  lastConnexion: function () {\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var ids = id.contact;\n    var deco = Connexion.findOne({\n      userIdNow: ids\n    });\n\n    if (deco.deconnexion != 0) {\n      var deconnexion = deco.deconnexion;\n      var date = new Date(deconnexion);\n      var day = date.getDate();\n      var month = date.getMonth() + 1;\n\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n\n      var year = date.getFullYear();\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n\n      if (minutes < 10) {\n        minutes = minutes + \"0\";\n      }\n\n      var final = \"Hors ligne depuis \" + day + \"/\" + month + \"/\" + year + \"  \" + hours + \":\" + minutes;\n      return final;\n    } else {\n      return \"En ligne\";\n    }\n  },\n  couleur: function () {\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var ids = id.contact;\n    var deco = Connexion.findOne({\n      userIdNow: ids\n    });\n\n    if (deco.deconnexion == 0) {\n      return 'text-success';\n    } else {\n      return 'text-danger';\n    }\n  },\n  infoNom: function () {\n    var sessionID = Session.get(\"userID\");\n    var id = Message.findOne({\n      _id: this._id\n    });\n\n    if (id) {\n      var info = Inscription.findOne({\n        _id: id.idClient1\n      });\n\n      if (sessionID == id.idClient2) {\n        return info.nom;\n      }\n    }\n  },\n  infoPrenom: function () {\n    var sessionID = Session.get(\"userID\");\n    var id = Message.findOne({\n      _id: this._id\n    });\n\n    if (id) {\n      var info = Inscription.findOne({\n        _id: id.idClient1\n      });\n\n      if (sessionID != id.idClient1) {\n        return info.prenom;\n      } else {\n        info = Inscription.findOne({\n          _id: id.idClient2\n        });\n        return \"Moi\";\n      }\n    }\n  },\n  infoHeure: function () {\n    var sessionID = Session.get(\"userID\");\n    var id = Message.findOne({\n      _id: this._id\n    });\n\n    if (id) {\n      var time = id.hours;\n      var date = new Date(time);\n      return +date.getHours() + \":\" + date.getMinutes() + \" \" + date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear();\n    }\n  }\n});\nTemplate.discussion.events({\n  'click .goDiscu': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var contactId = id.contact;\n\n    if (contactId) {\n      Session.set(\"contactID\", contactId);\n      Router.go('/message');\n    }\n\n    ;\n  },\n  'click #goRecherche': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var infoRecherche = $(\"#recherche\").val();\n    var sessionID = Session.get(\"userID\");\n    var hash = {\n      userIdNow: sessionID,\n      recherche: infoRecherche\n    };\n    var inscriptionFind = Inscription.find({\n      $or: [{\n        prenom: infoRecherche\n      }, {\n        nom: infoRecherche\n      }, {\n        age: infoRecherche\n      }, {\n        email: {\n          $regex: infoRecherche\n        }\n      }, {\n        pseudo: infoRecherche\n      }]\n    }).fetch();\n    var messageFind = Message.find({\n      $or: [{\n        idClient1: sessionID\n      }, {\n        idClient2: sessionID\n      }],\n      message: {\n        $regex: infoRecherche\n      }\n    }).fetch();\n    Session.set('inscriptionFind', inscriptionFind);\n    Session.set('messageFind', messageFind);\n    Session.set();\n    $(\"#recherche\").val('');\n  },\n  'click #supp': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id\n    });\n\n    if (id && confirm(\"Etes-vous sûr de vouloir supprimer la discussion ?\")) {\n      var contactID = id.contact;\n      Meteor.call('supprimerMessage1', sessionID, contactID, function () {\n        Meteor.call('supprimerMessage2', sessionID, contactID, function () {\n          alert(\"Discussio supprimée !\");\n        });\n      });\n    }\n  }\n});","map":{"version":3,"sources":["client/Chat/Discussion/discussion.js"],"names":["Template","discussion","rendered","document","title","sessionID","Session","get","Router","go","Tracker","autorun","Inscription","find","user","findOne","_id","etat","heure","Date","heureDeco","getTime","Meteor","call","set","helpers","noti","Message","idClient2","lu","fetch","ids","_","pluck","alert","inscription","contact","Contact","userIdNow","sort","lastMessage","notification","contactID","id","idClient1","NoFriend","inscriptionFind","messageFind","lastConnexion","deco","Connexion","deconnexion","date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","final","couleur","infoNom","info","nom","infoPrenom","prenom","infoHeure","time","events","event","preventDefault","stopPropagation","contactId","infoRecherche","$","val","hash","recherche","$or","age","email","$regex","pseudo","message","confirm"],"mappings":"AAAAA,SAASC,UAAT,CAAoBC,QAApB,GAA+B,YAAW;AACxCC,WAASC,KAAT,GAAiB,8BAAjB;AAEA,MAAIC,YAAYC,QAAQC,GAAR,CAAY,QAAZ,CAAhB;;AACA,MAAIF,aAAa,IAAjB,EAAuB;AACrBG,WAAOC,EAAP,CAAU,YAAV;AACD;;AAEDC,UAAQC,OAAR,CAAgB,YAAW;AACzBC,gBAAYC,IAAZ;AAEA,QAAIC,OAAOF,YAAYG,OAAZ,CAAoB;AAC7BC,WAAKV,QAAQC,GAAR,CAAY,QAAZ,CADwB;AAE7BU,YAAM;AAFuB,KAApB,CAAX;;AAKA,QAAIH,IAAJ,EAAU;AACR,UAAIT,YAAYC,QAAQC,GAAR,CAAY,QAAZ,CAAhB;AACA,UAAIW,QAAQ,IAAIC,IAAJ,EAAZ;AACA,UAAIC,YAAYF,MAAMG,OAAN,EAAhB;AACAC,aAAOC,IAAP,CAAY,MAAZ,EAAoBlB,SAApB;AACAiB,aAAOC,IAAP,CAAY,WAAZ,EAAyBlB,SAAzB,EAAoCe,SAApC;AACAd,cAAQkB,GAAR,CAAY,QAAZ,EAAsB,IAAtB;;AACA,UAAIlB,QAAQC,GAAR,CAAY,QAAZ,KAAyB,IAA7B,EAAmC;AACjCC,eAAOC,EAAP,CAAU,YAAV;AACD;;AAAA;AACF;AACF,GAnBD;AAoBD,CA5BD;;AA8BAT,SAASC,UAAT,CAAoBwB,OAApB,CAA4B;AAC1BxB,cAAY,YAAW;AACrB,QAAII,YAAYC,QAAQC,GAAR,CAAY,QAAZ,CAAhB;AAGA,QAAImB,OAAOC,QAAQd,IAAR,CAAa;AACtBe,iBAAWvB,SADW;AAEtBwB,UAAI;AAFkB,KAAb,EAGRC,KAHQ,EAAX;;AAIA,QAAIJ,IAAJ,EAAU;AACR,UAAIK,MAAMC,EAAEC,KAAF,CAAQP,IAAR,EAAc,WAAd,CAAV;;AACAQ,YAAMH,GAAN;AACA,UAAII,cAAcvB,YAAYG,OAAZ,CAAoB;AACpCC,aAAKe;AAD+B,OAApB,CAAlB;AAGD;;AAED,QAAIK,UAAUC,QAAQxB,IAAR,CAAa;AACzByB,iBAAWjC;AADc,KAAb,EAEX;AACDkC,YAAM;AACJC,qBAAa,CAAC;AADV;AADL,KAFW,EAMXV,KANW,EAAd;AAQE,WAAOK,eAAeC,OAAtB;AAEH,GA3ByB;AA6B1BK,gBAAc,YAAW;AACvB,QAAIpC,YAAYC,QAAQC,GAAR,CAAY,QAAZ,CAAhB;AACA,QAAImC,YAAYpC,QAAQC,GAAR,CAAY,WAAZ,CAAhB;AACA,QAAIoC,KAAKN,QAAQtB,OAAR,CAAgB;AACvBC,WAAK,KAAKA;AADa,KAAhB,CAAT;AAGA,QAAIyB,eAAed,QAAQZ,OAAR,CAAgB;AACjC6B,iBAAWD,GAAGP,OADmB;AAEjCR,iBAAWvB,SAFsB;AAGjCwB,UAAI;AAH6B,KAAhB,CAAnB;;AAKA,QAAIY,YAAJ,EAAkB;AAChB,aAAOA,YAAP;AACD;AACF,GA3CyB;AA6C1BI,YAAU,YAAW;AACnB,QAAIxC,YAAYC,QAAQC,GAAR,CAAY,QAAZ,CAAhB;AACA,QAAImB,OAAOC,QAAQd,IAAR,CAAa;AACtBe,iBAAWvB,SADW;AAEtBwB,UAAI;AAFkB,KAAb,EAGRC,KAHQ,EAAX;;AAIA,QAAIJ,IAAJ,EAAU;AACR,UAAIK,MAAMC,EAAEC,KAAF,CAAQP,IAAR,EAAc,WAAd,CAAV;;AACA,UAAIS,cAAcvB,YAAYG,OAAZ,CAAoB;AACpCC,aAAKe;AAD+B,OAApB,CAAlB;AAGA,aAAOI,WAAP;AACD;AACF,GA1DyB;AA4D1BW,mBAAiB,YAAW;AAC1B,WAAOxC,QAAQC,GAAR,CAAY,iBAAZ,CAAP;AACD,GA9DyB;AAgE1BwC,eAAa,YAAW;AACtB,WAAOzC,QAAQC,GAAR,CAAY,aAAZ,CAAP;AACD,GAlEyB;AAoE1ByC,iBAAe,YAAW;AACxB,QAAI3C,YAAYC,QAAQC,GAAR,CAAY,QAAZ,CAAhB;AACA,QAAIoC,KAAKN,QAAQtB,OAAR,CAAgB;AACvBC,WAAK,KAAKA;AADa,KAAhB,CAAT;AAGA,QAAIe,MAAMY,GAAGP,OAAb;AACA,QAAIa,OAAOC,UAAUnC,OAAV,CAAkB;AAC3BuB,iBAAWP;AADgB,KAAlB,CAAX;;AAGA,QAAIkB,KAAKE,WAAL,IAAoB,CAAxB,EAA2B;AACzB,UAAIA,cAAcF,KAAKE,WAAvB;AACA,UAAIC,OAAO,IAAIjC,IAAJ,CAASgC,WAAT,CAAX;AACA,UAAIE,MAAMD,KAAKE,OAAL,EAAV;AACA,UAAIC,QAAQH,KAAKI,QAAL,KAAkB,CAA9B;;AACA,UAAID,QAAQ,EAAZ,EAAgB;AACdA,gBAAQ,MAAMA,KAAd;AACD;;AACD,UAAIE,OAAOL,KAAKM,WAAL,EAAX;AACA,UAAIC,QAAQP,KAAKQ,QAAL,EAAZ;AACA,UAAIC,UAAUT,KAAKU,UAAL,EAAd;;AACA,UAAID,UAAU,EAAd,EAAkB;AAChBA,kBAAUA,UAAU,GAApB;AACD;;AACD,UAAIE,QAAQ,uBAAuBV,GAAvB,GAA6B,GAA7B,GAAmCE,KAAnC,GAA2C,GAA3C,GAAiDE,IAAjD,GAAwD,IAAxD,GAA+DE,KAA/D,GAAuE,GAAvE,GAA6EE,OAAzF;AACA,aAAOE,KAAP;AACD,KAhBD,MAgBO;AACL,aAAO,UAAP;AACD;AACF,GAhGyB;AAkG1BC,WAAS,YAAW;AAClB,QAAI3D,YAAYC,QAAQC,GAAR,CAAY,QAAZ,CAAhB;AACA,QAAIoC,KAAKN,QAAQtB,OAAR,CAAgB;AACvBC,WAAK,KAAKA;AADa,KAAhB,CAAT;AAGA,QAAIe,MAAMY,GAAGP,OAAb;AACA,QAAIa,OAAOC,UAAUnC,OAAV,CAAkB;AAC3BuB,iBAAWP;AADgB,KAAlB,CAAX;;AAGA,QAAIkB,KAAKE,WAAL,IAAoB,CAAxB,EAA2B;AACzB,aAAO,cAAP;AACD,KAFD,MAEO;AACL,aAAO,aAAP;AACD;AACF,GAhHyB;AAkH1Bc,WAAS,YAAW;AAClB,QAAI5D,YAAYC,QAAQC,GAAR,CAAY,QAAZ,CAAhB;AACA,QAAIoC,KAAKhB,QAAQZ,OAAR,CAAgB;AACvBC,WAAK,KAAKA;AADa,KAAhB,CAAT;;AAGA,QAAI2B,EAAJ,EAAQ;AACN,UAAIuB,OAAOtD,YAAYG,OAAZ,CAAoB;AAC7BC,aAAK2B,GAAGC;AADqB,OAApB,CAAX;;AAGA,UAAIvC,aAAasC,GAAGf,SAApB,EAA+B;AAC7B,eAAOsC,KAAKC,GAAZ;AACD;AACF;AACF,GA/HyB;AAiI1BC,cAAY,YAAW;AACrB,QAAI/D,YAAYC,QAAQC,GAAR,CAAY,QAAZ,CAAhB;AACA,QAAIoC,KAAKhB,QAAQZ,OAAR,CAAgB;AACvBC,WAAK,KAAKA;AADa,KAAhB,CAAT;;AAGA,QAAI2B,EAAJ,EAAQ;AACN,UAAIuB,OAAOtD,YAAYG,OAAZ,CAAoB;AAC7BC,aAAK2B,GAAGC;AADqB,OAApB,CAAX;;AAGA,UAAIvC,aAAasC,GAAGC,SAApB,EAA+B;AAC7B,eAAOsB,KAAKG,MAAZ;AACD,OAFD,MAEO;AACLH,eAAOtD,YAAYG,OAAZ,CAAoB;AACzBC,eAAK2B,GAAGf;AADiB,SAApB,CAAP;AAGA,eAAO,KAAP;AACD;AACF;AACF,GAnJyB;AAqJ1B0C,aAAW,YAAW;AACpB,QAAIjE,YAAYC,QAAQC,GAAR,CAAY,QAAZ,CAAhB;AACA,QAAIoC,KAAKhB,QAAQZ,OAAR,CAAgB;AACvBC,WAAK,KAAKA;AADa,KAAhB,CAAT;;AAGA,QAAI2B,EAAJ,EAAQ;AACN,UAAI4B,OAAO5B,GAAGgB,KAAd;AACA,UAAIP,OAAO,IAAIjC,IAAJ,CAASoD,IAAT,CAAX;AACA,aAAO,CAACnB,KAAKQ,QAAL,EAAD,GAAmB,GAAnB,GAAyBR,KAAKU,UAAL,EAAzB,GAA6C,GAA7C,GAAmDV,KAAKE,OAAL,EAAnD,GAAoE,GAApE,GAA0EF,KAAKI,QAAL,EAA1E,GAA4F,GAA5F,GAAkGJ,KAAKM,WAAL,EAAzG;AACD;AACF;AA/JyB,CAA5B;AAmKA1D,SAASC,UAAT,CAAoBuE,MAApB,CAA2B;AACzB,oBAAkB,UAASC,KAAT,EAAgB;AAChCA,UAAMC,cAAN;AACAD,UAAME,eAAN;AACA,QAAIhC,KAAKN,QAAQtB,OAAR,CAAgB;AACvBC,WAAK,KAAKA;AADa,KAAhB,CAAT;AAGA,QAAI4D,YAAYjC,GAAGP,OAAnB;;AACA,QAAIwC,SAAJ,EAAe;AACbtE,cAAQkB,GAAR,CAAY,WAAZ,EAAyBoD,SAAzB;AACApE,aAAOC,EAAP,CAAU,UAAV;AACD;;AAAA;AACF,GAZwB;AAczB,wBAAsB,UAASgE,KAAT,EAAgB;AACpCA,UAAMC,cAAN;AACAD,UAAME,eAAN;AACA,QAAIE,gBAAgBC,EAAE,YAAF,EAAgBC,GAAhB,EAApB;AACA,QAAI1E,YAAYC,QAAQC,GAAR,CAAY,QAAZ,CAAhB;AACA,QAAIyE,OAAQ;AACV1C,iBAAWjC,SADD;AAEV4E,iBAAWJ;AAFD,KAAZ;AAIA,QAAI/B,kBAAkBlC,YAAYC,IAAZ,CAAiB;AACrCqE,WAAK,CAAC;AACJb,gBAAQQ;AADJ,OAAD,EAEF;AACDV,aAAKU;AADJ,OAFE,EAIF;AACDM,aAAKN;AADJ,OAJE,EAMF;AACDO,eAAO;AACLC,kBAAQR;AADH;AADN,OANE,EAUF;AACDS,gBAAQT;AADP,OAVE;AADgC,KAAjB,EAcnB/C,KAdmB,EAAtB;AAgBA,QAAIiB,cAAcpB,QAAQd,IAAR,CAAa;AAC7BqE,WAAK,CAAC;AACJtC,mBAAWvC;AADP,OAAD,EAEF;AACDuB,mBAAWvB;AADV,OAFE,CADwB;AAM7BkF,eAAS;AACPF,gBAAQR;AADD;AANoB,KAAb,EASf/C,KATe,EAAlB;AAWAxB,YAAQkB,GAAR,CAAY,iBAAZ,EAA+BsB,eAA/B;AACAxC,YAAQkB,GAAR,CAAY,aAAZ,EAA2BuB,WAA3B;AACAzC,YAAQkB,GAAR;AACAsD,MAAE,YAAF,EAAgBC,GAAhB,CAAoB,EAApB;AACD,GAtDwB;AAwDzB,iBAAe,UAASN,KAAT,EAAgB;AAC7BA,UAAMC,cAAN;AACAD,UAAME,eAAN;AACA,QAAItE,YAAYC,QAAQC,GAAR,CAAY,QAAZ,CAAhB;AACA,QAAIoC,KAAKN,QAAQtB,OAAR,CAAgB;AACvBC,WAAK,KAAKA;AADa,KAAhB,CAAT;;AAGA,QAAI2B,MAAM6C,QAAQ,oDAAR,CAAV,EAAyE;AACvE,UAAI9C,YAAYC,GAAGP,OAAnB;AACAd,aAAOC,IAAP,CAAY,mBAAZ,EAAiClB,SAAjC,EAA4CqC,SAA5C,EAAuD,YAAW;AAChEpB,eAAOC,IAAP,CAAY,mBAAZ,EAAiClB,SAAjC,EAA4CqC,SAA5C,EAAuD,YAAW;AAChER,gBAAM,uBAAN;AACD,SAFD;AAGD,OAJD;AAKD;AACF;AAvEwB,CAA3B","file":"client/Chat/Discussion/discussion.js.map","sourcesContent":["Template.discussion.rendered = function() {\n  document.title = \"Actualité de vos discussions\";\n\n  var sessionID = Session.get(\"userID\");\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\nTemplate.discussion.helpers({\n  discussion: function() {\n    var sessionID = Session.get(\"userID\");\n\n\n    var noti = Message.find({\n      idClient2: sessionID,\n      lu: false,\n    }).fetch();\n    if (noti) {\n      var ids = _.pluck(noti, 'idClient1');\n      alert(ids);\n      var inscription = Inscription.findOne({\n        _id: ids,\n      });\n    }\n\n    var contact = Contact.find({\n      userIdNow: sessionID,\n    }, {\n      sort: {\n        lastMessage: -1,\n      },\n    }).fetch();\n\n      return inscription || contact;\n\n  },\n\n  notification: function() {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var notification = Message.findOne({\n      idClient1: id.contact,\n      idClient2: sessionID,\n      lu: \"false\",\n    });\n    if (notification) {\n      return notification;\n    }\n  },\n\n  NoFriend: function() {\n    var sessionID = Session.get(\"userID\");\n    var noti = Message.find({\n      idClient2: sessionID,\n      lu: false,\n    }).fetch();\n    if (noti) {\n      var ids = _.pluck(noti, 'idclient1');\n      var inscription = Inscription.findOne({\n        _id: ids,\n      });\n      return inscription;\n    }\n  },\n\n  inscriptionFind: function() {\n    return Session.get(\"inscriptionFind\");\n  },\n\n  messageFind: function() {\n    return Session.get(\"messageFind\");\n  },\n\n  lastConnexion: function() {\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var ids = id.contact;\n    var deco = Connexion.findOne({\n      userIdNow: ids,\n    });\n    if (deco.deconnexion != 0) {\n      var deconnexion = deco.deconnexion;\n      var date = new Date(deconnexion);\n      var day = date.getDate();\n      var month = date.getMonth() + 1;\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n      var year = date.getFullYear();\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n      if (minutes < 10) {\n        minutes = minutes + \"0\";\n      }\n      var final = \"Hors ligne depuis \" + day + \"/\" + month + \"/\" + year + \"  \" + hours + \":\" + minutes;\n      return final;\n    } else {\n      return \"En ligne\";\n    }\n  },\n\n  couleur: function() {\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var ids = id.contact;\n    var deco = Connexion.findOne({\n      userIdNow: ids,\n    });\n    if (deco.deconnexion == 0) {\n      return 'text-success'\n    } else {\n      return 'text-danger'\n    }\n  },\n\n  infoNom: function() {\n    var sessionID = Session.get(\"userID\");\n    var id = Message.findOne({\n      _id: this._id,\n    });\n    if (id) {\n      var info = Inscription.findOne({\n        _id: id.idClient1,\n      });\n      if (sessionID == id.idClient2) {\n        return info.nom;\n      }\n    }\n  },\n\n  infoPrenom: function() {\n    var sessionID = Session.get(\"userID\");\n    var id = Message.findOne({\n      _id: this._id,\n    });\n    if (id) {\n      var info = Inscription.findOne({\n        _id: id.idClient1,\n      });\n      if (sessionID != id.idClient1) {\n        return info.prenom;\n      } else {\n        info = Inscription.findOne({\n          _id: id.idClient2,\n        });\n        return \"Moi\"\n      }\n    }\n  },\n\n  infoHeure: function() {\n    var sessionID = Session.get(\"userID\");\n    var id = Message.findOne({\n      _id: this._id,\n    });\n    if (id) {\n      var time = id.hours;\n      var date = new Date(time);\n      return +date.getHours() + \":\" + date.getMinutes() + \" \" + date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear();\n    }\n  },\n\n});\n\nTemplate.discussion.events({\n  'click .goDiscu': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var contactId = id.contact;\n    if (contactId) {\n      Session.set(\"contactID\", contactId);\n      Router.go('/message');\n    };\n  },\n\n  'click #goRecherche': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var infoRecherche = $(\"#recherche\").val();\n    var sessionID = Session.get(\"userID\");\n    var hash = ({\n      userIdNow: sessionID,\n      recherche: infoRecherche,\n    });\n    var inscriptionFind = Inscription.find({\n      $or: [{\n        prenom: infoRecherche,\n      }, {\n        nom: infoRecherche,\n      }, {\n        age: infoRecherche,\n      }, {\n        email: {\n          $regex: infoRecherche,\n        },\n      }, {\n        pseudo: infoRecherche,\n      }],\n    }).fetch();\n\n    var messageFind = Message.find({\n      $or: [{\n        idClient1: sessionID,\n      }, {\n        idClient2: sessionID,\n      }],\n      message: {\n        $regex: infoRecherche,\n      },\n    }).fetch();\n\n    Session.set('inscriptionFind', inscriptionFind);\n    Session.set('messageFind', messageFind);\n    Session.set();\n    $(\"#recherche\").val('');\n  },\n\n  'click #supp': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    if (id && confirm(\"Etes-vous sûr de vouloir supprimer la discussion ?\")) {\n      var contactID = id.contact;\n      Meteor.call('supprimerMessage1', sessionID, contactID, function() {\n        Meteor.call('supprimerMessage2', sessionID, contactID, function() {\n          alert(\"Discussio supprimée !\");\n        });\n      });\n    }\n  }\n\n});\n"]},"hash":"f06de95dceb262760cb8197c72624ec567e894f6"}
