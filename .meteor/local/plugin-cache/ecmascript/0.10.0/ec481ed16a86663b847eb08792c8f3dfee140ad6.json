{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$10","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/lib/stale_session.js","filename":"server/lib/stale_session.js","sourceMapTarget":"server/lib/stale_session.js.map","sourceMaps":true,"presets":[],"passPerPreset":false,"envName":"development","cwd":"/home/juju/app","parserOpts":{"sourceType":"module","sourceFileName":"server/lib/stale_session.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","classProperties","asyncGenerators"]},"generatorOpts":{"filename":"server/lib/stale_session.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"server/lib/stale_session.js.map","sourceFileName":"server/lib/stale_session.js"}},"code":"//\n// Server side activity detection for the session timeout\n//\n// Meteor settings:\n// - staleSessionInactivityTimeout: the amount of time (in ms) after which, if no activity is noticed, a session will be considered stale\n// - staleSessionPurgeInterval: interval (in ms) at which stale sessions are purged i.e. found and forcibly logged out\n// - staleSessionForceLogout: whether or not we want to force log out and purge stale sessions\n//\nvar staleSessionPurgeInterval = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionPurgeInterval || 1 * 60 * 1000; // 1min\n\nvar inactivityTimeout = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionInactivityTimeout || 30 * 60 * 1000; // 30mins\n\nvar forceLogout = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionForceLogout; //\n// provide a user activity heartbeat method which stamps the user record with a timestamp of the last\n// received activity heartbeat.\n//\n\nMeteor.methods({\n  heartbeat: function (options) {\n    if (!this.userId) {\n      return;\n    }\n\n    var user = Meteor.users.findOne(this.userId);\n\n    if (user) {\n      Meteor.users.update(user._id, {\n        $set: {\n          heartbeat: new Date()\n        }\n      });\n    }\n  }\n}); //\n// periodically purge any stale sessions, removing their login tokens and clearing out the stale heartbeat.\n//\n\nif (forceLogout !== false) {\n  Meteor.setInterval(function () {\n    var now = new Date(),\n        overdueTimestamp = new Date(now - inactivityTimeout);\n    Meteor.users.update({\n      heartbeat: {\n        $lt: overdueTimestamp\n      }\n    }, {\n      $set: {\n        'services.resume.loginTokens': []\n      },\n      $unset: {\n        heartbeat: 1\n      }\n    }, {\n      multi: true\n    });\n  }, staleSessionPurgeInterval);\n}","map":{"version":3,"sources":["server/lib/stale_session.js"],"names":["staleSessionPurgeInterval","Meteor","settings","public","inactivityTimeout","staleSessionInactivityTimeout","forceLogout","staleSessionForceLogout","methods","heartbeat","options","userId","user","users","findOne","update","_id","$set","Date","setInterval","now","overdueTimestamp","$lt","$unset","multi"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,4BAA4BC,OAAOC,QAAP,IAAmBD,OAAOC,QAAP,CAAgBC,MAAnC,IAA6CF,OAAOC,QAAP,CAAgBC,MAAhB,CAAuBH,yBAApE,IAAkG,IAAE,EAAF,GAAK,IAAvI,C,CAA8I;;AAC9I,IAAII,oBAAoBH,OAAOC,QAAP,IAAmBD,OAAOC,QAAP,CAAgBC,MAAnC,IAA6CF,OAAOC,QAAP,CAAgBC,MAAhB,CAAuBE,6BAApE,IAAsG,KAAG,EAAH,GAAM,IAApI,C,CAA2I;;AAC3I,IAAIC,cAAcL,OAAOC,QAAP,IAAmBD,OAAOC,QAAP,CAAgBC,MAAnC,IAA6CF,OAAOC,QAAP,CAAgBC,MAAhB,CAAuBI,uBAAtF,C,CAEA;AACA;AACA;AACA;;AACAN,OAAOO,OAAP,CAAe;AACXC,aAAW,UAASC,OAAT,EAAkB;AACzB,QAAI,CAAC,KAAKC,MAAV,EAAkB;AAAE;AAAS;;AAC7B,QAAIC,OAAOX,OAAOY,KAAP,CAAaC,OAAb,CAAqB,KAAKH,MAA1B,CAAX;;AACA,QAAIC,IAAJ,EAAU;AACNX,aAAOY,KAAP,CAAaE,MAAb,CAAoBH,KAAKI,GAAzB,EAA8B;AAACC,cAAM;AAACR,qBAAW,IAAIS,IAAJ;AAAZ;AAAP,OAA9B;AACH;AACJ;AAPU,CAAf,E,CAWA;AACA;AACA;;AACA,IAAIZ,gBAAgB,KAApB,EAA2B;AACvBL,SAAOkB,WAAP,CAAmB,YAAW;AAC1B,QAAIC,MAAM,IAAIF,IAAJ,EAAV;AAAA,QAAsBG,mBAAmB,IAAIH,IAAJ,CAASE,MAAIhB,iBAAb,CAAzC;AACAH,WAAOY,KAAP,CAAaE,MAAb,CAAoB;AAACN,iBAAW;AAACa,aAAKD;AAAN;AAAZ,KAApB,EACoB;AAACJ,YAAM;AAAC,uCAA+B;AAAhC,OAAP;AACCM,cAAQ;AAACd,mBAAU;AAAX;AADT,KADpB,EAGoB;AAACe,aAAO;AAAR,KAHpB;AAIH,GAND,EAMGxB,yBANH;AAOH","file":"server/lib/stale_session.js.map","sourcesContent":["//\n// Server side activity detection for the session timeout\n//\n// Meteor settings:\n// - staleSessionInactivityTimeout: the amount of time (in ms) after which, if no activity is noticed, a session will be considered stale\n// - staleSessionPurgeInterval: interval (in ms) at which stale sessions are purged i.e. found and forcibly logged out\n// - staleSessionForceLogout: whether or not we want to force log out and purge stale sessions\n//\nvar staleSessionPurgeInterval = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionPurgeInterval || (1*60*1000); // 1min\nvar inactivityTimeout = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionInactivityTimeout || (30*60*1000); // 30mins\nvar forceLogout = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionForceLogout;\n\n//\n// provide a user activity heartbeat method which stamps the user record with a timestamp of the last\n// received activity heartbeat.\n//\nMeteor.methods({\n    heartbeat: function(options) {\n        if (!this.userId) { return; }\n        var user = Meteor.users.findOne(this.userId);\n        if (user) {\n            Meteor.users.update(user._id, {$set: {heartbeat: new Date()}});\n        }\n    }\n});\n\n\n//\n// periodically purge any stale sessions, removing their login tokens and clearing out the stale heartbeat.\n//\nif (forceLogout !== false) {\n    Meteor.setInterval(function() {\n        var now = new Date(), overdueTimestamp = new Date(now-inactivityTimeout);\n        Meteor.users.update({heartbeat: {$lt: overdueTimestamp}},\n                            {$set: {'services.resume.loginTokens': []},\n                             $unset: {heartbeat:1}},\n                            {multi: true});\n    }, staleSessionPurgeInterval);\n}\n"]},"hash":"ec481ed16a86663b847eb08792c8f3dfee140ad6"}
