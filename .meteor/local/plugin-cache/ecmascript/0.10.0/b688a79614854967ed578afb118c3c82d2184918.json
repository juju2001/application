{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$6","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$8","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$10","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$12","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$13","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$16","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$17","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$18","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$20","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$21","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$22","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$23","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$24","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"client/Chat/message/message.js","filename":"client/Chat/message/message.js","sourceMapTarget":"client/Chat/message/message.js.map","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/home/juju/app","parserOpts":{"sourceType":"module","sourceFileName":"client/Chat/message/message.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"client/Chat/message/message.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"client/Chat/message/message.js.map","sourceFileName":"client/Chat/message/message.js"}},"code":"Template.message.rendered = function () {\n  document.title = \"Message\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.message.helpers({\n  messages: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    return Message.find({\n      $or: [{\n        idClient1: sessionID,\n        idClient2: contactID\n      }, {\n        idClient1: contactID,\n        idClient2: sessionID\n      }]\n    }, {\n      $sort: {\n        hours: 1\n      }\n    });\n    var lu = \"true\";\n    console.log(sessionID);\n    Meteor.call('notification', lu, sessionID, contactID, function (data3) {});\n  },\n  color: function () {\n    // String solution\n    if (this.idClient1 === LocalStore.get(\"userID\")) {\n      return 'text-success text-right';\n    }\n\n    return 'text-danger text-left ';\n  }\n});\nTemplate.message.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var find = Connexion.findOne({\n      userIdNow: sessionID\n    });\n    var message = event.target.message.value;\n\n    if (message) {\n      var now = new Date();\n      var hash3 = {\n        idClient1: sessionID,\n        idClient2: contactID,\n        message: message,\n        lu: \"false\",\n        hours: now.getTime()\n      };\n      Meteor.call('message', hash3, function (data3) {});\n      $('#messages').val('');\n    }\n  }\n});","map":{"version":3,"sources":["client/Chat/message/message.js"],"names":["Template","message","rendered","document","title","sessionID","LocalStore","get","find","Connexion","findOne","userIdNow","Router","go","helpers","messages","contactID","Message","$or","idClient1","idClient2","$sort","hours","lu","console","log","Meteor","call","data3","color","events","event","preventDefault","stopPropagation","target","value","now","Date","hash3","getTime","$","val"],"mappings":"AAAAA,SAASC,OAAT,CAAiBC,QAAjB,GAA4B,YAAW;AACrCC,WAASC,KAAT,GAAiB,SAAjB;AACA,MAAIC,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,MAAIC,OAAOC,UAAUC,OAAV,CAAkB;AAC3BC,eAAWN;AADgB,GAAlB,CAAX;;AAGA,MAAI,CAACA,SAAD,IAAcA,aAAaG,KAAKG,SAApC,EAA+C;AAC7CC,WAAOC,EAAP,CAAU,YAAV;AACD;AACF,CATD;;AAWAb,SAASC,OAAT,CAAiBa,OAAjB,CAAyB;AACvBC,YAAU,YAAW;AACnB,QAAIV,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,QAAIS,YAAYV,WAAWC,GAAX,CAAe,WAAf,CAAhB;AAEA,WAAOU,QAAQT,IAAR,CAAa;AAClBU,WAAK,CAAC;AACJC,mBAAWd,SADP;AAEJe,mBAAWJ;AAFP,OAAD,EAGF;AACDG,mBAAWH,SADV;AAEDI,mBAAWf;AAFV,OAHE;AADa,KAAb,EAQJ;AACDgB,aAAO;AACLC,eAAO;AADF;AADN,KARI,CAAP;AAaA,QAAIC,KAAK,MAAT;AACAC,YAAQC,GAAR,CAAYpB,SAAZ;AACAqB,WAAOC,IAAP,CAAY,cAAZ,EAA4BJ,EAA5B,EAAgClB,SAAhC,EAA2CW,SAA3C,EAAsD,UAASY,KAAT,EAAgB,CAAE,CAAxE;AACD,GArBsB;AAsBvBC,SAAO,YAAW;AAChB;AACA,QAAI,KAAKV,SAAL,KAAmBb,WAAWC,GAAX,CAAe,QAAf,CAAvB,EAAiD;AAC/C,aAAO,yBAAP;AACD;;AACD,WAAO,wBAAP;AACD;AA5BsB,CAAzB;AAgCAP,SAASC,OAAT,CAAiB6B,MAAjB,CAAwB;AACtB,iBAAe,UAASC,KAAT,EAAgB;AAC7BA,UAAMC,cAAN;AACAD,UAAME,eAAN;AACA,QAAI5B,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,QAAIS,YAAYV,WAAWC,GAAX,CAAe,WAAf,CAAhB;AACA,QAAIC,OAAOC,UAAUC,OAAV,CAAkB;AAC3BC,iBAAWN;AADgB,KAAlB,CAAX;AAGA,QAAIJ,UAAU8B,MAAMG,MAAN,CAAajC,OAAb,CAAqBkC,KAAnC;;AACA,QAAIlC,OAAJ,EAAa;AACX,UAAImC,MAAM,IAAIC,IAAJ,EAAV;AACA,UAAIC,QAAQ;AACVnB,mBAAWd,SADD;AAEVe,mBAAWJ,SAFD;AAGVf,iBAASA,OAHC;AAIVsB,YAAI,OAJM;AAKVD,eAAOc,IAAIG,OAAJ;AALG,OAAZ;AAOAb,aAAOC,IAAP,CAAY,SAAZ,EAAuBW,KAAvB,EAA8B,UAASV,KAAT,EAAgB,CAAE,CAAhD;AACAY,QAAE,WAAF,EAAeC,GAAf,CAAmB,EAAnB;AACD;AACF;AAtBqB,CAAxB","file":"client/Chat/message/message.js.map","sourcesContent":["Template.message.rendered = function() {\n  document.title = \"Message\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.message.helpers({\n  messages: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n\n    return Message.find({\n      $or: [{\n        idClient1: sessionID,\n        idClient2: contactID,\n      }, {\n        idClient1: contactID,\n        idClient2: sessionID,\n      }],\n    }, {\n      $sort: {\n        hours: 1,\n      },\n    });\n    var lu = \"true\";\n    console.log(sessionID);\n    Meteor.call('notification', lu, sessionID, contactID, function(data3) {});\n  },\n  color: function() {\n    // String solution\n    if (this.idClient1 === LocalStore.get(\"userID\")) {\n      return 'text-success text-right';\n    }\n    return 'text-danger text-left ';\n  },\n});\n\n\nTemplate.message.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var find = Connexion.findOne({\n      userIdNow: sessionID,\n    });\n    var message = event.target.message.value;\n    if (message) {\n      var now = new Date();\n      var hash3 = {\n        idClient1: sessionID,\n        idClient2: contactID,\n        message: message,\n        lu: \"false\",\n        hours: now.getTime(),\n      };\n      Meteor.call('message', hash3, function(data3) {});\n      $('#messages').val('');\n    }\n  },\n});\n"]},"hash":"b688a79614854967ed578afb118c3c82d2184918"}
