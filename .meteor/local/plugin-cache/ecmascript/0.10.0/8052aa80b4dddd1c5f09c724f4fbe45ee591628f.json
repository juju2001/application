{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$10","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/server.js","filename":"server/server.js","sourceMapTarget":"server/server.js.map","sourceMaps":true,"presets":[],"passPerPreset":false,"envName":"development","cwd":"/home/juju/app","parserOpts":{"sourceType":"module","sourceFileName":"server/server.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","classProperties","asyncGenerators"]},"generatorOpts":{"filename":"server/server.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"server/server.js.map","sourceFileName":"server/server.js"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nMeteor.startup(() => {// code to run on server at startup\n});\nMeteor.methods({\n  insertInscription: function (data) {\n    console.log(data); //retourne l'ID\n\n    return Inscription.insert(data);\n  }\n});\nMeteor.methods({\n  connexion: function (data) {\n    return Connexion.insert(data);\n  }\n});\nMeteor.methods({\n  message: function (data3) {\n    return Message.insert(data3);\n  }\n});\nMeteor.methods({\n  newContact: function (data5) {\n    return Contact.insert(data5);\n  }\n});\nMeteor.methods({\n  recherche: function (data) {\n    return Recherche.insert(data);\n  }\n});\nMeteor.methods({\n  modifierSurnom: function (userIdNow, contact, newSurnom) {\n    return Contact.update({\n      userIdNow: userIdNow,\n      contact: contact\n    }, {\n      $set: {\n        surnom: newSurnom\n      }\n    });\n  }\n});\nMeteor.methods({\n  notification: function (sessionID, contactID) {\n    return Message.update({\n      idClient1: contactID,\n      idClient2: sessionID,\n      lu: \"false\"\n    }, {\n      $set: {\n        lu: \"true\"\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  lastMessage: function (time, sessionID, contactID) {\n    return Contact.update({\n      contact: sessionID,\n      userIdNow: contactID\n    }, {\n      $set: {\n        lastMessage: time\n      }\n    });\n  }\n});\nMeteor.methods({\n  deco: function (sessionID) {\n    return Inscription.update({\n      _id: sessionID\n    }, {\n      $set: {\n        etat: \"false\"\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  heureDeco: function (sessionID, heureDeco) {\n    return Connexion.update({\n      userIdNow: sessionID\n    }, {\n      $set: {\n        deconnexion: heureDeco\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  etat: function (userIdNow) {\n    return Inscription.update({\n      _id: userIdNow\n    }, {\n      $set: {\n        etat: \"true\"\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  dec0: function (userIdNow) {\n    return Connexion.update({\n      userIdNow: userIdNow\n    }, {\n      $set: {\n        deconnexion: 0\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  statut: function (statut, sessionID) {\n    return Inscription.update({\n      _id: sessionID\n    }, {\n      $set: {\n        statut: statut\n      }\n    });\n  }\n});\nMeteor.methods({\n  supprimer: function (sessionID, contactID) {\n    return Contact.removeOne({\n      userIdNow: sessionID,\n      contact: contactID\n    });\n  }\n});","map":{"version":3,"sources":["server/server.js"],"names":["Meteor","module","watch","require","v","startup","methods","insertInscription","data","console","log","Inscription","insert","connexion","Connexion","message","data3","Message","newContact","data5","Contact","recherche","Recherche","modifierSurnom","userIdNow","contact","newSurnom","update","$set","surnom","notification","sessionID","contactID","idClient1","idClient2","lu","multi","lastMessage","time","deco","_id","etat","heureDeco","deconnexion","dec0","statut","supprimer","removeOne"],"mappings":"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","file":"server/server.js.map","sourcesContent":["import {\n  Meteor\n} from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n\nMeteor.methods({\n  insertInscription: function(data) {\n    console.log(data);\n    //retourne l'ID\n    return Inscription.insert(data);\n  },\n});\n\n\nMeteor.methods({\n  connexion: function(data) {\n    return Connexion.insert(data);\n  },\n});\n\n\nMeteor.methods({\n  message: function(data3) {\n    return Message.insert(data3);\n  },\n});\n\nMeteor.methods({\n  newContact: function(data5) {\n    return Contact.insert(data5);\n  },\n});\n\nMeteor.methods({\n  recherche: function(data) {\n    return Recherche.insert(data);\n  },\n});\n\nMeteor.methods({\n  modifierSurnom: function(userIdNow, contact, newSurnom) {\n    return Contact.update({\n      userIdNow: userIdNow,\n      contact: contact\n    }, {\n      $set: {\n        surnom: newSurnom\n      }\n    });\n  },\n});\n\nMeteor.methods({\n  notification: function(sessionID, contactID) {\n    return Message.update({\n      idClient1: contactID,\n      idClient2: sessionID,\n      lu: \"false\",\n    }, {\n      $set: {\n        lu: \"true\"\n      }\n    }, {\n      multi: true\n    });\n  },\n});\n\nMeteor.methods({\n  lastMessage: function(time, sessionID, contactID) {\n    return Contact.update({\n      contact: sessionID,\n      userIdNow: contactID,\n    }, {\n      $set: {\n        lastMessage: time,\n      }\n    });\n  },\n});\n\nMeteor.methods({\n  deco: function(sessionID) {\n    return Inscription.update({\n      _id: sessionID,\n    }, {\n      $set: {\n        etat: \"false\",\n      }\n    }, {\n      multi: true\n    });\n  },\n});\n\nMeteor.methods({\n  heureDeco: function(sessionID, heureDeco) {\n    return Connexion.update({\n      userIdNow: sessionID,\n    }, {\n      $set: {\n        deconnexion: heureDeco,\n      }\n    }, {\n      multi: true\n    });\n  },\n});\n\nMeteor.methods({\n  etat: function(userIdNow) {\n    return Inscription.update({\n      _id: userIdNow,\n    }, {\n      $set: {\n        etat: \"true\",\n      }\n    }, {\n      multi: true\n    });\n  },\n});\n\n\nMeteor.methods({\n  dec0 : function(userIdNow){\n    return Connexion.update({\n      userIdNow : userIdNow,\n    }, {\n      $set : {\n        deconnexion : 0,\n      }\n    }, {\n      multi : true,\n    });\n    },\n});\n\nMeteor.methods({\n  statut : function(statut, sessionID){\n    return Inscription.update({\n      _id : sessionID,\n    }, {\n      $set : {\n        statut : statut,\n      }\n    });\n    },\n});\n\nMeteor.methods({\n  supprimer : function(sessionID, contactID){\n    return Contact.removeOne({\n      userIdNow : sessionID,\n      contact   : contactID,\n    })\n  }\n});\n"]},"hash":"8052aa80b4dddd1c5f09c724f4fbe45ee591628f"}
