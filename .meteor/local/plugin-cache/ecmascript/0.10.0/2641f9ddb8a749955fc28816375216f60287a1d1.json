{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$10","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"server/server.js","filename":"server/server.js","sourceMapTarget":"server/server.js.map","sourceMaps":true,"presets":[],"passPerPreset":false,"envName":"development","cwd":"/home/juju/app","parserOpts":{"sourceType":"module","sourceFileName":"server/server.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","classProperties","asyncGenerators"]},"generatorOpts":{"filename":"server/server.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"server/server.js.map","sourceFileName":"server/server.js"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nMeteor.startup(() => {// code to run on server at startup\n});\nMeteor.methods({\n  insertInscription: function (data) {\n    console.log(data); //retourne l'ID\n\n    return Inscription.insert(data);\n  }\n});\nMeteor.methods({\n  connexion: function (data) {\n    return Connexion.insert(data);\n  }\n});\nMeteor.methods({\n  message: function (data3) {\n    return Message.insert(data3);\n  }\n});\nMeteor.methods({\n  newContact: function (data5) {\n    return Contact.insert(data5);\n  }\n});\nMeteor.methods({\n  modifierSurnom: function (userIdNow, contact, newSurnom) {\n    return Contact.update({\n      userIdNow: userIdNow,\n      contact: contact\n    }, {\n      $set: {\n        surnom: newSurnom\n      }\n    });\n  }\n});\nMeteor.methods({\n  notification: function (sessionID, contactID) {\n    return Message.update({\n      idClient1: contactID,\n      idClient2: sessionID,\n      lu: \"false\"\n    }, {\n      $set: {\n        lu: \"true\"\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  lastMessage: function (time, sessionID, contactID) {\n    return Contact.update({\n      contact: sessionID,\n      userIdNow: contactID\n    }, {\n      $set: {\n        lastMessage: time\n      }\n    });\n  }\n});\nMeteor.methods({\n  deco: function (sessionID) {\n    return Connexion.update({\n      userIdNow: sessionID\n    }, {\n      $set: {\n        connecté: \"false\"\n      }\n    });\n  }\n});","map":{"version":3,"sources":["server/server.js"],"names":["Meteor","module","watch","require","v","startup","methods","insertInscription","data","console","log","Inscription","insert","connexion","Connexion","message","data3","Message","newContact","data5","Contact","modifierSurnom","userIdNow","contact","newSurnom","update","$set","surnom","notification","sessionID","contactID","idClient1","idClient2","lu","multi","lastMessage","time","deco","connecté"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,SAAOI,CAAP,EAAS;AAACJ,aAAOI,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAIXJ,OAAOK,OAAP,CAAe,MAAM,CACnB;AACD,CAFD;AAIAL,OAAOM,OAAP,CAAe;AACbC,qBAAmB,UAASC,IAAT,EAAe;AAChCC,YAAQC,GAAR,CAAYF,IAAZ,EADgC,CAEhC;;AACA,WAAOG,YAAYC,MAAZ,CAAmBJ,IAAnB,CAAP;AACD;AALY,CAAf;AASAR,OAAOM,OAAP,CAAe;AACbO,aAAW,UAASL,IAAT,EAAe;AACtB,WAAOM,UAAUF,MAAV,CAAiBJ,IAAjB,CAAP;AACD;AAHU,CAAf;AAMAR,OAAOM,OAAP,CAAe;AACbS,WAAS,UAASC,KAAT,EAAgB;AACrB,WAAOC,QAAQL,MAAR,CAAeI,KAAf,CAAP;AACD;AAHU,CAAf;AAMAhB,OAAOM,OAAP,CAAe;AACbY,cAAY,UAASC,KAAT,EAAgB;AACxB,WAAOC,QAAQR,MAAR,CAAeO,KAAf,CAAP;AACD;AAHU,CAAf;AAMAnB,OAAOM,OAAP,CAAe;AACbe,kBAAgB,UAASC,SAAT,EAAoBC,OAApB,EAA6BC,SAA7B,EAAwC;AACtD,WAAOJ,QAAQK,MAAR,CAAe;AACpBH,iBAAWA,SADS;AAEpBC,eAASA;AAFW,KAAf,EAGJ;AACDG,YAAM;AACJC,gBAAQH;AADJ;AADL,KAHI,CAAP;AAQD;AAVY,CAAf;AAaAxB,OAAOM,OAAP,CAAe;AACbsB,gBAAc,UAASC,SAAT,EAAoBC,SAApB,EAA+B;AAC3C,WAAOb,QAAQQ,MAAR,CAAe;AACpBM,iBAAWD,SADS;AAEpBE,iBAAWH,SAFS;AAGpBI,UAAG;AAHiB,KAAf,EAIL;AACAP,YAAM;AACJO,YAAI;AADA;AADN,KAJK,EAQL;AACAC,aAAO;AADP,KARK,CAAP;AAWD;AAbY,CAAf;AAgBAlC,OAAOM,OAAP,CAAe;AACb6B,eAAa,UAASC,IAAT,EAAeP,SAAf,EAA0BC,SAA1B,EAAqC;AAChD,WAAOV,QAAQK,MAAR,CAAe;AACpBF,eAASM,SADW;AAEpBP,iBAAWQ;AAFS,KAAf,EAGJ;AACDJ,YAAM;AACJS,qBAAaC;AADT;AADL,KAHI,CAAP;AAQD;AAVY,CAAf;AAaApC,OAAOM,OAAP,CAAe;AACb+B,QAAM,UAASR,SAAT,EAAoB;AACxB,WAAOf,UAAUW,MAAV,CAAiB;AACtBH,iBAAWO;AADW,KAAjB,EAEJ;AACDH,YAAM;AACJY,kBAAW;AADP;AADL,KAFI,CAAP;AAOD;AATY,CAAf","file":"server/server.js.map","sourcesContent":["import {\r\n  Meteor\r\n} from 'meteor/meteor';\r\n\r\nMeteor.startup(() => {\r\n  // code to run on server at startup\r\n});\r\n\r\nMeteor.methods({\r\n  insertInscription: function(data) {\r\n    console.log(data);\r\n    //retourne l'ID\r\n    return Inscription.insert(data);\r\n  },\r\n});\r\n\r\n\r\nMeteor.methods({\r\n  connexion: function(data) {\r\n      return Connexion.insert(data);\r\n    },\r\n});\r\n\r\nMeteor.methods({\r\n  message: function(data3) {\r\n      return Message.insert(data3);\r\n    },\r\n});\r\n\r\nMeteor.methods({\r\n  newContact: function(data5) {\r\n      return Contact.insert(data5);\r\n    },\r\n});\r\n\r\nMeteor.methods({\r\n  modifierSurnom: function(userIdNow, contact, newSurnom) {\r\n    return Contact.update({\r\n      userIdNow: userIdNow,\r\n      contact: contact\r\n    }, {\r\n      $set: {\r\n        surnom: newSurnom\r\n      }\r\n    });\r\n  },\r\n});\r\n\r\nMeteor.methods({\r\n  notification: function(sessionID, contactID) {\r\n    return Message.update({\r\n      idClient1: contactID,\r\n      idClient2: sessionID,\r\n      lu:\"false\",\r\n    },{\r\n      $set: {\r\n        lu: \"true\"\r\n      }\r\n    },{\r\n      multi: true\r\n    });\r\n  },\r\n});\r\n\r\nMeteor.methods({\r\n  lastMessage: function(time, sessionID, contactID) {\r\n    return Contact.update({\r\n      contact: sessionID,\r\n      userIdNow: contactID,\r\n    }, {\r\n      $set: {\r\n        lastMessage: time,\r\n      }\r\n    });\r\n  },\r\n});\r\n\r\nMeteor.methods({\r\n  deco: function(sessionID) {\r\n    return Connexion.update({\r\n      userIdNow: sessionID,\r\n    }, {\r\n      $set: {\r\n        connecté : \"false\",\r\n      }\r\n    });\r\n  },\r\n});\r\n"]},"hash":"2641f9ddb8a749955fc28816375216f60287a1d1"}
