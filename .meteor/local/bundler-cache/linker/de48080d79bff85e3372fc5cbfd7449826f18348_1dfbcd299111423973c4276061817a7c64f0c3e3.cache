[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nSession = Package.session.Session;\nAccounts = Package['accounts-base'].Accounts;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nLocalStore = Package['frozeman:storage'].LocalStore;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"Chat\":{\"Discussion\":{\"discussion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/Chat/Discussion/discussion.js                                                                 //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nTemplate.discussion.rendered = function () {\n  document.title = \"Actualit√© de vos discussions\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.discussion.helpers({\n  discussion: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    return Contact.find({\n      userIdNow: sessionID\n    }, {\n      sort: {\n        lastMessage: -1\n      }\n    }).fetch();\n  },\n  notification: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var notification = Message.findOne({\n      idClient1: id.contact,\n      idClient2: sessionID,\n      lu: \"false\"\n    });\n\n    if (notification) {\n      return notification;\n    }\n  }\n});\nTemplate.discussion.events({\n  'click .goDiscu': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var contactId = id.contact;\n\n    if (contactId) {\n      LocalStore.set(\"contactID\", contactId);\n      Router.go('/message');\n    }\n\n    ;\n  },\n  'click #goRecherche': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var infoRecherche = $(\"#recherche\").val();\n    var sessionID = LocalStore.get(\"userID\");\n    var hash = {\n      userIdNow: sessionID,\n      recherche: infoRecherche\n    };\n    Meteor.call('recherche', hash);\n    var inscriptionFind = Inscription.find({\n      $or: [{\n        prenom: infoRecherche\n      }, {\n        nom: infoRecherche\n      }, {\n        age: infoRecherche\n      }, {\n        email: infoRecherche\n      }, {\n        pseudo: infoRecherche\n      }]\n    }).fetch();\n    return inscriptionFind;\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"message\":{\"message.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/Chat/message/message.js                                                                       //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nTemplate.message.rendered = function () {\n  document.title = \"Message\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.message.helpers({\n  messages: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    Meteor.call('notification', sessionID, contactID);\n    return Message.find({\n      $or: [{\n        idClient1: sessionID,\n        idClient2: contactID\n      }, {\n        idClient1: contactID,\n        idClient2: sessionID\n      }]\n    }, {\n      sort: {\n        hours: 1\n      }\n    }).fetch();\n  },\n  color: function () {\n    if (this.idClient1 === LocalStore.get(\"userID\")) {\n      return 'text-success text-right';\n    }\n\n    return 'text-danger text-left ';\n  },\n  infoPerso: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var infoPersonne = Contact.find({\n      userIdNow: sessionID,\n      contact: contactID\n    });\n    return infoPersonne;\n  },\n  lastConnexion: function () {\n    var contactID = LocalStore.get(\"contactID\");\n    var sessionID = LocalStore.get(\"sessionID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID\n    });\n\n    if (deco.deconnexion != 0) {\n      var deconnexion = deco.deconnexion;\n      var date = new Date(deconnexion);\n      var day = date.getDate();\n      var month = date.getMonth() + 1;\n      var year = date.getFullYear();\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n      var final = \"Hors ligne depuis \" + day + \"/\" + month + \"/\" + year + \"  \" + hours + \":\" + minutes;\n      return final;\n    } else {\n      return \"En ligne\";\n    }\n  },\n  couleur: function () {\n    var contactID = LocalStore.get(\"contactID\");\n    var sessionID = LocalStore.get(\"sessionID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID\n    });\n\n    if (deco.deconnexion == 0) {\n      return 'text-success';\n    } else {\n      return 'text-danger';\n    }\n  }\n});\nTemplate.message.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var find = Connexion.findOne({\n      userIdNow: sessionID\n    });\n    var message = event.target.message.value;\n\n    if (message) {\n      var now = new Date();\n      var hash3 = {\n        idClient1: sessionID,\n        idClient2: contactID,\n        message: message,\n        lu: \"false\",\n        hours: now.getTime()\n      };\n      var time = now.getTime();\n      Meteor.call('message', hash3, function (data3) {});\n      Meteor.call('lastMessage', time, sessionID, contactID);\n      $('#messages').val('');\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"Contact\":{\"contact\":{\"contact.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/Contact/contact/contact.js                                                                    //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nTemplate.contact.rendered = function () {\n  document.title = \"Contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.contact.helpers({\n  contacter: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var last = Contact.find({\n      userIdNow: sessionID\n    }).fetch();\n\n    if (last) {\n      return last;\n    }\n\n    ;\n  }\n});\nTemplate.contact.events({\n  'click .modifier': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var contactId = id.contact;\n\n    if (contactId) {\n      LocalStore.set(\"newContactID\", contactId);\n      Router.go('/modifier');\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"newContact\":{\"newContact.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/Contact/newContact/newContact.js                                                              //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nTemplate.newContact.rendered = function () {\n  document.title = \"Nouveau contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.newContact.helpers({\n  nom: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.nom;\n    }\n  },\n  prenom: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.prenom;\n    }\n  },\n  age: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.age;\n    }\n  },\n  pseudo: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.pseudo;\n    }\n  },\n  email: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.email;\n    }\n  }\n});\nTemplate.newContact.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (trouver) {\n      var nom = trouver.nom;\n      var prenom = trouver.prenom;\n      var pseudo = trouver.pseudo;\n      var age = trouver.age;\n      var email = trouver.email;\n      var surnom = event.target.surnom.value;\n      var now = new Date();\n      var hash5 = {\n        userIdNow: LocalStore.get(\"userID\"),\n        nom: nom,\n        prenom: prenom,\n        age: age,\n        email: email,\n        pseudo: pseudo,\n        surnom: surnom,\n        contact: LocalStore.get(\"newContactID\"),\n        hours: now.getTime(),\n        lastMessage: 0\n      };\n      Meteor.call('newContact', hash5);\n      Router.go('/contact');\n      LocalStore.set(\"newContactID\", null);\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"accueil\":{\"accueil.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/accueil/accueil.js                                                                            //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nTemplate.accueil.rendered = function () {\n  document.title = \"Accueil\";\n};\n\nTemplate.accueil.helpers({\n  prenomAccueil: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n  contacter: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var contacts = Contact.find({\n      userIdNow: sessionID\n    }).fetch();\n\n    var ids = _.pluck(contacts, 'contact');\n\n    ids.push(sessionID);\n    return Inscription.find({\n      _id: {\n        $nin: ids\n      }\n    }).fetch();\n  },\n  connect√©: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var contacts = Inscription.find({\n      etat: \"true\"\n    }).fetch();\n\n    var ids = _.pluck(contacts, '_id');\n\n    ids.push(sessionID);\n    return Contact.find({\n      contact: {\n        $in: ids\n      },\n      userIdNow: sessionID\n    }).fetch();\n  }\n});\nTemplate.accueil.events({\n  'click .goAjouter': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var identifiant = Inscription.findOne({\n      _id: this._id\n    });\n    var id = identifiant._id;\n\n    if (id) {\n      LocalStore.set(\"newContactID\", id);\n      Router.go('/newContact');\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"connexion\":{\"connexion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/connexion/connexion.js                                                                        //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nTemplate.connexion.rendered = function () {\n  document.title = \"Connexion\";\n};\n\nTemplate.connexion.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var pseudo_connexion = event.target.pseudo_connexion.value;\n    var password_connexion = event.target.password_connexion.value;\n    var controle_user = Inscription.findOne({\n      pseudo: pseudo_connexion\n    });\n    var userIdNow = controle_user._id;\n    var now = new Date();\n\n    if (controle_user) {\n      if (controle_user.password != password_connexion) {\n        alert(\"Le mot de passe n'est pas juste !\");\n      } else {\n        var pseudoInscription = Inscription.findOne({\n          pseudo: pseudo_connexion\n        });\n\n        if (pseudoInscription) {\n          var alreadyConnexion = Connexion.findOne({\n            userIdNow: pseudoInscription._id\n          });\n\n          if (!alreadyConnexion) {\n            LocalStore.set(\"userID\", userIdNow);\n            var hash = {\n              userIdNow: controle_user._id,\n              hours: now.getTime(),\n              deconnexion: 0\n            };\n            Meteor.call('connexion', hash, function (data) {\n              if (LocalStore.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          } else {\n            LocalStore.set(\"userID\", userIdNow);\n            Meteor.call('dec0', userIdNow);\n            Meteor.call('etat', userIdNow, function (data) {\n              if (LocalStore.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          }\n        }\n\n        Router.go('/accueil');\n      }\n    } else {\n      alert(\"Le pseudo n'est pas juste !\");\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"deconnexion\":{\"deconnexion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/deconnexion/deconnexion.js                                                                    //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nTemplate.deconnexion.rendered = function () {\n  document.title = \"D√©connexion\";\n\n  if (confirm(\"Tu veux te d√©connecter\")) {\n    var sessionID = LocalStore.get(\"userID\");\n    var heure = new Date();\n    var heureDeco = heure.getTime();\n    Meteor.call('deco', sessionID);\n    Meteor.call('heureDeco', sessionID, heureDeco);\n    LocalStore.set(\"userID\", null);\n\n    if (LocalStore.get(\"userID\") == null) {\n      Router.go('/connexion');\n    }\n\n    ;\n  } else {\n    Router.go('/accueil');\n  }\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"inscription\":{\"inscription.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/inscription/inscription.js                                                                    //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nTemplate.inscription.rendered = function () {\n  document.title = \"Insciption\";\n};\n\nTemplate.inscription.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var mdp1 = event.target.mdp1.value;\n    var mdp2 = event.target.mdp2.value;\n    var pseudo = event.target.pseudo.value;\n    var pseudoDb = Inscription.findOne({\n      pseudo: pseudo\n    });\n\n    if (mdp1 == mdp2) {\n      if (mdp1.length > 3) {\n        if (!pseudoDb) {\n          alert(\"Merci de l'inscription !\");\n          var hash = {\n            nom: event.target.name.value,\n            prenom: event.target.prenom.value,\n            age: event.target.age.value,\n            email: event.target.email.value,\n            pseudo: event.target.pseudo.value,\n            password: event.target.mdp1.value,\n            etat: \"false\"\n          };\n          Meteor.call('insertInscription', hash, function (error, result) {\n            if (result) {\n              Router.go('/connexion');\n            }\n\n            if (error) {\n              console.log(error);\n            }\n          });\n        } else {\n          alert(\"Le pseudo que vous avez choisi est d√©j√† utilis√© !\");\n        }\n      } else {\n        alert(\"Votre mot de passe est trop court !\");\n      }\n\n      ;\n    } else {\n      alert(\"Vos mots de passe ne sont pas identiques ! \");\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"modifier\":{\"modifier.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/modifier/modifier.js                                                                          //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nTemplate.modifier.rendered = function () {\n  document.title = \"Modifier\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID && find != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.modifier.helpers({\n  nom: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.nom;\n    }\n  },\n  prenom: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.prenom;\n    }\n  },\n  age: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.age;\n    }\n  },\n  pseudo: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.pseudo;\n    }\n  },\n  email: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.email;\n    }\n  }\n});\nTemplate.modifier.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (trouver) {\n      var newSurnom = event.target.surnom.value;\n      var userIdNow = LocalStore.get(\"userID\");\n      var contact = LocalStore.get(\"newContactID\");\n\n      if (newSurnom) {\n        Meteor.call('modifierSurnom', userIdNow, contact, newSurnom, function () {});\n        Router.go('/contact'); //    LocalStore.set(\"newContactID\", null);\n      }\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"profil\":{\"profil.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/profil/profil.js                                                                              //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nTemplate.profil.rendered = function () {\n  document.title = \"Profil\";\n};\n\nTemplate.profil.helpers({\n  prenom: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"deco.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// client/deco.js                                                                                       //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Router\":{\"router.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// Router/router.js                                                                                     //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nRouter.configure({\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound'\n});\nRouter.route('/inscription', {\n  name: 'inscription'\n});\nRouter.route('/connexion', {\n  name: 'connexion'\n});\nRouter.route('/accueil', {\n  name: 'accueil'\n});\nRouter.route('/message', {\n  name: 'message'\n});\nRouter.route('/contact', {\n  name: 'contact'\n});\nRouter.route('/newContact', {\n  name: 'newContact'\n});\nRouter.route('/discussion', {\n  name: 'discussion'\n});\nRouter.route('/deconnexion', {\n  name: 'deconnexion'\n});\nRouter.route('/profil', {\n  name: 'profil'\n});\nRouter.route('/modifier', {\n  name: 'modifier'\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collection\":{\"collection.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                      //\n// collection/collection.js                                                                             //\n//                                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                        //\nInscription = new Mongo.Collection(\"inscription\");\nConnexion = new Mongo.Collection(\"connexion\");\nMessage = new Mongo.Collection(\"message\");\nContact = new Mongo.Collection(\"contact\");\nRecherche = new Mongo.Collection(\"recherche\");\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\nrequire(\"/client/Chat/Discussion/discussion.js\");\nrequire(\"/client/Chat/message/message.js\");\nrequire(\"/client/Contact/contact/contact.js\");\nrequire(\"/client/Contact/newContact/newContact.js\");\nrequire(\"/client/accueil/accueil.js\");\nrequire(\"/client/connexion/connexion.js\");\nrequire(\"/client/deconnexion/deconnexion.js\");\nrequire(\"/client/inscription/inscription.js\");\nrequire(\"/client/modifier/modifier.js\");\nrequire(\"/client/profil/profil.js\");\nrequire(\"/Router/router.js\");\nrequire(\"/client/deco.js\");\nrequire(\"/collection/collection.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/Chat/Discussion/discussion.js","client/Chat/message/message.js","client/Contact/contact/contact.js","client/Contact/newContact/newContact.js","client/accueil/accueil.js","client/connexion/connexion.js","client/deconnexion/deconnexion.js","client/inscription/inscription.js","client/modifier/modifier.js","client/profil/profil.js","Router/router.js","collection/collection.js"],"names":["Template","discussion","rendered","document","title","sessionID","LocalStore","get","find","Connexion","findOne","userIdNow","Router","go","helpers","Contact","sort","lastMessage","fetch","notification","contactID","id","_id","Message","idClient1","contact","idClient2","lu","events","event","preventDefault","stopPropagation","contactId","set","infoRecherche","$","val","hash","recherche","Meteor","call","inscriptionFind","Inscription","$or","prenom","nom","age","email","pseudo","message","messages","hours","color","infoPerso","infoPersonne","lastConnexion","deco","deconnexion","date","Date","day","getDate","month","getMonth","year","getFullYear","getHours","minutes","getMinutes","final","couleur","target","value","now","hash3","getTime","time","data3","contacter","last","newContact","trouver","surnom","hash5","accueil","prenomAccueil","contacts","ids","_","pluck","push","$nin","connect√©","etat","$in","identifiant","connexion","pseudo_connexion","password_connexion","controle_user","password","alert","pseudoInscription","alreadyConnexion","data","confirm","heure","heureDeco","inscription","mdp1","mdp2","pseudoDb","length","name","error","result","console","log","modifier","newSurnom","profil","configure","loadingTemplate","notFoundTemplate","route","Mongo","Collection","Recherche"],"mappings":";;;;;;;;AAAAA,SAASC,UAAT,CAAoBC,QAApB,GAA+B,YAAW;AACxCC,WAASC,KAAT,GAAiB,8BAAjB;AACA,MAAIC,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,MAAIC,OAAOC,UAAUC,OAAV,CAAkB;AAC3BC,eAAWN;AADgB,GAAlB,CAAX;;AAGA,MAAI,CAACA,SAAD,IAAcG,QAAQH,aAAaG,KAAKG,SAA5C,EAAuD;AACrDC,WAAOC,EAAP,CAAU,YAAV;AACD;AACF,CATD;;AAWAb,SAASC,UAAT,CAAoBa,OAApB,CAA4B;AAC1Bb,cAAY,YAAW;AACrB,QAAII,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,WAAOQ,QAAQP,IAAR,CAAa;AAClBG,iBAAWN;AADO,KAAb,EAEJ;AACDW,YAAM;AACJC,qBAAa,CAAC;AADV;AADL,KAFI,EAMJC,KANI,EAAP;AAOD,GAVyB;AAY1BC,gBAAc,YAAW;AACvB,QAAId,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,QAAIa,YAAYd,WAAWC,GAAX,CAAe,WAAf,CAAhB;AACA,QAAIc,KAAKN,QAAQL,OAAR,CAAgB;AACvBY,WAAK,KAAKA;AADa,KAAhB,CAAT;AAGA,QAAIH,eAAeI,QAAQb,OAAR,CAAgB;AACjCc,iBAAWH,GAAGI,OADmB;AAEjCC,iBAAWrB,SAFsB;AAGjCsB,UAAI;AAH6B,KAAhB,CAAnB;;AAKA,QAAIR,YAAJ,EAAkB;AAChB,aAAOA,YAAP;AACD;AACF;AA1ByB,CAA5B;AA6BAnB,SAASC,UAAT,CAAoB2B,MAApB,CAA2B;AACzB,oBAAkB,UAASC,KAAT,EAAgB;AAChCA,UAAMC,cAAN;AACAD,UAAME,eAAN;AACA,QAAIV,KAAKN,QAAQL,OAAR,CAAgB;AACvBY,WAAK,KAAKA;AADa,KAAhB,CAAT;AAGA,QAAIU,YAAYX,GAAGI,OAAnB;;AACA,QAAIO,SAAJ,EAAe;AACb1B,iBAAW2B,GAAX,CAAe,WAAf,EAA4BD,SAA5B;AACApB,aAAOC,EAAP,CAAU,UAAV;AACD;;AAAA;AACF,GAZwB;AAczB,wBAAsB,UAASgB,KAAT,EAAgB;AAClCA,UAAMC,cAAN;AACAD,UAAME,eAAN;AACA,QAAIG,gBAAgBC,EAAE,YAAF,EAAgBC,GAAhB,EAApB;AACA,QAAI/B,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,QAAI8B,OAAQ;AACV1B,iBAAWN,SADD;AAEViC,iBAAWJ;AAFD,KAAZ;AAIAK,WAAOC,IAAP,CAAY,WAAZ,EAAyBH,IAAzB;AACA,QAAII,kBAAkBC,YAAYlC,IAAZ,CAAiB;AACrCmC,WAAK,CAAC;AACJC,gBAAQV;AADJ,OAAD,EAEF;AACDW,aAAKX;AADJ,OAFE,EAIF;AACDY,aAAKZ;AADJ,OAJE,EAMF;AACDa,eAAOb;AADN,OANE,EAQF;AACDc,gBAAQd;AADP,OARE;AADgC,KAAjB,EAYnBhB,KAZmB,EAAtB;AAaA,WAAOuB,eAAP;AACH;AAtCwB,CAA3B,E;;;;;;;;;;;ACxCAzC,SAASiD,OAAT,CAAiB/C,QAAjB,GAA4B,YAAW;AACrCC,WAASC,KAAT,GAAiB,SAAjB;AACA,MAAIC,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,MAAIC,OAAOC,UAAUC,OAAV,CAAkB;AAC3BC,eAAWN;AADgB,GAAlB,CAAX;;AAGA,MAAI,CAACA,SAAD,IAAcG,QAAQH,aAAaG,KAAKG,SAA5C,EAAuD;AACrDC,WAAOC,EAAP,CAAU,YAAV;AACD;AACF,CATD;;AAYAb,SAASiD,OAAT,CAAiBnC,OAAjB,CAAyB;AACvBoC,YAAU,YAAW;AACnB,QAAI7C,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,QAAIa,YAAYd,WAAWC,GAAX,CAAe,WAAf,CAAhB;AACAgC,WAAOC,IAAP,CAAY,cAAZ,EAA4BnC,SAA5B,EAAuCe,SAAvC;AACA,WAAOG,QAAQf,IAAR,CAAa;AAClBmC,WAAK,CAAC;AACJnB,mBAAWnB,SADP;AAEJqB,mBAAWN;AAFP,OAAD,EAGF;AACDI,mBAAWJ,SADV;AAEDM,mBAAWrB;AAFV,OAHE;AADa,KAAb,EAQJ;AACDW,YAAM;AACJmC,eAAO;AADH;AADL,KARI,EAYJjC,KAZI,EAAP;AAaD,GAlBsB;AAoBvBkC,SAAO,YAAW;AAChB,QAAI,KAAK5B,SAAL,KAAmBlB,WAAWC,GAAX,CAAe,QAAf,CAAvB,EAAiD;AAC/C,aAAO,yBAAP;AACD;;AACD,WAAO,wBAAP;AACD,GAzBsB;AA2BvB8C,aAAW,YAAW;AACpB,QAAIhD,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,QAAIa,YAAYd,WAAWC,GAAX,CAAe,WAAf,CAAhB;AACA,QAAI+C,eAAevC,QAAQP,IAAR,CAAa;AAC9BG,iBAAWN,SADmB;AAE9BoB,eAASL;AAFqB,KAAb,CAAnB;AAIA,WAAOkC,YAAP;AACD,GAnCsB;AAqCvBC,iBAAe,YAAW;AACxB,QAAInC,YAAYd,WAAWC,GAAX,CAAe,WAAf,CAAhB;AACA,QAAIF,YAAYC,WAAWC,GAAX,CAAe,WAAf,CAAhB;AACA,QAAIiD,OAAO/C,UAAUC,OAAV,CAAkB;AAC3BC,iBAAWS;AADgB,KAAlB,CAAX;;AAGA,QAAGoC,KAAKC,WAAL,IAAoB,CAAvB,EAAyB;AACvB,UAAIA,cAAcD,KAAKC,WAAvB;AACA,UAAIC,OAAO,IAAIC,IAAJ,CAASF,WAAT,CAAX;AACA,UAAIG,MAAMF,KAAKG,OAAL,EAAV;AACA,UAAIC,QAAQJ,KAAKK,QAAL,KAAgB,CAA5B;AACA,UAAIC,OAAON,KAAKO,WAAL,EAAX;AACA,UAAId,QAAQO,KAAKQ,QAAL,EAAZ;AACA,UAAIC,UAAWT,KAAKU,UAAL,EAAf;AACA,UAAIC,QAAQ,uBAAqBT,GAArB,GAAyB,GAAzB,GAA6BE,KAA7B,GAAmC,GAAnC,GAAuCE,IAAvC,GAA4C,IAA5C,GAAiDb,KAAjD,GAAwD,GAAxD,GAA4DgB,OAAxE;AACA,aAAOE,KAAP;AACD,KAVD,MAUK;AACH,aAAO,UAAP;AACD;AACF,GAxDsB;AA0DvBC,WAAS,YAAU;AACjB,QAAIlD,YAAYd,WAAWC,GAAX,CAAe,WAAf,CAAhB;AACA,QAAIF,YAAYC,WAAWC,GAAX,CAAe,WAAf,CAAhB;AACA,QAAIiD,OAAO/C,UAAUC,OAAV,CAAkB;AAC3BC,iBAAWS;AADgB,KAAlB,CAAX;;AAGA,QAAGoC,KAAKC,WAAL,IAAoB,CAAvB,EAAyB;AACvB,aAAO,cAAP;AACD,KAFD,MAEK;AACH,aAAO,aAAP;AACD;AACF;AArEsB,CAAzB;AA0EAzD,SAASiD,OAAT,CAAiBrB,MAAjB,CAAwB;AACtB,iBAAe,UAASC,KAAT,EAAgB;AAC7BA,UAAMC,cAAN;AACAD,UAAME,eAAN;AACA,QAAI1B,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,QAAIa,YAAYd,WAAWC,GAAX,CAAe,WAAf,CAAhB;AACA,QAAIC,OAAOC,UAAUC,OAAV,CAAkB;AAC3BC,iBAAWN;AADgB,KAAlB,CAAX;AAGA,QAAI4C,UAAUpB,MAAM0C,MAAN,CAAatB,OAAb,CAAqBuB,KAAnC;;AACA,QAAIvB,OAAJ,EAAa;AACX,UAAIwB,MAAM,IAAId,IAAJ,EAAV;AACA,UAAIe,QAAQ;AACVlD,mBAAWnB,SADD;AAEVqB,mBAAWN,SAFD;AAGV6B,iBAASA,OAHC;AAIVtB,YAAI,OAJM;AAKVwB,eAAOsB,IAAIE,OAAJ;AALG,OAAZ;AAOA,UAAIC,OAAOH,IAAIE,OAAJ,EAAX;AACApC,aAAOC,IAAP,CAAY,SAAZ,EAAuBkC,KAAvB,EAA8B,UAASG,KAAT,EAAgB,CAAE,CAAhD;AACAtC,aAAOC,IAAP,CAAY,aAAZ,EAA2BoC,IAA3B,EAAiCvE,SAAjC,EAA4Ce,SAA5C;AACAe,QAAE,WAAF,EAAeC,GAAf,CAAmB,EAAnB;AACD;AACF;AAxBqB,CAAxB,E;;;;;;;;;;;ACtFApC,SAASyB,OAAT,CAAiBvB,QAAjB,GAA4B,YAAW;AACrCC,WAASC,KAAT,GAAiB,SAAjB;AACA,MAAIC,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,MAAIC,OAAOC,UAAUC,OAAV,CAAkB;AAC3BC,eAAWN;AADgB,GAAlB,CAAX;;AAGA,MAAI,CAACA,SAAD,IAAcG,QAAQH,aAAaG,KAAKG,SAA5C,EAAuD;AACrDC,WAAOC,EAAP,CAAU,YAAV;AACD;AACF,CATD;;AAYAb,SAASyB,OAAT,CAAiBX,OAAjB,CAAyB;AACvBgE,aAAW,YAAW;AACpB,QAAIzE,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,QAAIwE,OAAOhE,QAAQP,IAAR,CAAa;AACtBG,iBAAWN;AADW,KAAb,EAERa,KAFQ,EAAX;;AAGA,QAAI6D,IAAJ,EAAU;AACR,aAAOA,IAAP;AACD;;AAAA;AACF;AATsB,CAAzB;AAYA/E,SAASyB,OAAT,CAAiBG,MAAjB,CAAwB;AACtB,qBAAmB,UAASC,KAAT,EAAgB;AACjCA,UAAMC,cAAN;AACAD,UAAME,eAAN;AAEA,QAAIV,KAAKN,QAAQL,OAAR,CAAgB;AACvBY,WAAK,KAAKA;AADa,KAAhB,CAAT;AAGA,QAAIU,YAAYX,GAAGI,OAAnB;;AACA,QAAIO,SAAJ,EAAe;AACb1B,iBAAW2B,GAAX,CAAe,cAAf,EAA+BD,SAA/B;AACApB,aAAOC,EAAP,CAAU,WAAV;AACD;AACA;AAbmB,CAAxB,E;;;;;;;;;;;ACxBAb,SAASgF,UAAT,CAAoB9E,QAApB,GAA+B,YAAW;AACxCC,WAASC,KAAT,GAAiB,iBAAjB;AACA,MAAIC,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,MAAIC,OAAOC,UAAUC,OAAV,CAAkB;AAC3BC,eAAWN;AADgB,GAAlB,CAAX;;AAGA,MAAI,CAACA,SAAD,IAAcA,aAAaG,KAAKG,SAApC,EAA+C;AAC7CC,WAAOC,EAAP,CAAU,YAAV;AACD;AACF,CATD;;AAYAb,SAASgF,UAAT,CAAoBlE,OAApB,CAA4B;AAC1B+B,OAAM,YAAU;AACd,QAAImC,aAAatC,YAAYhC,OAAZ,CAAoB;AACnCY,WAAMhB,WAAWC,GAAX,CAAe,cAAf;AAD6B,KAApB,CAAjB;;AAGA,QAAGyE,UAAH,EAAc;AACZ,aAAOA,WAAWnC,GAAlB;AACD;AACF,GARyB;AAU5BD,UAAS,YAAU;AACjB,QAAIoC,aAAatC,YAAYhC,OAAZ,CAAoB;AACnCY,WAAMhB,WAAWC,GAAX,CAAe,cAAf;AAD6B,KAApB,CAAjB;;AAGA,QAAGyE,UAAH,EAAc;AACZ,aAAOA,WAAWpC,MAAlB;AACD;AACF,GAjB2B;AAmB5BE,OAAM,YAAU;AACd,QAAIkC,aAAatC,YAAYhC,OAAZ,CAAoB;AACnCY,WAAMhB,WAAWC,GAAX,CAAe,cAAf;AAD6B,KAApB,CAAjB;;AAGA,QAAGyE,UAAH,EAAc;AACZ,aAAOA,WAAWlC,GAAlB;AACD;AACF,GA1B2B;AA4B5BE,UAAS,YAAU;AACjB,QAAIgC,aAAatC,YAAYhC,OAAZ,CAAoB;AACnCY,WAAMhB,WAAWC,GAAX,CAAe,cAAf;AAD6B,KAApB,CAAjB;;AAGA,QAAGyE,UAAH,EAAc;AACZ,aAAOA,WAAWhC,MAAlB;AACD;AACF,GAnC2B;AAoC5BD,SAAQ,YAAU;AAChB,QAAIiC,aAAatC,YAAYhC,OAAZ,CAAoB;AACnCY,WAAMhB,WAAWC,GAAX,CAAe,cAAf;AAD6B,KAApB,CAAjB;;AAGA,QAAGyE,UAAH,EAAc;AACZ,aAAOA,WAAWjC,KAAlB;AACD;AACF;AA3C2B,CAA5B;AA8CA/C,SAASgF,UAAT,CAAoBpD,MAApB,CAA2B;AACzB,iBAAe,UAASC,KAAT,EAAgB;AAC7BA,UAAMC,cAAN;AACAD,UAAME,eAAN;AACA,QAAIkD,UAAUvC,YAAYhC,OAAZ,CAAoB;AAChCY,WAAKhB,WAAWC,GAAX,CAAe,cAAf;AAD2B,KAApB,CAAd;;AAGA,QAAI0E,OAAJ,EAAa;AACT,UAAIpC,MAAMoC,QAAQpC,GAAlB;AACA,UAAID,SAASqC,QAAQrC,MAArB;AACA,UAAII,SAASiC,QAAQjC,MAArB;AACA,UAAIF,MAAMmC,QAAQnC,GAAlB;AACA,UAAIC,QAAQkC,QAAQlC,KAApB;AACA,UAAImC,SAASrD,MAAM0C,MAAN,CAAaW,MAAb,CAAoBV,KAAjC;AACA,UAAIC,MAAM,IAAId,IAAJ,EAAV;AACA,UAAIwB,QAAQ;AACVxE,mBAAWL,WAAWC,GAAX,CAAe,QAAf,CADD;AAEVsC,aAAKA,GAFK;AAGVD,gBAAQA,MAHE;AAIVE,aAAKA,GAJK;AAKVC,eAAOA,KALG;AAMVC,gBAAQA,MANE;AAOVkC,gBAAQA,MAPE;AAQVzD,iBAASnB,WAAWC,GAAX,CAAe,cAAf,CARC;AASV4C,eAAOsB,IAAIE,OAAJ,EATG;AAUV1D,qBAAc;AAVJ,OAAZ;AAYAsB,aAAOC,IAAP,CAAY,YAAZ,EAA0B2C,KAA1B;AACAvE,aAAOC,EAAP,CAAU,UAAV;AACQP,iBAAW2B,GAAX,CAAe,cAAf,EAA+B,IAA/B;AACT;AACJ;AA/BwB,CAA3B,E;;;;;;;;;;;AC1DAjC,SAASoF,OAAT,CAAiBlF,QAAjB,GAA4B,YAAW;AACrCC,WAASC,KAAT,GAAiB,SAAjB;AACD,CAFD;;AAKAJ,SAASoF,OAAT,CAAiBtE,OAAjB,CAAyB;AACvBuE,iBAAe,YAAW;AACxB,QAAIhF,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,QAAIC,OAAOkC,YAAYhC,OAAZ,CAAoB;AAC7BY,WAAKjB;AADwB,KAApB,CAAX;;AAIA,QAAIG,IAAJ,EAAU;AACR,aAAOA,KAAKoC,MAAZ;AACD;AACF,GAVsB;AAYvBkC,aAAW,YAAW;AACpB,QAAIzE,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AAEA,QAAI+E,WAAWvE,QAAQP,IAAR,CAAa;AAC1BG,iBAAWN;AADe,KAAb,EAEZa,KAFY,EAAf;;AAGA,QAAIqE,MAAMC,EAAEC,KAAF,CAAQH,QAAR,EAAkB,SAAlB,CAAV;;AACAC,QAAIG,IAAJ,CAASrF,SAAT;AACA,WAAOqC,YAAYlC,IAAZ,CAAiB;AACtBc,WAAK;AACHqE,cAAMJ;AADH;AADiB,KAAjB,EAIJrE,KAJI,EAAP;AAKD,GAzBsB;AA2BvB0E,YAAU,YAAW;AACnB,QAAIvF,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,QAAI+E,WAAW5C,YAAYlC,IAAZ,CAAiB;AAC9BqF,YAAO;AADuB,KAAjB,EAEZ3E,KAFY,EAAf;;AAGA,QAAIqE,MAAMC,EAAEC,KAAF,CAAQH,QAAR,EAAkB,KAAlB,CAAV;;AACAC,QAAIG,IAAJ,CAASrF,SAAT;AACA,WAAOU,QAAQP,IAAR,CAAa;AAClBiB,eAAS;AACPqE,aAAKP;AADE,OADS;AAIlB5E,iBAAWN;AAJO,KAAb,EAKJa,KALI,EAAP;AAMD;AAxCsB,CAAzB;AA2CAlB,SAASoF,OAAT,CAAiBxD,MAAjB,CAAwB;AACtB,sBAAoB,UAASC,KAAT,EAAgB;AAClCA,UAAMC,cAAN;AACAD,UAAME,eAAN;AACA,QAAIgE,cAAcrD,YAAYhC,OAAZ,CAAoB;AACpCY,WAAK,KAAKA;AAD0B,KAApB,CAAlB;AAGA,QAAID,KAAK0E,YAAYzE,GAArB;;AACA,QAAID,EAAJ,EAAQ;AACNf,iBAAW2B,GAAX,CAAe,cAAf,EAA+BZ,EAA/B;AACAT,aAAOC,EAAP,CAAU,aAAV;AACD;AACF;AAZqB,CAAxB,E;;;;;;;;;;;AChDAb,SAASgG,SAAT,CAAmB9F,QAAnB,GAA8B,YAAW;AACvCC,WAASC,KAAT,GAAiB,WAAjB;AACD,CAFD;;AAKAJ,SAASgG,SAAT,CAAmBpE,MAAnB,CAA0B;AACxB,iBAAe,UAASC,KAAT,EAAgB;AAC7BA,UAAMC,cAAN;AACAD,UAAME,eAAN;AAEA,QAAIkE,mBAAmBpE,MAAM0C,MAAN,CAAa0B,gBAAb,CAA8BzB,KAArD;AACA,QAAI0B,qBAAqBrE,MAAM0C,MAAN,CAAa2B,kBAAb,CAAgC1B,KAAzD;AACA,QAAI2B,gBAAgBzD,YAAYhC,OAAZ,CAAoB;AACtCsC,cAAQiD;AAD8B,KAApB,CAApB;AAGA,QAAItF,YAAYwF,cAAc7E,GAA9B;AACA,QAAImD,MAAM,IAAId,IAAJ,EAAV;;AACA,QAAIwC,aAAJ,EAAmB;AACjB,UAAIA,cAAcC,QAAd,IAA0BF,kBAA9B,EAAkD;AAChDG,cAAM,mCAAN;AACD,OAFD,MAEO;AACL,YAAIC,oBAAoB5D,YAAYhC,OAAZ,CAAoB;AAC1CsC,kBAAQiD;AADkC,SAApB,CAAxB;;AAGA,YAAIK,iBAAJ,EAAuB;AACrB,cAAIC,mBAAmB9F,UAAUC,OAAV,CAAkB;AACvCC,uBAAW2F,kBAAkBhF;AADU,WAAlB,CAAvB;;AAGA,cAAI,CAACiF,gBAAL,EAAuB;AACrBjG,uBAAW2B,GAAX,CAAe,QAAf,EAAyBtB,SAAzB;AACA,gBAAI0B,OAAO;AACT1B,yBAAWwF,cAAc7E,GADhB;AAET6B,qBAAOsB,IAAIE,OAAJ,EAFE;AAGTlB,2BAAa;AAHJ,aAAX;AAKAlB,mBAAOC,IAAP,CAAY,WAAZ,EAAyBH,IAAzB,EAA+B,UAASmE,IAAT,EAAe;AAC5C,kBAAIlG,WAAWC,GAAX,CAAe,QAAf,CAAJ,EAA8B;AAC5BsB,sBAAMC,cAAN;AACD;AACF,aAJD;AAKD,WAZD,MAYO;AACLxB,uBAAW2B,GAAX,CAAe,QAAf,EAAyBtB,SAAzB;AACA4B,mBAAOC,IAAP,CAAY,MAAZ,EAAoB7B,SAApB;AACA4B,mBAAOC,IAAP,CAAY,MAAZ,EAAoB7B,SAApB,EAA8B,UAAS6F,IAAT,EAAe;AAC3C,kBAAIlG,WAAWC,GAAX,CAAe,QAAf,CAAJ,EAA8B;AAC5BsB,sBAAMC,cAAN;AACD;AACF,aAJD;AAKD;AACF;;AACDlB,eAAOC,EAAP,CAAU,UAAV;AACD;AACF,KAnCD,MAmCO;AACLwF,YAAM,6BAAN;AACD;AACF;AAlDuB,CAA1B,E;;;;;;;;;;;ACLArG,SAASyD,WAAT,CAAqBvD,QAArB,GAAgC,YAAU;AACpCC,WAASC,KAAT,GAAiB,aAAjB;;AACA,MAAGqG,QAAQ,wBAAR,CAAH,EAAqC;AACnC,QAAIpG,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,QAAImG,QAAQ,IAAI/C,IAAJ,EAAZ;AACA,QAAIgD,YAAYD,MAAM/B,OAAN,EAAhB;AACApC,WAAOC,IAAP,CAAY,MAAZ,EAAoBnC,SAApB;AACAkC,WAAOC,IAAP,CAAY,WAAZ,EAAyBnC,SAAzB,EAAoCsG,SAApC;AACArG,eAAW2B,GAAX,CAAe,QAAf,EAAyB,IAAzB;;AACA,QAAI3B,WAAWC,GAAX,CAAe,QAAf,KAA4B,IAAhC,EAAsC;AACpCK,aAAOC,EAAP,CAAU,YAAV;AACD;;AAAA;AACF,GAVD,MAUK;AACHD,WAAOC,EAAP,CAAU,UAAV;AACD;AACF,CAfL,C;;;;;;;;;;;ACAAb,SAAS4G,WAAT,CAAqB1G,QAArB,GAAgC,YAAW;AACzCC,WAASC,KAAT,GAAiB,YAAjB;AACD,CAFD;;AAIAJ,SAAS4G,WAAT,CAAqBhF,MAArB,CAA4B;AAC1B,iBAAe,UAASC,KAAT,EAAgB;AAC7BA,UAAMC,cAAN;AACAD,UAAME,eAAN;AACA,QAAI8E,OAAOhF,MAAM0C,MAAN,CAAasC,IAAb,CAAkBrC,KAA7B;AACA,QAAIsC,OAAOjF,MAAM0C,MAAN,CAAauC,IAAb,CAAkBtC,KAA7B;AACA,QAAIxB,SAASnB,MAAM0C,MAAN,CAAavB,MAAb,CAAoBwB,KAAjC;AACA,QAAIuC,WAAWrE,YAAYhC,OAAZ,CAAoB;AACjCsC,cAAQA;AADyB,KAApB,CAAf;;AAGA,QAAI6D,QAAQC,IAAZ,EAAkB;AAChB,UAAID,KAAKG,MAAL,GAAc,CAAlB,EAAqB;AACnB,YAAI,CAACD,QAAL,EAAe;AACbV,gBAAM,0BAAN;AACA,cAAIhE,OAAO;AACTQ,iBAAahB,MAAM0C,MAAN,CAAa0C,IAAb,CAAkBzC,KADtB;AAET5B,oBAAaf,MAAM0C,MAAN,CAAa3B,MAAb,CAAoB4B,KAFxB;AAGT1B,iBAAajB,MAAM0C,MAAN,CAAazB,GAAb,CAAiB0B,KAHrB;AAITzB,mBAAalB,MAAM0C,MAAN,CAAaxB,KAAb,CAAmByB,KAJvB;AAKTxB,oBAAanB,MAAM0C,MAAN,CAAavB,MAAb,CAAoBwB,KALxB;AAMT4B,sBAAavE,MAAM0C,MAAN,CAAasC,IAAb,CAAkBrC,KANtB;AAOTqB,kBAAa;AAPJ,WAAX;AASAtD,iBAAOC,IAAP,CAAY,mBAAZ,EAAiCH,IAAjC,EAAuC,UAAS6E,KAAT,EAAgBC,MAAhB,EAAwB;AAC7D,gBAAIA,MAAJ,EAAY;AACVvG,qBAAOC,EAAP,CAAU,YAAV;AACD;;AACD,gBAAIqG,KAAJ,EAAW;AACTE,sBAAQC,GAAR,CAAYH,KAAZ;AACD;AACF,WAPD;AAQE,SAnBJ,MAoBM;AACJb,gBAAM,mDAAN;AACA;AACD,OAxBH,MAyBM;AACJA,cAAM,qCAAN;AACD;;AAAA;AAEF,KA9BD,MA+BM;AACJA,YAAM,6CAAN;AACD;AACF;AA5CyB,CAA5B,E;;;;;;;;;;;ACJArG,SAASsH,QAAT,CAAkBpH,QAAlB,GAA6B,YAAW;AACtCC,WAASC,KAAT,GAAiB,UAAjB;AACA,MAAIC,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,MAAIC,OAAOC,UAAUC,OAAV,CAAkB;AAC3BC,eAAWN;AADgB,GAAlB,CAAX;;AAGA,MAAI,CAACA,SAAD,IAAcG,QAAQA,KAAKG,SAA/B,EAA0C;AACxCC,WAAOC,EAAP,CAAU,YAAV;AACD;AACF,CATD;;AAYAb,SAASsH,QAAT,CAAkBxG,OAAlB,CAA0B;AACxB+B,OAAM,YAAU;AACd,QAAImC,aAAatC,YAAYhC,OAAZ,CAAoB;AACnCY,WAAMhB,WAAWC,GAAX,CAAe,cAAf;AAD6B,KAApB,CAAjB;;AAGA,QAAGyE,UAAH,EAAc;AACZ,aAAOA,WAAWnC,GAAlB;AACD;AACF,GARuB;AAU1BD,UAAS,YAAU;AACjB,QAAIoC,aAAatC,YAAYhC,OAAZ,CAAoB;AACnCY,WAAMhB,WAAWC,GAAX,CAAe,cAAf;AAD6B,KAApB,CAAjB;;AAGA,QAAGyE,UAAH,EAAc;AACZ,aAAOA,WAAWpC,MAAlB;AACD;AACF,GAjByB;AAmB1BE,OAAM,YAAU;AACd,QAAIkC,aAAatC,YAAYhC,OAAZ,CAAoB;AACnCY,WAAMhB,WAAWC,GAAX,CAAe,cAAf;AAD6B,KAApB,CAAjB;;AAGA,QAAGyE,UAAH,EAAc;AACZ,aAAOA,WAAWlC,GAAlB;AACD;AACF,GA1ByB;AA4B1BE,UAAS,YAAU;AACjB,QAAIgC,aAAatC,YAAYhC,OAAZ,CAAoB;AACnCY,WAAMhB,WAAWC,GAAX,CAAe,cAAf;AAD6B,KAApB,CAAjB;;AAGA,QAAGyE,UAAH,EAAc;AACZ,aAAOA,WAAWhC,MAAlB;AACD;AACF,GAnCyB;AAoC1BD,SAAQ,YAAU;AAChB,QAAIiC,aAAatC,YAAYhC,OAAZ,CAAoB;AACnCY,WAAMhB,WAAWC,GAAX,CAAe,cAAf;AAD6B,KAApB,CAAjB;;AAGA,QAAGyE,UAAH,EAAc;AACZ,aAAOA,WAAWjC,KAAlB;AACD;AACF;AA3CyB,CAA1B;AA8CA/C,SAASsH,QAAT,CAAkB1F,MAAlB,CAAyB;AACvB,iBAAe,UAASC,KAAT,EAAgB;AAC7BA,UAAMC,cAAN;AACAD,UAAME,eAAN;AACA,QAAIkD,UAAUvC,YAAYhC,OAAZ,CAAoB;AAChCY,WAAKhB,WAAWC,GAAX,CAAe,cAAf;AAD2B,KAApB,CAAd;;AAGA,QAAI0E,OAAJ,EAAa;AACT,UAAIsC,YAAY1F,MAAM0C,MAAN,CAAaW,MAAb,CAAoBV,KAApC;AACA,UAAI7D,YAAYL,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,UAAIkB,UAAUnB,WAAWC,GAAX,CAAe,cAAf,CAAd;;AAGA,UAAGgH,SAAH,EAAa;AACXhF,eAAOC,IAAP,CAAY,gBAAZ,EAA8B7B,SAA9B,EAAyCc,OAAzC,EAAkD8F,SAAlD,EAA6D,YAAW,CAAE,CAA1E;AACA3G,eAAOC,EAAP,CAAU,UAAV,EAFW,CAGjB;AACG;AACF;AACF;AAnBsB,CAAzB,E;;;;;;;;;;;AC1DAb,SAASwH,MAAT,CAAgBtH,QAAhB,GAA2B,YAAW;AACpCC,WAASC,KAAT,GAAiB,QAAjB;AACD,CAFD;;AAKAJ,SAASwH,MAAT,CAAgB1G,OAAhB,CAAwB;AACtB8B,UAAQ,YAAW;AACjB,QAAIvC,YAAYC,WAAWC,GAAX,CAAe,QAAf,CAAhB;AACA,QAAIC,OAAOkC,YAAYhC,OAAZ,CAAoB;AAC7BY,WAAKjB;AADwB,KAApB,CAAX;;AAIA,QAAIG,IAAJ,EAAU;AACR,aAAOA,KAAKoC,MAAZ;AACD;AACF;AAVqB,CAAxB,E;;;;;;;;;;;;;;;;;;;;;ACLAhC,OAAO6G,SAAP,CAAiB;AACfC,mBAAiB,SADF;AAEfC,oBAAkB;AAFH,CAAjB;AAMA/G,OAAOgH,KAAP,CAAa,cAAb,EAA6B;AAC3BX,QAAM;AADqB,CAA7B;AAKArG,OAAOgH,KAAP,CAAa,YAAb,EAA2B;AACzBX,QAAM;AADmB,CAA3B;AAIArG,OAAOgH,KAAP,CAAa,UAAb,EAAyB;AACvBX,QAAM;AADiB,CAAzB;AAIArG,OAAOgH,KAAP,CAAa,UAAb,EAAyB;AACvBX,QAAM;AADiB,CAAzB;AAIArG,OAAOgH,KAAP,CAAa,UAAb,EAAyB;AACvBX,QAAM;AADiB,CAAzB;AAIArG,OAAOgH,KAAP,CAAa,aAAb,EAA4B;AAC1BX,QAAM;AADoB,CAA5B;AAIArG,OAAOgH,KAAP,CAAa,aAAb,EAA4B;AAC1BX,QAAM;AADoB,CAA5B;AAIArG,OAAOgH,KAAP,CAAa,cAAb,EAA6B;AAC3BX,QAAM;AADqB,CAA7B;AAIArG,OAAOgH,KAAP,CAAa,SAAb,EAAwB;AACtBX,QAAM;AADgB,CAAxB;AAIArG,OAAOgH,KAAP,CAAa,WAAb,EAA0B;AACxBX,QAAM;AADkB,CAA1B,E;;;;;;;;;;;AC3CAvE,cAAc,IAAImF,MAAMC,UAAV,CAAqB,aAArB,CAAd;AACArH,YAAY,IAAIoH,MAAMC,UAAV,CAAqB,WAArB,CAAZ;AACAvG,UAAU,IAAIsG,MAAMC,UAAV,CAAqB,SAArB,CAAV;AACA/G,UAAU,IAAI8G,MAAMC,UAAV,CAAqB,SAArB,CAAV;AACAC,YAAY,IAAIF,MAAMC,UAAV,CAAqB,WAArB,CAAZ,C","file":"/app.js","sourcesContent":["Template.discussion.rendered = function() {\n  document.title = \"Actualit√© de vos discussions\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.discussion.helpers({\n  discussion: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    return Contact.find({\n      userIdNow: sessionID,\n    }, {\n      sort: {\n        lastMessage: -1,\n      },\n    }).fetch();\n  },\n\n  notification: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var notification = Message.findOne({\n      idClient1: id.contact,\n      idClient2: sessionID,\n      lu: \"false\",\n    });\n    if (notification) {\n      return notification;\n    }\n  },\n});\n\nTemplate.discussion.events({\n  'click .goDiscu': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var contactId = id.contact;\n    if (contactId) {\n      LocalStore.set(\"contactID\", contactId);\n      Router.go('/message');\n    };\n  },\n\n  'click #goRecherche': function(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      var infoRecherche = $(\"#recherche\").val();\n      var sessionID = LocalStore.get(\"userID\");\n      var hash = ({\n        userIdNow: sessionID,\n        recherche: infoRecherche,\n      });\n      Meteor.call('recherche', hash);\n      var inscriptionFind = Inscription.find({\n        $or: [{\n          prenom: infoRecherche,\n        }, {\n          nom: infoRecherche,\n        }, {\n          age: infoRecherche,\n        }, {\n          email: infoRecherche,\n        }, {\n          pseudo: infoRecherche,\n        }],\n      }).fetch();\n      return inscriptionFind;\n  },\n\n});\n","Template.message.rendered = function() {\n  document.title = \"Message\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.message.helpers({\n  messages: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    Meteor.call('notification', sessionID, contactID);\n    return Message.find({\n      $or: [{\n        idClient1: sessionID,\n        idClient2: contactID,\n      }, {\n        idClient1: contactID,\n        idClient2: sessionID,\n      }],\n    }, {\n      sort: {\n        hours: 1,\n      },\n    }).fetch();\n  },\n\n  color: function() {\n    if (this.idClient1 === LocalStore.get(\"userID\")) {\n      return 'text-success text-right';\n    }\n    return 'text-danger text-left ';\n  },\n\n  infoPerso: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var infoPersonne = Contact.find({\n      userIdNow: sessionID,\n      contact: contactID,\n    });\n    return infoPersonne;\n  },\n\n  lastConnexion: function() {\n    var contactID = LocalStore.get(\"contactID\");\n    var sessionID = LocalStore.get(\"sessionID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID,\n    });\n    if(deco.deconnexion != 0){\n      var deconnexion = deco.deconnexion;\n      var date = new Date(deconnexion);\n      var day = date.getDate();\n      var month = date.getMonth()+1;\n      var year = date.getFullYear();\n      var hours = date.getHours();\n      var minutes =  date.getMinutes();\n      var final = \"Hors ligne depuis \"+day+\"/\"+month+\"/\"+year+\"  \"+hours +\":\"+minutes;\n      return final ;\n    }else{\n      return \"En ligne\";\n    }\n  },\n\n  couleur: function(){\n    var contactID = LocalStore.get(\"contactID\");\n    var sessionID = LocalStore.get(\"sessionID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID,\n    });\n    if(deco.deconnexion == 0){\n      return 'text-success'\n    }else{\n      return 'text-danger'\n    }\n  },\n\n});\n\n\nTemplate.message.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var find = Connexion.findOne({\n      userIdNow: sessionID,\n    });\n    var message = event.target.message.value;\n    if (message) {\n      var now = new Date();\n      var hash3 = {\n        idClient1: sessionID,\n        idClient2: contactID,\n        message: message,\n        lu: \"false\",\n        hours: now.getTime(),\n      };\n      var time = now.getTime();\n      Meteor.call('message', hash3, function(data3) {});\n      Meteor.call('lastMessage', time, sessionID, contactID);\n      $('#messages').val('');\n    }\n  },\n});\n","Template.contact.rendered = function() {\n  document.title = \"Contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.contact.helpers({\n  contacter: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var last = Contact.find({\n      userIdNow: sessionID,\n    }).fetch();\n    if (last) {\n      return last;\n    };\n  }\n});\n\nTemplate.contact.events({\n  'click .modifier': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var contactId = id.contact;\n    if (contactId) {\n      LocalStore.set(\"newContactID\", contactId);\n      Router.go('/modifier');\n    }\n    }\n})\n","Template.newContact.rendered = function() {\n  document.title = \"Nouveau contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.newContact.helpers({\n  nom : function(){\n    var newContact = Inscription.findOne({\n      _id : LocalStore.get(\"newContactID\"),\n    });\n    if(newContact){\n      return newContact.nom;\n    }\n  },\n\nprenom : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.prenom;\n  }\n},\n\nage : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.age;\n  }\n},\n\npseudo : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.pseudo;\n  }\n},\nemail : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.email;\n  }\n},\n});\n\nTemplate.newContact.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\"),\n    });\n    if (trouver) {\n        var nom = trouver.nom;\n        var prenom = trouver.prenom;\n        var pseudo = trouver.pseudo;\n        var age = trouver.age;\n        var email = trouver.email;\n        var surnom = event.target.surnom.value;\n        var now = new Date();\n        var hash5 = {\n          userIdNow: LocalStore.get(\"userID\"),\n          nom: nom,\n          prenom: prenom,\n          age: age,\n          email: email,\n          pseudo: pseudo,\n          surnom: surnom,\n          contact: LocalStore.get(\"newContactID\"),\n          hours: now.getTime(),\n          lastMessage : 0,\n        };\n        Meteor.call('newContact', hash5)\n        Router.go('/contact');\n                LocalStore.set(\"newContactID\", null);\n      }\n  },\n});\n","Template.accueil.rendered = function() {\n  document.title = \"Accueil\";\n};\n\n\nTemplate.accueil.helpers({\n  prenomAccueil: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n\n  contacter: function() {\n    var sessionID = LocalStore.get(\"userID\");\n\n    var contacts = Contact.find({\n      userIdNow: sessionID,\n    }).fetch();\n    var ids = _.pluck(contacts, 'contact');\n    ids.push(sessionID);\n    return Inscription.find({\n      _id: {\n        $nin: ids,\n      },\n    }).fetch();\n  },\n\n  connect√©: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var contacts = Inscription.find({\n      etat:  \"true\",\n    }).fetch();\n    var ids = _.pluck(contacts, '_id');\n    ids.push(sessionID);\n    return Contact.find({\n      contact: {\n        $in: ids,\n      },\n      userIdNow: sessionID,\n    }).fetch();\n  },\n});\n\nTemplate.accueil.events({\n  'click .goAjouter': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var identifiant = Inscription.findOne({\n      _id: this._id,\n    });\n    var id = identifiant._id;\n    if (id) {\n      LocalStore.set(\"newContactID\", id);\n      Router.go('/newContact');\n    }\n  },\n})\n","Template.connexion.rendered = function() {\n  document.title = \"Connexion\";\n};\n\n\nTemplate.connexion.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    var pseudo_connexion = event.target.pseudo_connexion.value;\n    var password_connexion = event.target.password_connexion.value;\n    var controle_user = Inscription.findOne({\n      pseudo: pseudo_connexion,\n    });\n    var userIdNow = controle_user._id;\n    var now = new Date();\n    if (controle_user) {\n      if (controle_user.password != password_connexion) {\n        alert(\"Le mot de passe n'est pas juste !\")\n      } else {\n        var pseudoInscription = Inscription.findOne({\n          pseudo: pseudo_connexion,\n        });\n        if (pseudoInscription) {\n          var alreadyConnexion = Connexion.findOne({\n            userIdNow: pseudoInscription._id,\n          });\n          if (!alreadyConnexion) {\n            LocalStore.set(\"userID\", userIdNow);\n            var hash = {\n              userIdNow: controle_user._id,\n              hours: now.getTime(),\n              deconnexion: 0,\n            };\n            Meteor.call('connexion', hash, function(data) {\n              if (LocalStore.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          } else {\n            LocalStore.set(\"userID\", userIdNow);\n            Meteor.call('dec0', userIdNow);\n            Meteor.call('etat', userIdNow,function(data) {\n              if (LocalStore.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          }\n        }\n        Router.go('/accueil');\n      }\n    } else {\n      alert(\"Le pseudo n'est pas juste !\");\n    }\n  },\n});\n","Template.deconnexion.rendered = function(){\n      document.title = \"D√©connexion\";\n      if(confirm(\"Tu veux te d√©connecter\")){\n        var sessionID = LocalStore.get(\"userID\");\n        var heure = new Date();\n        var heureDeco = heure.getTime();\n        Meteor.call('deco', sessionID);\n        Meteor.call('heureDeco', sessionID, heureDeco);\n        LocalStore.set(\"userID\", null);\n        if (LocalStore.get(\"userID\") == null) {\n          Router.go('/connexion');\n        };\n      }else{\n        Router.go('/accueil');\n      }\n    };\n","Template.inscription.rendered = function() {\n  document.title = \"Insciption\";\n};\n\nTemplate.inscription.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var mdp1 = event.target.mdp1.value;\n    var mdp2 = event.target.mdp2.value;\n    var pseudo = event.target.pseudo.value;\n    var pseudoDb = Inscription.findOne({\n      pseudo: pseudo,\n    });\n    if (mdp1 == mdp2) {\n      if (mdp1.length > 3) {\n        if (!pseudoDb) {\n          alert(\"Merci de l'inscription !\");\n          var hash = {\n            nom       :  event.target.name.value,\n            prenom    :  event.target.prenom.value,\n            age       :  event.target.age.value,\n            email     :  event.target.email.value,\n            pseudo    :  event.target.pseudo.value,\n            password  :  event.target.mdp1.value,\n            etat      :  \"false\",\n          };\n          Meteor.call('insertInscription', hash, function(error, result) {\n            if (result) {\n              Router.go('/connexion');\n            }\n            if (error) {\n              console.log(error);\n            }\n          });\n           }\n         else {\n          alert(\"Le pseudo que vous avez choisi est d√©j√† utilis√© !\");\n         }\n        }\n       else {\n        alert(\"Votre mot de passe est trop court !\");\n      };\n\n    }\n     else {\n      alert(\"Vos mots de passe ne sont pas identiques ! \");\n    }\n  }\n});\n","Template.modifier.rendered = function() {\n  document.title = \"Modifier\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID && find != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.modifier.helpers({\n  nom : function(){\n    var newContact = Inscription.findOne({\n      _id : LocalStore.get(\"newContactID\"),\n    });\n    if(newContact){\n      return newContact.nom;\n    }\n  },\n\nprenom : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.prenom;\n  }\n},\n\nage : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.age;\n  }\n},\n\npseudo : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.pseudo;\n  }\n},\nemail : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.email;\n  }\n},\n});\n\nTemplate.modifier.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\"),\n    });\n    if (trouver) {\n        var newSurnom = event.target.surnom.value;\n        var userIdNow = LocalStore.get(\"userID\");\n        var contact = LocalStore.get(\"newContactID\");\n\n\n        if(newSurnom){\n          Meteor.call('modifierSurnom', userIdNow, contact, newSurnom, function() {})\n          Router.go('/contact');\n    //    LocalStore.set(\"newContactID\", null);\n      }\n    }\n  },\n});\n","Template.profil.rendered = function() {\n  document.title = \"Profil\";\n};\n\n\nTemplate.profil.helpers({\n  prenom: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n});\n","Router.configure({\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n});\n\n\nRouter.route('/inscription', {\n  name: 'inscription'\n});\n\n\nRouter.route('/connexion', {\n  name: 'connexion'\n});\n\nRouter.route('/accueil', {\n  name: 'accueil'\n});\n\nRouter.route('/message', {\n  name: 'message'\n});\n\nRouter.route('/contact', {\n  name: 'contact'\n});\n\nRouter.route('/newContact', {\n  name: 'newContact'\n});\n\nRouter.route('/discussion', {\n  name: 'discussion'\n});\n\nRouter.route('/deconnexion', {\n  name: 'deconnexion'\n});\n\nRouter.route('/profil', {\n  name: 'profil'\n});\n\nRouter.route('/modifier', {\n  name: 'modifier'\n});\n","Inscription = new Mongo.Collection(\"inscription\");\nConnexion = new Mongo.Collection(\"connexion\");\nMessage = new Mongo.Collection(\"message\");\nContact = new Mongo.Collection(\"contact\");\nRecherche = new Mongo.Collection(\"recherche\");\n"]}}]