[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nSession = Package.session.Session;\nAccounts = Package['accounts-base'].Accounts;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nLocalStore = Package['frozeman:storage'].LocalStore;\nPersistentSession = Package['u2622:persistent-session'].PersistentSession;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"Chat\":{\"Discussion\":{\"template.discussion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Chat/Discussion/template.discussion.js                                                                    //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"discussion\");\nTemplate[\"discussion\"] = new Template(\"Template.discussion\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n  \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n    \", HTML.Raw('<h1 id=\"form-titre\">Actualité de vos discussions</h1>'), \"\\n    \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n      <div class=\"container-fluid\">\\n        <div class=\"navbar-header\">\\n          <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n        </div>\\n        <ul class=\"nav navbar-nav\">\\n          <li><a href=\"/accueil\">Accueil</a></li>\\n          <li class=\"active\"><a href=\"/discussion\">Discussion</a></li>\\n          <li><a href=\"/connexion\">Connexion</a></li>\\n          <li><a href=\"/inscription\">Insciption</a></li>\\n          <li><a href=\"/contact\">Contact</a></li>\\n          <li><a href=\"/profil\">Profil</a></li>\\n          <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          <form class=\"navbar-form navbar-left\">\\n            <div class=\"input-group\">\\n               <input type=\"text\" name=\"recherche\" id=\"recherche\" class=\"form-control\" placeholder=\"Search\">\\n               <div class=\"input-group-btn\">\\n                 <button class=\"btn btn-default\" id=\"goRecherche\" type=\"submit\">\\n                   <i class=\"glyphicon glyphicon-search\"></i>\\n                 </button>\\n               </div>\\n             </div>\\n        </form>\\n      </ul>\\n    </div>\\n    </nav>'), \"\\n      \", HTML.TABLE({\n    class: \"discu\"\n  }, \"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"discussion\"));\n  }, function() {\n    return [ \"\\n        \", HTML.TR(\"\\n        \", HTML.TD(HTML.A({\n      href: \"message\",\n      style: \"color : #4d4d4d \",\n      class: \"goDiscu\",\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"contact\"));\n      },\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"prenom\"));\n      }\n    }, Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \" \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \" \")), \"\\n        \", HTML.TD(\"       \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"notification\"));\n    }, function() {\n      return [ \"\\n                      \", HTML.DIV({\n        class: \"rond\"\n      }), \"\\n                   \" ];\n    }), \"\\n       \"), \"\\n          \", HTML.TD({\n      id: \"infos\",\n      class: function() {\n        return Spacebars.mustache(view.lookup(\"couleur\"));\n      },\n      style: \"text-align : center\"\n    }, \"\\n                \", Blaze.View(\"lookup:lastConnexion\", function() {\n      return Spacebars.mustache(view.lookup(\"lastConnexion\"));\n    }), \"\\n        \"), \"\\n        \", HTML.TD({\n      style: \"text-align:right\"\n    }, HTML.A({\n      style: \"color : red\",\n      id: \"supp\",\n      href: \"\"\n    }, \"Supprimer\")), \"\\n    \"), \"\\n    \", HTML.TR({\n      style: \"background-color : #EFEFEF\"\n    }, \"\\n      \", HTML.TD(), \"\\n      \", HTML.TD({\n      style: \"color : #EFEFEF\"\n    }, \".\"), \"\\n      \", HTML.TD(), \"\\n      \", HTML.TD(), \"\\n    \"), \"\\n        \" ];\n  }), \"\\n    \"), \"\\n    \", HTML.Raw(\"<br>\"), \"\\n  \"), HTML.Raw('\\n  <h1 style=\"text-align:center\">Recherche</h1>\\n  '), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"recherche\"));\n  }, function() {\n    return [ \"\\n  \", HTML.DIV({\n      style: \"background-color : green;\"\n    }, \"\\n    \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \" \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \" \", Blaze.View(\"lookup:age\", function() {\n      return Spacebars.mustache(view.lookup(\"age\"));\n    }), \" \", Blaze.View(\"lookup:email\", function() {\n      return Spacebars.mustache(view.lookup(\"email\"));\n    }), \"\\n  \"), \"\\n  \" ];\n  }), \"\\n\\n  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"inscriptionFind\"));\n  }, function() {\n    return [ \"\\n  \", HTML.DIV({\n      class: \"recherche\"\n    }, \"\\n    \", HTML.A({\n      href: \"\"\n    }, Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \" \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \" \", Blaze.View(\"lookup:email\", function() {\n      return Spacebars.mustache(view.lookup(\"email\"));\n    })), \"\\n  \"), \"\\n  \", HTML.BR(), \"\\n  \" ];\n  }), \"\\n\\n  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"messageFind\"));\n  }, function() {\n    return [ \"\\n  \", HTML.DIV({\n      class: \"recherche\"\n    }, \"\\n     \", Blaze.View(\"lookup:message\", function() {\n      return Spacebars.mustache(view.lookup(\"message\"));\n    }), \"\\n    \", HTML.P({\n      style: \"text-align : right ; color: blue\"\n    }, \"De : \", Blaze.View(\"lookup:infoNom\", function() {\n      return Spacebars.mustache(view.lookup(\"infoNom\"));\n    }), \" \", Blaze.View(\"lookup:infoPrenom\", function() {\n      return Spacebars.mustache(view.lookup(\"infoPrenom\"));\n    }), \"  \", Blaze.View(\"lookup:infoHeure\", function() {\n      return Spacebars.mustache(view.lookup(\"infoHeure\"));\n    })), \"\\n  \"), \"\\n  \", HTML.BR(), \"\\n  \" ];\n  }), \"\\n  \");\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"discussion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Chat/Discussion/discussion.js                                                                             //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.discussion.rendered = function () {\n  document.title = \"Actualité de vos discussions\";\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.discussion.helpers({\n  discussion: function () {\n    var sessionID = Session.get(\"userID\"); // Recherche des messages des utilisateurs avec qui on est pas amis\n\n    var messages = Message.find({\n      idClient2: sessionID,\n      lu: \"false\"\n    }).fetch();\n\n    var ids = _.pluck(messages, 'idClient1');\n\n    var friend = Contact.findOne({\n      userIdNow: sessionID,\n      contact: {\n        $in: ids\n      }\n    });\n\n    if (!friend) {\n      var noFriend = Inscription.find({\n        _id: ids\n      }).fetch();\n    } // Retourne les contacts (amis)\n\n\n    var contact = Contact.find({\n      userIdNow: sessionID\n    }, {\n      sort: {\n        lastMessage: -1\n      }\n    }).fetch();\n    return contact || friend;\n    s;\n  },\n  notification: function () {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var notification = Message.findOne({\n      idClient1: id.contact,\n      idClient2: sessionID,\n      lu: \"false\"\n    });\n\n    if (notification) {\n      return notification;\n    }\n  },\n  inscriptionFind: function () {\n    return Session.get(\"inscriptionFind\");\n  },\n  messageFind: function () {\n    return Session.get(\"messageFind\");\n  },\n  lastConnexion: function () {\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var ids = id.contact;\n    var deco = Connexion.findOne({\n      userIdNow: ids\n    });\n\n    if (deco.deconnexion != 0) {\n      var deconnexion = deco.deconnexion;\n      var date = new Date(deconnexion);\n      var day = date.getDate();\n      var month = date.getMonth() + 1;\n\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n\n      var year = date.getFullYear();\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n\n      if (minutes < 10) {\n        minutes = minutes + \"0\";\n      }\n\n      var final = \"Hors ligne depuis \" + day + \"/\" + month + \"/\" + year + \"  \" + hours + \":\" + minutes;\n      return final;\n    } else {\n      return \"En ligne\";\n    }\n  },\n  couleur: function () {\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var ids = id.contact;\n    var deco = Connexion.findOne({\n      userIdNow: ids\n    });\n\n    if (deco.deconnexion == 0) {\n      return 'text-success';\n    } else {\n      return 'text-danger';\n    }\n  },\n  infoNom: function () {\n    var sessionID = Session.get(\"userID\");\n    var id = Message.findOne({\n      _id: this._id\n    });\n\n    if (id) {\n      var info = Inscription.findOne({\n        _id: id.idClient1\n      });\n\n      if (sessionID == id.idClient2) {\n        return info.nom;\n      }\n    }\n  },\n  infoPrenom: function () {\n    var sessionID = Session.get(\"userID\");\n    var id = Message.findOne({\n      _id: this._id\n    });\n\n    if (id) {\n      var info = Inscription.findOne({\n        _id: id.idClient1\n      });\n\n      if (sessionID != id.idClient1) {\n        return info.prenom;\n      } else {\n        info = Inscription.findOne({\n          _id: id.idClient2\n        });\n        return \"Moi\";\n      }\n    }\n  },\n  infoHeure: function () {\n    var sessionID = Session.get(\"userID\");\n    var id = Message.findOne({\n      _id: this._id\n    });\n\n    if (id) {\n      var time = id.hours;\n      var date = new Date(time);\n      return +date.getHours() + \":\" + date.getMinutes() + \" \" + date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear();\n    }\n  }\n});\nTemplate.discussion.events({\n  'click .goDiscu': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var contactId = id.contact;\n\n    if (contactId) {\n      Session.set(\"contactID\", contactId);\n      Router.go('/message');\n    }\n\n    ;\n  },\n  'click #goRecherche': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var infoRecherche = $(\"#recherche\").val();\n    var sessionID = Session.get(\"userID\");\n    var hash = {\n      userIdNow: sessionID,\n      recherche: infoRecherche\n    };\n    var inscriptionFind = Inscription.find({\n      $or: [{\n        prenom: infoRecherche\n      }, {\n        nom: infoRecherche\n      }, {\n        age: infoRecherche\n      }, {\n        email: {\n          $regex: infoRecherche\n        }\n      }, {\n        pseudo: infoRecherche\n      }]\n    }).fetch();\n    var messageFind = Message.find({\n      $or: [{\n        idClient1: sessionID\n      }, {\n        idClient2: sessionID\n      }],\n      message: {\n        $regex: infoRecherche\n      }\n    }).fetch();\n    Session.set('inscriptionFind', inscriptionFind);\n    Session.set('messageFind', messageFind);\n    Session.set();\n    $(\"#recherche\").val('');\n  },\n  'click #supp': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id\n    });\n\n    if (id && confirm(\"Etes-vous sûr de vouloir supprimer la discussion ?\")) {\n      var contactID = id.contact;\n      Meteor.call('supprimerMessage1', sessionID, contactID, function () {\n        Meteor.call('supprimerMessage2', sessionID, contactID, function () {\n          alert(\"Discussio supprimée !\");\n        });\n      });\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"message\":{\"template.message.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Chat/message/template.message.js                                                                          //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"message\");\nTemplate[\"message\"] = new Template(\"Template.message\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n  \", HTML.FORM(\"\\n    \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n      \", HTML.Raw('<h1 id=\"form-titre\">Message</h1>'), \"\\n      \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li><a href=\"/accueil\">Accueil</a></li>\\n            <li class=\"active\"><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>'), \"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"infoPerso\"));\n  }, function() {\n    return [ \"\\n          \", HTML.DIV({\n      class: \"info\"\n    }, \"\\n          \", HTML.P({\n      class: \"text-center\",\n      style: \"font-size:18px\"\n    }, Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \" \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    })), \"\\n          \", HTML.P({\n      class: function() {\n        return [ \"text-center \", Spacebars.mustache(view.lookup(\"couleur\")) ];\n      }\n    }, Blaze.View(\"lookup:lastConnexion\", function() {\n      return Spacebars.mustache(view.lookup(\"lastConnexion\"));\n    })), \"\\n          \", HTML.P({\n      style: \"text-align : center\"\n    }, Blaze.View(\"lookup:statut\", function() {\n      return Spacebars.mustache(view.lookup(\"statut\"));\n    })), \"\\n        \"), \"\\n      \" ];\n  }), \"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"messages\"));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      class: function() {\n        return [ \" chat col-sm-12 \", Spacebars.mustache(view.lookup(\"color\")), \" \" ];\n      }\n    }, \"\\n          \", Blaze.View(\"lookup:message\", function() {\n      return Spacebars.mustache(view.lookup(\"message\"));\n    }), \"\\n        \"), \"\\n        \", HTML.BR(), \"\\n      \" ];\n  }), \"\\n      \", HTML.Raw(\"<br>\"), \"\\n      \", HTML.Raw(\"<br>\"), \"\\n     \", HTML.Raw(\"<br>\"), \"\\n    \", HTML.Raw('<div class=\"form-groupe\">\\n      <input type=\"text\" class=\"form-control\" name=\"message\" id=\"messages\">\\n      <br>\\n      <input type=\"submit\" name=\"envoyer\" value=\"Envoyer\">\\n    </div>'), \"\\n  \"), \"\\n  \", HTML.Raw('<a href=\"/discussion\">Retour</a>'), \"\\n  \"), \"\\n\");\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"message.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Chat/message/message.js                                                                                   //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.message.rendered = function () {\n  document.title = \"Message\";\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.message.helpers({\n  messages: function () {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    Meteor.call('notification', sessionID, contactID);\n    return Message.find({\n      $or: [{\n        idClient1: sessionID,\n        idClient2: contactID,\n        luClient1: \"true\"\n      }, {\n        idClient1: contactID,\n        idClient2: sessionID,\n        luClient2: \"true\"\n      }]\n    }, {\n      sort: {\n        hours: 1\n      }\n    }).fetch();\n  },\n  color: function () {\n    if (this.idClient1 === Session.get(\"userID\")) {\n      return 'text-success text-right';\n    }\n\n    return 'text-danger text-left ';\n  },\n  infoPerso: function () {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    var infoPersonne = Contact.find({\n      userIdNow: sessionID,\n      contact: contactID\n    });\n    return infoPersonne;\n  },\n  lastConnexion: function () {\n    var contactID = Session.get(\"contactID\");\n    var sessionID = Session.get(\"userID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID\n    });\n\n    if (deco.deconnexion != 0) {\n      var deconnexion = deco.deconnexion;\n      var date = new Date(deconnexion);\n      var day = date.getDate();\n      var month = date.getMonth() + 1;\n      var year = date.getFullYear();\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n      var final = \"Hors ligne depuis \" + day + \"/\" + month + \"/\" + year + \"  \" + hours + \":\" + minutes;\n      return final;\n    } else {\n      return \"En ligne\";\n    }\n  },\n  couleur: function () {\n    var contactID = Session.get(\"contactID\");\n    var sessionID = Session.get(\"userID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID\n    });\n\n    if (deco.deconnexion == 0) {\n      return 'text-success';\n    } else {\n      return 'text-danger';\n    }\n  },\n  statut: function () {\n    var contactID = Session.get(\"contactID\");\n    var statut = Inscription.findOne({\n      _id: contactID\n    });\n\n    if (statut) {\n      return statut.statut;\n    }\n  }\n});\nTemplate.message.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    var find = Connexion.findOne({\n      userIdNow: sessionID\n    });\n    var message = event.target.message.value;\n\n    if (message) {\n      var now = new Date();\n      var hash3 = {\n        idClient1: sessionID,\n        idClient2: contactID,\n        message: message,\n        lu: \"false\",\n        hours: now.getTime(),\n        luClient1: \"true\",\n        luClient2: \"true\"\n      };\n      var time = now.getTime();\n      Meteor.call('message', hash3, function (data3) {});\n      Meteor.call('lastMessage', time, sessionID, contactID);\n      $('#messages').val('');\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"Contact\":{\"contact\":{\"template.contact.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Contact/contact/template.contact.js                                                                       //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"contact\");\nTemplate[\"contact\"] = new Template(\"Template.contact\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, HTML.Raw('\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Contact</h1>\\n      <nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li class=\"active\"><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </div>\\n  </form>\\n  '), HTML.FORM(\"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"contacter\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"col-sm-3\"\n    }, \"\\n      Nom : \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \"\\n      \", HTML.BR(), \" Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \"\\n      \", HTML.BR(), \" Surnom : \", Blaze.View(\"lookup:surnom\", function() {\n      return Spacebars.mustache(view.lookup(\"surnom\"));\n    }), \"\\n      \", HTML.BR(), \" Age : \", Blaze.View(\"lookup:anni\", function() {\n      return Spacebars.mustache(view.lookup(\"anni\"));\n    }), \"\\n      \", HTML.BR(), \" Date naissance : \", Blaze.View(\"lookup:date\", function() {\n      return Spacebars.mustache(view.lookup(\"date\"));\n    }), \"\\n      \", HTML.BR(), \" E-mail : \", Blaze.View(\"lookup:email\", function() {\n      return Spacebars.mustache(view.lookup(\"email\"));\n    }), \"\\n      \", HTML.BR(), \" Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n      return Spacebars.mustache(view.lookup(\"pseudo\"));\n    }), \"\\n      \", HTML.BR(), \"\\n      \", HTML.BUTTON({\n      class: \"modifier\",\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"contact\"));\n      }\n    }, \"Modifier\"), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n  \"), \"\\n\");\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"contact.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Contact/contact/contact.js                                                                                //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.contact.rendered = function () {\n  document.title = \"Contact\";\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.contact.helpers({\n  contacter: function () {\n    var sessionID = Session.get(\"userID\");\n    var last = Contact.find({\n      userIdNow: sessionID\n    }).fetch();\n\n    if (last) {\n      return last;\n    }\n\n    ;\n  },\n  anni: function () {\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id\n    });\n\n    if (id) {\n      var contactID = id.contact;\n      var last = Inscription.findOne({\n        _id: contactID\n      });\n\n      if (last) {\n        var date = last.date;\n        var birthday = new Date(date);\n        var nouveau = new Date();\n        var age = new Number(nouveau.getTime() - birthday.getTime()) / 31557600000;\n        return Math.floor(age);\n      }\n\n      ;\n    }\n  }\n});\nTemplate.contact.events({\n  'click .modifier': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var contactId = id.contact;\n\n    if (contactId) {\n      Session.set(\"contactID\", contactId);\n      Router.go('/modifier');\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"newContact\":{\"template.newContact.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Contact/newContact/template.newContact.js                                                                 //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"newContact\");\nTemplate[\"newContact\"] = new Template(\"Template.newContact\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n    \", HTML.FORM(\"\\n      \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n        \", HTML.Raw('<h1 id=\"form-titre\">Nouveau contact</h1>'), \"\\n        \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n          <div class=\"container-fluid\">\\n            <div class=\"navbar-header\">\\n              <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n            </div>\\n            <ul class=\"nav navbar-nav\">\\n              <li><a href=\"/accueil\">Accueil</a></li>\\n              <li><a href=\"/message\">Message</a></li>\\n              <li><a href=\"/connexion\">Connexion</a></li>\\n              <li><a href=\"/inscription\">Insciption</a></li>\\n              <li class=\"active\"><a href=\"/contact\">Contact</a></li>\\n              <li><a href=\"/profil\">Profil</a></li>\\n              <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n            </ul>\\n          </div>\\n        </nav>'), \"\\n        \", HTML.LABEL({\n    for: \"name\"\n  }, \"Nom : \", Blaze.View(\"lookup:nom\", function() {\n    return Spacebars.mustache(view.lookup(\"nom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"prenom\"\n  }, \"Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n    return Spacebars.mustache(view.lookup(\"prenom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<label for=\"prenom\">Surnom :</label>'), \"\\n        \", HTML.Raw('<input type=\"text\" name=\"surnom\" id=\"surnom\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n    return Spacebars.mustache(view.lookup(\"pseudo\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Age :  \", Blaze.View(\"lookup:age\", function() {\n    return Spacebars.mustache(view.lookup(\"age\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"E-mail : \", Blaze.View(\"lookup:email\", function() {\n    return Spacebars.mustache(view.lookup(\"email\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<input type=\"submit\" name=\"enregister\" value=\"Enregister\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<a href=\"/contact\">Retourner à la page contact</a>'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"newContact.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Contact/newContact/newContact.js                                                                          //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.newContact.rendered = function () {\n  document.title = \"Nouveau contact\";\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.newContact.helpers({\n  nom: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.nom;\n    }\n  },\n  prenom: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.prenom;\n    }\n  },\n  age: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.age;\n    }\n  },\n  pseudo: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.pseudo;\n    }\n  },\n  email: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.email;\n    }\n  }\n});\nTemplate.newContact.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: Session.get(\"newContactID\")\n    });\n\n    if (trouver) {\n      var nom = trouver.nom;\n      var prenom = trouver.prenom;\n      var pseudo = trouver.pseudo;\n      var age = trouver.age;\n      var date = trouver.date;\n      var email = trouver.email;\n      var surnom = event.target.surnom.value;\n      var now = new Date();\n      var hash5 = {\n        userIdNow: Session.get(\"userID\"),\n        nom: nom,\n        prenom: prenom,\n        age: age,\n        date: date,\n        email: email,\n        pseudo: pseudo,\n        surnom: surnom,\n        contact: Session.get(\"newContactID\"),\n        hours: now.getTime(),\n        lastMessage: 0\n      };\n      Meteor.call('newContact', hash5);\n      Router.go('/contact');\n      Session.set(\"newContactID\", null);\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"accueil\":{\"template.accueil.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/accueil/template.accueil.js                                                                               //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"accueil\");\nTemplate[\"accueil\"] = new Template(\"Template.accueil\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n  \", HTML.FORM(\"\\n    \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n      \", HTML.Raw('<h1 id=\"form-titre\">Accueil</h1>'), \"\\n      \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li class=\"active\"><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>'), \"\\n      \", HTML.H2(\"Bonjour, \", Blaze.View(\"lookup:prenomAccueil\", function() {\n    return Spacebars.mustache(view.lookup(\"prenomAccueil\"));\n  })), \"\\n    \"), \"\\n    \", HTML.Raw(\"<p>Avec cette application tu pourras chatter avec tes amis à tous moments, partager ta journée et les moments les plus importants de ta vie.</p>\"), \"\\n  \"), HTML.Raw(\"\\n\\n  <h1>Amis actuellement connectés !</h1>\\n  \"), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"connecté\"));\n  }, function() {\n    return [ \"\\n  \", HTML.DIV({\n      class: \"col-sm-3\",\n      id: \"connecté\"\n    }, \"\\n  Nom : \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \"\\n  \", HTML.BR(), \"\\n  Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \"\\n  \"), \"\\n  \" ];\n  }), HTML.Raw(\"\\n<br><br><br><br><br>\\n  <h1>Ajouter de nouveaux amis !</h1>\\n    \"), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"contacter\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"col-sm-3\"\n    }, \"\\n    Nom : \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \"\\n    \", HTML.BR(), \"\\n    Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \"\\n    \", HTML.BR(), \"\\n    Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n      return Spacebars.mustache(view.lookup(\"pseudo\"));\n    }), \"\\n    \", HTML.BR(), \"\\n    \", HTML.BUTTON({\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"_id\"));\n      },\n      class: \"goAjouter\"\n    }, \"Ajouter\"), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n\");\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"accueil.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/accueil/accueil.js                                                                                        //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.accueil.rendered = function () {\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n  document.title = \"Accueil\";\n};\n\nTemplate.accueil.helpers({\n  prenomAccueil: function () {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n  contacter: function () {\n    var sessionID = Session.get(\"userID\");\n    var contacts = Contact.find({\n      userIdNow: sessionID\n    }).fetch();\n\n    var ids = _.pluck(contacts, 'contact');\n\n    ids.push(sessionID);\n    return Inscription.find({\n      _id: {\n        $nin: ids\n      }\n    }).fetch();\n  },\n  connecté: function () {\n    var sessionID = Session.get(\"userID\");\n    var contacts = Inscription.find({\n      etat: \"true\"\n    }).fetch();\n\n    var ids = _.pluck(contacts, '_id');\n\n    ids.push(sessionID);\n    return Contact.find({\n      contact: {\n        $in: ids\n      },\n      userIdNow: sessionID\n    }).fetch();\n  }\n});\nTemplate.accueil.events({\n  'click .goAjouter': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var identifiant = Inscription.findOne({\n      _id: this._id\n    });\n    var id = identifiant._id;\n\n    if (id) {\n      Session.set(\"newContactID\", id);\n      Router.go('/newContact');\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"connexion\":{\"template.connexion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/connexion/template.connexion.js                                                                           //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"connexion\");\nTemplate[\"connexion\"] = new Template(\"Template.connexion\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Connexion</h1>\\n        <div class=\"form-group\">\\n          <nav class=\"navbar navbar-default\">\\n            <div class=\"container-fluid\">\\n              <div class=\"navbar-header\">\\n                <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n              </div>\\n              <ul class=\"nav navbar-nav\">\\n                <li><a href=\"/accueil\">Accueil</a></li>\\n                <li><a href=\"/discussion\">Discussion</a></li>\\n                <li class=\"active\"><a href=\"/connexion\">Connexion</a></li>\\n                <li><a href=\"/inscription\">Insciption</a></li>\\n                <li><a href=\"/contact\">Contact</a></li>\\n                <li><a href=\"/profil\">Profil</a></li>\\n                <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n              </ul>\\n            </div>\\n          </nav>\\n      </div>\\n      <label for=\"name\">Pseudo :</label>\\n      <input class=\"form-control\" type=\"text\" id=\"pseudo_connexion\" name=\"pseudo_connexion\">\\n      <label for=\"password\">password : </label>\\n      <input class=\"form-control\" type=\"password\" id=\"password_connexion\" name=\"password_connexion\">\\n      <br>\\n      <input type=\"submit\" id=\"envoyer\" name=\"envoyer\" value=\"Connexion\">\\n    </div>\\n  </form>\\n  <a href=\"/inscription\">S\\'inscrire</a>\\n</div>');\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"connexion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/connexion/connexion.js                                                                                    //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.connexion.rendered = function () {\n  document.title = \"Connexion\";\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.connexion.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var pseudo_connexion = event.target.pseudo_connexion.value;\n    var password_connexion = event.target.password_connexion.value;\n    var controle_user = Inscription.findOne({\n      pseudo: pseudo_connexion\n    });\n    var userIdNow = controle_user._id;\n    var now = new Date();\n\n    if (controle_user) {\n      if (controle_user.password != password_connexion) {\n        alert(\"Le mot de passe n'est pas juste !\");\n      } else {\n        var pseudoInscription = Inscription.findOne({\n          pseudo: pseudo_connexion\n        });\n\n        if (pseudoInscription) {\n          var alreadyConnexion = Connexion.findOne({\n            userIdNow: pseudoInscription._id\n          });\n\n          if (!alreadyConnexion) {\n            var hash = {\n              userIdNow: controle_user._id,\n              hours: now.getTime(),\n              deconnexion: 0\n            };\n            Meteor.call('connexion', hash, function (data) {\n              Session.setPersistent(\"userID\", userIdNow);\n\n              if (Session.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          } else {\n            Session.setPersistent(\"userID\", userIdNow);\n            Meteor.call('dec0', userIdNow);\n            Meteor.call('etat', userIdNow, function (data) {\n              if (Session.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          }\n        }\n\n        Router.go('/accueil');\n      }\n    } else {\n      alert(\"Le pseudo n'est pas juste !\");\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"deconnexion\":{\"template.deconnexion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/deconnexion/template.deconnexion.js                                                                       //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"deconnexion\");\nTemplate[\"deconnexion\"] = new Template(\"Template.deconnexion\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Deconnexion</h1>\\n      <nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li class=\"active\"><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </div>\\n  </form>\\n</div>');\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"deconnexion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/deconnexion/deconnexion.js                                                                                //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.deconnexion.rendered = function () {\n  document.title = \"Déconnexion\";\n  var sessionID = Session.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  } else {\n    if (confirm(\"Tu veux te déconnecter\")) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    } else {\n      Router.go('/accueil');\n    }\n  }\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"inscription\":{\"template.inscription.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/inscription/template.inscription.js                                                                       //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"inscription\");\nTemplate[\"inscription\"] = new Template(\"Template.inscription\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n    <form>\\n      <div class=\"form-group\">\\n        <h1 id=\"form-titre\">Formulaire d\\'inscription</h1>\\n          <div class=\"form-group\">\\n            <nav class=\"navbar navbar-default\">\\n              <div class=\"container-fluid\">\\n                <div class=\"navbar-header\">\\n                  <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n                </div>\\n                <ul class=\"nav navbar-nav\">\\n                  <li><a href=\"/accueil\">Accueil</a></li>\\n                  <li><a href=\"/discussion\">Discussion</a></li>\\n                  <li><a href=\"/connexion\">Connexion</a></li>\\n                  <li class=\"active\"><a href=\"/inscription\">Insciption</a></li>\\n                  <li><a href=\"/contact\">Contact</a></li>\\n                  <li><a href=\"/profil\">Profil</a></li>\\n                  <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n                </ul>\\n              </div>\\n            </nav>\\n        </div>\\n        <label for=\"name\">Nom :</label>\\n        <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\">\\n        <label for=\"prenom\">Prénom </label>\\n        <input class=\"form-control\" type=\"text\" id=\"prenom\" name=\"prenom\">\\n        <label for=\"age\">Date de naissance :</label>\\n        <input class=\"form-control\" type=\"date\" id=\"age\" name=\"age\">\\n        <label for=\"email\">E-mail :</label>\\n        <input class=\"form-control\" type=\"email\" id=\"email\" name=\"email\">\\n        <label for=\"prenom\">Pseudo </label>\\n        <input class=\"form-control\" type=\"text\" id=\"pseudo\" name=\"pseudo\">\\n        <label for=\"password\">password : </label>\\n        <input class=\"form-control\" type=\"password\" id=\"mdp1\" name=\"password1\">\\n        <label for=\"password\">password :</label>\\n        <input class=\"form-control\" type=\"password\" id=\"mdp2\" name=\"password2\">\\n        <br>\\n        <input type=\"submit\" name=\"envoyer\" value=\"Envoyer\">\\n      </div>\\n    </form>\\n    <a href=\"/connexion\">Connexion</a>\\n  </div>');\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"inscription.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/inscription/inscription.js                                                                                //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.inscription.rendered = function () {\n  document.title = \"Insciption\";\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.inscription.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var mdp1 = event.target.mdp1.value;\n    var mdp2 = event.target.mdp2.value;\n    var pseudo = event.target.pseudo.value;\n    var pseudoDb = Inscription.findOne({\n      pseudo: pseudo\n    });\n    var age = $(\"#age\").val();\n    var nouveau = new Date(age);\n    var auj = new Date();\n\n    if (mdp1 == mdp2) {\n      if (mdp1.length > 3) {\n        if (!pseudoDb) {\n          if (nouveau.getFullYear() < auj.getFullYear() && nouveau.getFullYear() < auj.getFullYear() - 14) {\n            alert(\"Merci de l'inscription !\");\n            var hash = {\n              nom: event.target.name.value,\n              prenom: event.target.prenom.value,\n              date: event.target.age.value,\n              age: auj.getFullYear() - nouveau.getFullYear(),\n              email: event.target.email.value,\n              pseudo: event.target.pseudo.value,\n              password: event.target.mdp1.value,\n              etat: \"false\",\n              statut: \"\"\n            };\n            Meteor.call('insertInscription', hash, function (error, result) {\n              if (result) {\n                Router.go('/connexion');\n              }\n\n              if (error) {\n                console.log(error);\n              }\n            });\n          } else {\n            alert(\"Date invalide !\");\n          }\n        } else {\n          alert(\"Le pseudo que vous avez choisi est déjà utilisé !\");\n        }\n      } else {\n        alert(\"Votre mot de passe est trop court !\");\n      }\n\n      ;\n    } else {\n      alert(\"Vos mots de passe ne sont pas identiques ! \");\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"modifier\":{\"template.modifier.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/modifier/template.modifier.js                                                                             //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"modifier\");\nTemplate[\"modifier\"] = new Template(\"Template.modifier\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n    \", HTML.FORM(\"\\n      \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n        \", HTML.Raw('<h1 id=\"form-titre\">Modifier contact</h1>'), \"\\n        \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n          <div class=\"container-fluid\">\\n            <div class=\"navbar-header\">\\n              <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n            </div>\\n            <ul class=\"nav navbar-nav\">\\n              <li><a href=\"/accueil\">Accueil</a></li>\\n              <li><a href=\"/message\">Message</a></li>\\n              <li><a href=\"/connexion\">Connexion</a></li>\\n              <li><a href=\"/inscription\">Insciption</a></li>\\n              <li class=\"active\"><a href=\"/contact\">Contact</a></li>\\n              <li><a href=\"/profil\">Profil</a></li>\\n              <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n            </ul>\\n          </div>\\n        </nav>'), \"\\n        \", HTML.LABEL({\n    for: \"name\"\n  }, \"Nom : \", Blaze.View(\"lookup:nom\", function() {\n    return Spacebars.mustache(view.lookup(\"nom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"prenom\"\n  }, \"Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n    return Spacebars.mustache(view.lookup(\"prenom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<label for=\"prenom\">Surnom :</label>'), \"\\n        \", HTML.Raw('<input type=\"text\" name=\"surnom\" id=\"surnom\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n    return Spacebars.mustache(view.lookup(\"pseudo\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Age :  \", Blaze.View(\"lookup:age\", function() {\n    return Spacebars.mustache(view.lookup(\"age\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"E-mail : \", Blaze.View(\"lookup:email\", function() {\n    return Spacebars.mustache(view.lookup(\"email\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<input type=\"submit\" name=\"Modifier\" value=\"Modifier\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<button name=\"supprimer\" id=\"supprimer\">Supprimer</button>'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<a href=\"/contact\">Retourner à la page contact</a>'), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"modifier.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/modifier/modifier.js                                                                                      //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.modifier.rendered = function () {\n  document.title = \"Modifier\";\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.modifier.helpers({\n  nom: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"contactID\")\n    });\n\n    if (newContact) {\n      return newContact.nom;\n    }\n  },\n  prenom: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"contactID\")\n    });\n\n    if (newContact) {\n      return newContact.prenom;\n    }\n  },\n  age: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"contactID\")\n    });\n\n    if (newContact) {\n      return newContact.age;\n    }\n  },\n  pseudo: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"contactID\")\n    });\n\n    if (newContact) {\n      return newContact.pseudo;\n    }\n  },\n  email: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"contactID\")\n    });\n\n    if (newContact) {\n      return newContact.email;\n    }\n  }\n});\nTemplate.modifier.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: Session.get(\"contactID\")\n    });\n\n    if (trouver) {\n      var newSurnom = event.target.surnom.value;\n      var userIdNow = Session.get(\"userID\");\n      var contact = Session.get(\"contactID\");\n\n      if (newSurnom) {\n        Meteor.call('modifierSurnom', userIdNow, contact, newSurnom, function () {});\n        Router.go('/contact');\n        Session.set(\"contactID\", null);\n      }\n    }\n  },\n  'click #supprimer': function () {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n\n    if (confirm(\"Etes-vous sûr de vouloir supprimer ce contact\")) {\n      Meteor.call('supprimerContact', sessionID, contactID, function () {\n        Meteor.call('supprimerMessage1', sessionID, contactID, function () {\n          Meteor.call('supprimerMessage2', sessionID, contactID, function () {\n            alert(\"Contact supprimé !\");\n            Router.go('/contact');\n          });\n        });\n      });\n    } else {\n      Router.go('/modifier');\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"profil\":{\"template.profil.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/profil/template.profil.js                                                                                 //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"profil\");\nTemplate[\"profil\"] = new Template(\"Template.profil\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, HTML.Raw('\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Profil</h1>\\n      <nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li class=\"active\"><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </div>\\n  </form>\\n  '), HTML.DIV({\n    style: \"font-size:19px\"\n  }, \"\\n  Nom : \", Blaze.View(\"lookup:nom\", function() {\n    return Spacebars.mustache(view.lookup(\"nom\"));\n  }), \"\\n  \", HTML.Raw(\"<br>\"), \"\\n  Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n    return Spacebars.mustache(view.lookup(\"prenom\"));\n  }), \"\\n  \", HTML.Raw(\"<br>\"), \"\\n  Age : \", Blaze.View(\"lookup:age\", function() {\n    return Spacebars.mustache(view.lookup(\"age\"));\n  }), \"\\n  \", HTML.Raw(\"<br>\"), \"\\n  E-mail : \", Blaze.View(\"lookup:email\", function() {\n    return Spacebars.mustache(view.lookup(\"email\"));\n  }), \"\\n  \", HTML.Raw(\"<br>\"), \"\\n  Statut :\\n  \", HTML.Raw('<input type=\"text\" name=\"statut\" id=\"statut\" placeholder=\"happy\">'), \"\\n\"), HTML.Raw('\\n<br>\\n<button id=\"modifier\">Modifier</button>\\n'));\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"profil.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/profil/profil.js                                                                                          //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.profil.rendered = function () {\n  document.title = \"Profil\";\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.profil.helpers({\n  prenom: function () {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n  nom: function () {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.nom;\n    }\n  },\n  email: function () {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.email;\n    }\n  },\n  age: function () {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.age;\n    }\n  }\n});\nTemplate.profil.events({\n  'click #modifier': function () {\n    var sessionID = Session.get(\"userID\");\n    var statut = $(\"#statut\").val();\n    Meteor.call('statut', statut, sessionID);\n    $(\"#statut\").val('');\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"template.not_found.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/template.not_found.js                                                                                     //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"notFound\");\nTemplate[\"notFound\"] = new Template(\"Template.notFound\", (function() {\n  var view = this;\n  return HTML.Raw('<h1>Test not found</h1>\\n  <a href=\"/inscription\">S\\'inscrire</a>\\n  <br>\\n  <a href=\"/connexion\">Se connecter</a>');\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"stale_session.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/lib/stale_session.js                                                                                      //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n//\n// Client side activity detection for the session timeout\n// - depends on jquery\n//\n// Meteor settings:\n// - staleSessionHeartbeatInterval: interval (in ms) at which activity heartbeats are sent up to the server\n// - staleSessionActivityEvents: the jquery events which are considered indicator of activity e.g. in an on() call.\n//\nvar heartbeatInterval = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionHeartbeatInterval || 3 * 60 * 1000; // 3mins\n\nvar activityEvents = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionActivityEvents || 'mousemove click keydown';\nvar activityDetected = false;\nMeteor.startup(function () {\n  var inscriptions = Inscription.find({\n    etat: true\n  }).fetch();\n\n  var ids = _.pluck(inscriptions, '_id'); //\n  // periodically send a heartbeat if activity has been detected within the interval\n  //\n\n\n  Meteor.setInterval(function () {\n    if (Session.get('userID') && activityDetected) {\n      Meteor.call('heartbeat', Session.get('userID'));\n      activityDetected = false;\n    }\n\n    if (ids && activityDetected) {\n      Meteor.call('heartbeat', ids);\n      activityDetected = false;\n    }\n  }, heartbeatInterval); //\n  // detect activity and mark it as detected on any of the following events\n  //\n\n  $(document).on(activityEvents, function () {\n    activityDetected = true;\n  });\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"Router\":{\"router.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// Router/router.js                                                                                                 //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nRouter.configure({\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound'\n});\nRouter.route('/inscription', {\n  name: 'inscription'\n});\nRouter.route('/connexion', {\n  name: 'connexion'\n});\nRouter.route('/accueil', {\n  name: 'accueil'\n});\nRouter.route('/message', {\n  name: 'message'\n});\nRouter.route('/contact', {\n  name: 'contact'\n});\nRouter.route('/newContact', {\n  name: 'newContact'\n});\nRouter.route('/discussion', {\n  name: 'discussion'\n});\nRouter.route('/deconnexion', {\n  name: 'deconnexion'\n});\nRouter.route('/profil', {\n  name: 'profil'\n});\nRouter.route('/modifier', {\n  name: 'modifier'\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collection\":{\"collection.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// collection/collection.js                                                                                         //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nInscription = new Mongo.Collection(\"inscription\");\nConnexion = new Mongo.Collection(\"connexion\");\nMessage = new Mongo.Collection(\"message\");\nContact = new Mongo.Collection(\"contact\");\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\nrequire(\"/client/Chat/Discussion/template.discussion.js\");\nrequire(\"/client/Chat/message/template.message.js\");\nrequire(\"/client/Contact/contact/template.contact.js\");\nrequire(\"/client/Contact/newContact/template.newContact.js\");\nrequire(\"/client/accueil/template.accueil.js\");\nrequire(\"/client/connexion/template.connexion.js\");\nrequire(\"/client/deconnexion/template.deconnexion.js\");\nrequire(\"/client/inscription/template.inscription.js\");\nrequire(\"/client/modifier/template.modifier.js\");\nrequire(\"/client/profil/template.profil.js\");\nrequire(\"/client/template.not_found.js\");\nrequire(\"/client/lib/stale_session.js\");\nrequire(\"/client/Chat/Discussion/discussion.js\");\nrequire(\"/client/Chat/message/message.js\");\nrequire(\"/client/Contact/contact/contact.js\");\nrequire(\"/client/Contact/newContact/newContact.js\");\nrequire(\"/client/accueil/accueil.js\");\nrequire(\"/client/connexion/connexion.js\");\nrequire(\"/client/deconnexion/deconnexion.js\");\nrequire(\"/client/inscription/inscription.js\");\nrequire(\"/client/modifier/modifier.js\");\nrequire(\"/client/profil/profil.js\");\nrequire(\"/Router/router.js\");\nrequire(\"/collection/collection.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/Chat/Discussion/discussion.js","client/Chat/message/message.js","client/Contact/contact/contact.js","client/Contact/newContact/newContact.js","client/accueil/accueil.js","client/connexion/connexion.js","client/deconnexion/deconnexion.js","client/inscription/inscription.js","client/modifier/modifier.js","client/profil/profil.js","client/lib/stale_session.js","Router/router.js","collection/collection.js"],"names":["Template","discussion","rendered","document","title","sessionID","Session","get","Router","go","Tracker","autorun","Inscription","find","user","findOne","_id","etat","heure","Date","heureDeco","getTime","Meteor","call","set","helpers","messages","Message","idClient2","lu","fetch","ids","_","pluck","friend","Contact","userIdNow","contact","$in","noFriend","sort","lastMessage","s","notification","contactID","id","idClient1","inscriptionFind","messageFind","lastConnexion","deco","Connexion","deconnexion","date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","final","couleur","infoNom","info","nom","infoPrenom","prenom","infoHeure","time","events","event","preventDefault","stopPropagation","contactId","infoRecherche","$","val","hash","recherche","$or","age","email","$regex","pseudo","message","confirm","alert","luClient1","luClient2","color","infoPerso","infoPersonne","statut","target","value","now","hash3","data3","contacter","last","anni","birthday","nouveau","Number","Math","floor","newContact","trouver","surnom","hash5","accueil","prenomAccueil","contacts","push","$nin","connecté","identifiant","connexion","pseudo_connexion","password_connexion","controle_user","password","pseudoInscription","alreadyConnexion","data","setPersistent","inscription","mdp1","mdp2","pseudoDb","auj","length","name","error","result","console","log","modifier","newSurnom","profil","heartbeatInterval","settings","public","staleSessionHeartbeatInterval","activityEvents","staleSessionActivityEvents","activityDetected","startup","inscriptions","setInterval","on","configure","loadingTemplate","notFoundTemplate","route","Mongo","Collection"],"mappings":"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","file":"/app.js","sourcesContent":["Template.discussion.rendered = function() {\n  document.title = \"Actualité de vos discussions\";\n\n  var sessionID = Session.get(\"userID\");\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\nTemplate.discussion.helpers({\n  discussion: function() {\n    var sessionID = Session.get(\"userID\");\n\n// Recherche des messages des utilisateurs avec qui on est pas amis\n    var messages = Message.find({\n      idClient2: sessionID,\n      lu: \"false\",\n    }).fetch();\n      var ids = _.pluck(messages, 'idClient1');\n      var friend = Contact.findOne({\n        userIdNow : sessionID,\n        contact: {\n          $in: ids,\n        },\n      });\n      if(!friend){\n      var noFriend = Inscription.find({\n        _id : ids\n      }).fetch();\n    }\n\n// Retourne les contacts (amis)\n    var contact = Contact.find({\n      userIdNow: sessionID,\n    }, {\n      sort: {\n        lastMessage: -1,\n      },\n    }).fetch();\n\n    return  contact || friend;s\n  },\n\n  notification: function() {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var notification = Message.findOne({\n      idClient1: id.contact,\n      idClient2: sessionID,\n      lu: \"false\",\n    });\n    if (notification) {\n      return notification;\n    }\n  },\n\n  inscriptionFind: function() {\n    return Session.get(\"inscriptionFind\");\n  },\n\n  messageFind: function() {\n    return Session.get(\"messageFind\");\n  },\n\n  lastConnexion: function() {\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var ids = id.contact;\n    var deco = Connexion.findOne({\n      userIdNow: ids,\n    });\n    if (deco.deconnexion != 0) {\n      var deconnexion = deco.deconnexion;\n      var date = new Date(deconnexion);\n      var day = date.getDate();\n      var month = date.getMonth() + 1;\n      if (month < 10) {\n        month = \"0\" + month;\n      }\n      var year = date.getFullYear();\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n      if (minutes < 10) {\n        minutes = minutes + \"0\";\n      }\n      var final = \"Hors ligne depuis \" + day + \"/\" + month + \"/\" + year + \"  \" + hours + \":\" + minutes;\n      return final;\n    } else {\n      return \"En ligne\";\n    }\n  },\n\n  couleur: function() {\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var ids = id.contact;\n    var deco = Connexion.findOne({\n      userIdNow: ids,\n    });\n    if (deco.deconnexion == 0) {\n      return 'text-success'\n    } else {\n      return 'text-danger'\n    }\n  },\n\n  infoNom: function() {\n    var sessionID = Session.get(\"userID\");\n    var id = Message.findOne({\n      _id: this._id,\n    });\n    if (id) {\n      var info = Inscription.findOne({\n        _id: id.idClient1,\n      });\n      if (sessionID == id.idClient2) {\n        return info.nom;\n      }\n    }\n  },\n\n  infoPrenom: function() {\n    var sessionID = Session.get(\"userID\");\n    var id = Message.findOne({\n      _id: this._id,\n    });\n    if (id) {\n      var info = Inscription.findOne({\n        _id: id.idClient1,\n      });\n      if (sessionID != id.idClient1) {\n        return info.prenom;\n      } else {\n        info = Inscription.findOne({\n          _id: id.idClient2,\n        });\n        return \"Moi\"\n      }\n    }\n  },\n\n  infoHeure: function() {\n    var sessionID = Session.get(\"userID\");\n    var id = Message.findOne({\n      _id: this._id,\n    });\n    if (id) {\n      var time = id.hours;\n      var date = new Date(time);\n      return +date.getHours() + \":\" + date.getMinutes() + \" \" + date.getDate() + \"/\" + date.getMonth() + \"/\" + date.getFullYear();\n    }\n  },\n\n});\n\nTemplate.discussion.events({\n  'click .goDiscu': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var contactId = id.contact;\n    if (contactId) {\n      Session.set(\"contactID\", contactId);\n      Router.go('/message');\n    };\n  },\n\n  'click #goRecherche': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var infoRecherche = $(\"#recherche\").val();\n    var sessionID = Session.get(\"userID\");\n    var hash = ({\n      userIdNow: sessionID,\n      recherche: infoRecherche,\n    });\n    var inscriptionFind = Inscription.find({\n      $or: [{\n        prenom: infoRecherche,\n      }, {\n        nom: infoRecherche,\n      }, {\n        age: infoRecherche,\n      }, {\n        email: {\n          $regex: infoRecherche,\n        },\n      }, {\n        pseudo: infoRecherche,\n      }],\n    }).fetch();\n\n    var messageFind = Message.find({\n      $or: [{\n        idClient1: sessionID,\n      }, {\n        idClient2: sessionID,\n      }],\n      message: {\n        $regex: infoRecherche,\n      },\n    }).fetch();\n\n    Session.set('inscriptionFind', inscriptionFind);\n    Session.set('messageFind', messageFind);\n    Session.set();\n    $(\"#recherche\").val('');\n  },\n\n  'click #supp': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    if (id && confirm(\"Etes-vous sûr de vouloir supprimer la discussion ?\")) {\n      var contactID = id.contact;\n      Meteor.call('supprimerMessage1', sessionID, contactID, function() {\n        Meteor.call('supprimerMessage2', sessionID, contactID, function() {\n          alert(\"Discussio supprimée !\");\n        });\n      });\n    }\n  }\n\n});\n","Template.message.rendered = function() {\n  document.title = \"Message\";\n\n  var sessionID = Session.get(\"userID\");\n  if(sessionID == null){\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\n\nTemplate.message.helpers({\n  messages: function() {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    Meteor.call('notification', sessionID, contactID);\n    return Message.find({\n      $or: [{\n        idClient1: sessionID,\n        idClient2: contactID,\n        luClient1: \"true\",\n      }, {\n        idClient1: contactID,\n        idClient2: sessionID,\n        luClient2: \"true\",\n      }],\n    }, {\n      sort: {\n        hours: 1,\n      },\n    }).fetch();\n  },\n\n  color: function() {\n    if (this.idClient1 === Session.get(\"userID\")) {\n      return 'text-success text-right';\n    }\n    return 'text-danger text-left ';\n  },\n\n  infoPerso: function() {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    var infoPersonne = Contact.find({\n      userIdNow: sessionID,\n      contact: contactID,\n    });\n    return infoPersonne;\n  },\n\n  lastConnexion: function() {\n    var contactID = Session.get(\"contactID\");\n    var sessionID = Session.get(\"userID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID,\n    });\n    if(deco.deconnexion != 0){\n      var deconnexion = deco.deconnexion;\n      var date = new Date(deconnexion);\n      var day = date.getDate();\n      var month = date.getMonth()+1;\n      var year = date.getFullYear();\n      var hours = date.getHours();\n      var minutes =  date.getMinutes();\n      var final = \"Hors ligne depuis \"+day+\"/\"+month+\"/\"+year+\"  \"+hours +\":\"+minutes;\n      return final ;\n    }else{\n      return \"En ligne\";\n    }\n  },\n\n  couleur: function(){\n    var contactID = Session.get(\"contactID\");\n    var sessionID = Session.get(\"userID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID,\n    });\n    if(deco.deconnexion == 0){\n      return 'text-success'\n    }else{\n      return 'text-danger'\n    }\n  },\n\n  statut : function(){\n    var contactID = Session.get(\"contactID\");\n    var statut = Inscription.findOne({\n      _id : contactID,\n    });\n    if(statut){\n      return statut.statut;\n    }\n  }\n\n});\n\n\nTemplate.message.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    var find = Connexion.findOne({\n      userIdNow: sessionID,\n    });\n    var message = event.target.message.value;\n    if (message) {\n      var now = new Date();\n      var hash3 = {\n        idClient1: sessionID,\n        idClient2: contactID,\n        message: message,\n        lu: \"false\",\n        hours: now.getTime(),\n        luClient1 : \"true\",\n        luClient2 : \"true\",\n      };\n      var time = now.getTime();\n      Meteor.call('message', hash3, function(data3) {});\n      Meteor.call('lastMessage', time, sessionID, contactID);\n      $('#messages').val('');\n    }\n  },\n});\n","Template.contact.rendered = function() {\n  document.title = \"Contact\";\n\n  var sessionID = Session.get(\"userID\");\n  if(sessionID == null){\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\n\nTemplate.contact.helpers({\n  contacter: function() {\n    var sessionID = Session.get(\"userID\");\n    var last = Contact.find({\n      userIdNow: sessionID,\n    }).fetch();\n    if (last) {\n      return last;\n    };\n  },\n\n  anni: function() {\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id : this._id,\n    });\n    if(id) {\n      var contactID = id.contact;\n      var last = Inscription.findOne({\n        _id: contactID,\n      });\n      if (last) {\n        var date = last.date;\n        var birthday = new Date(date);\n        var nouveau = new Date();\n        var age =new Number(nouveau.getTime() - birthday.getTime()) / 31557600000;\n        return Math.floor(age);\n      };\n    }\n  },\n});\n\nTemplate.contact.events({\n  'click .modifier': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var contactId = id.contact;\n    if (contactId) {\n      Session.set(\"contactID\", contactId);\n      Router.go('/modifier');\n    }\n  }\n})\n","Template.newContact.rendered = function() {\n  document.title = \"Nouveau contact\";\n\n  var sessionID = Session.get(\"userID\");\n  if(sessionID == null){\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\n\nTemplate.newContact.helpers({\n  nom : function(){\n    var newContact = Inscription.findOne({\n      _id : Session.get(\"newContactID\"),\n    });\n    if(newContact){\n      return newContact.nom;\n    }\n  },\n\nprenom : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.prenom;\n  }\n},\n\nage : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.age;\n  }\n},\n\npseudo : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.pseudo;\n  }\n},\nemail : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.email;\n  }\n},\n});\n\nTemplate.newContact.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: Session.get(\"newContactID\"),\n    });\n    if (trouver) {\n        var nom = trouver.nom;\n        var prenom = trouver.prenom;\n        var pseudo = trouver.pseudo;\n        var age = trouver.age;\n        var date = trouver.date;\n        var email = trouver.email;\n        var surnom = event.target.surnom.value;\n        var now = new Date();\n        var hash5 = {\n          userIdNow: Session.get(\"userID\"),\n          nom: nom,\n          prenom: prenom,\n          age: age,\n          date : date,\n          email: email,\n          pseudo: pseudo,\n          surnom: surnom,\n          contact: Session.get(\"newContactID\"),\n          hours: now.getTime(),\n          lastMessage : 0,\n        };\n        Meteor.call('newContact', hash5)\n        Router.go('/contact');\n                Session.set(\"newContactID\", null);\n      }\n  },\n});\n","Template.accueil.rendered = function() {\n\n  var sessionID = Session.get(\"userID\");\n  if(sessionID == null){\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n\n  document.title = \"Accueil\";\n\n};\n\n\nTemplate.accueil.helpers({\n  prenomAccueil: function() {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n\n  contacter: function() {\n    var sessionID = Session.get(\"userID\");\n\n    var contacts = Contact.find({\n      userIdNow: sessionID,\n    }).fetch();\n    var ids = _.pluck(contacts, 'contact');\n    ids.push(sessionID);\n    return Inscription.find({\n      _id: {\n        $nin: ids,\n      },\n    }).fetch();\n  },\n\n  connecté: function() {\n    var sessionID = Session.get(\"userID\");\n    var contacts = Inscription.find({\n      etat: \"true\",\n    }).fetch();\n    var ids = _.pluck(contacts, '_id');\n    ids.push(sessionID);\n    return Contact.find({\n      contact: {\n        $in: ids,\n      },\n      userIdNow: sessionID,\n    }).fetch();\n  },\n});\n\nTemplate.accueil.events({\n  'click .goAjouter': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var identifiant = Inscription.findOne({\n      _id: this._id,\n    });\n    var id = identifiant._id;\n    if (id) {\n      Session.set(\"newContactID\", id);\n      Router.go('/newContact');\n    }\n  },\n})\n","Template.connexion.rendered = function() {\n  document.title = \"Connexion\";\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\n\nTemplate.connexion.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    var pseudo_connexion = event.target.pseudo_connexion.value;\n    var password_connexion = event.target.password_connexion.value;\n    var controle_user = Inscription.findOne({\n      pseudo: pseudo_connexion,\n    });\n    var userIdNow = controle_user._id;\n    var now = new Date();\n    if (controle_user) {\n      if (controle_user.password != password_connexion) {\n        alert(\"Le mot de passe n'est pas juste !\")\n      } else {\n        var pseudoInscription = Inscription.findOne({\n          pseudo: pseudo_connexion,\n        });\n        if (pseudoInscription) {\n          var alreadyConnexion = Connexion.findOne({\n            userIdNow: pseudoInscription._id,\n          });\n          if (!alreadyConnexion) {\n            var hash = {\n              userIdNow: controle_user._id,\n              hours: now.getTime(),\n              deconnexion: 0,\n            };\n            Meteor.call('connexion', hash, function(data) {\n              Session.setPersistent(\"userID\", userIdNow);\n              if (Session.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          } else {\n            Session.setPersistent(\"userID\", userIdNow);\n            Meteor.call('dec0', userIdNow);\n            Meteor.call('etat', userIdNow,function(data) {\n              if (Session.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          }\n        }\n        Router.go('/accueil');\n      }\n    }else{\n      alert(\"Le pseudo n'est pas juste !\");\n    }\n  },\n});\n","Template.deconnexion.rendered = function() {\n  document.title = \"Déconnexion\";\n  var sessionID = Session.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  } else {\n    if (confirm(\"Tu veux te déconnecter\")) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    } else {\n      Router.go('/accueil');\n    }\n  }\n};\n","Template.inscription.rendered = function() {\n  document.title = \"Insciption\";\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\nTemplate.inscription.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var mdp1 = event.target.mdp1.value;\n    var mdp2 = event.target.mdp2.value;\n    var pseudo = event.target.pseudo.value;\n    var pseudoDb = Inscription.findOne({\n      pseudo: pseudo,\n    });\n    var age= $(\"#age\").val();\n    var nouveau = new Date(age);\n    var auj = new Date();\n    if (mdp1 == mdp2) {\n      if (mdp1.length > 3) {\n        if (!pseudoDb) {\n          if (nouveau.getFullYear() < auj.getFullYear()  && nouveau.getFullYear() < auj.getFullYear()-14 ) {\n            alert(\"Merci de l'inscription !\");\n            var hash = {\n              nom: event.target.name.value,\n              prenom: event.target.prenom.value,\n              date: event.target.age.value,\n              age : auj.getFullYear() - nouveau.getFullYear(),\n              email: event.target.email.value,\n              pseudo: event.target.pseudo.value,\n              password: event.target.mdp1.value,\n              etat: \"false\",\n              statut: \"\"\n            };\n            Meteor.call('insertInscription', hash, function(error, result) {\n              if (result) {\n                Router.go('/connexion');\n              }\n              if (error) {\n                console.log(error);\n              }\n            });\n          }else{\n            alert(\"Date invalide !\");\n          }\n        } else {\n          alert(\"Le pseudo que vous avez choisi est déjà utilisé !\");\n        }\n      } else {\n        alert(\"Votre mot de passe est trop court !\");\n      };\n\n    } else {\n      alert(\"Vos mots de passe ne sont pas identiques ! \");\n    }\n  }\n});\n","Template.modifier.rendered = function() {\n  document.title = \"Modifier\";\n\n  var sessionID = Session.get(\"userID\");\n  if(sessionID == null){\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\n\nTemplate.modifier.helpers({\n  nom : function(){\n    var newContact = Inscription.findOne({\n      _id : Session.get(\"contactID\"),\n    });\n    if(newContact){\n      return newContact.nom;\n    }\n  },\n\nprenom : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"contactID\"),\n  });\n  if(newContact){\n    return newContact.prenom;\n  }\n},\n\nage : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"contactID\"),\n  });\n  if(newContact){\n    return newContact.age;\n  }\n},\n\npseudo : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"contactID\"),\n  });\n  if(newContact){\n    return newContact.pseudo;\n  }\n},\nemail : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"contactID\"),\n  });\n  if(newContact){\n    return newContact.email;\n  }\n},\n});\n\nTemplate.modifier.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: Session.get(\"contactID\"),\n    });\n    if (trouver) {\n        var newSurnom = event.target.surnom.value;\n        var userIdNow = Session.get(\"userID\");\n        var contact = Session.get(\"contactID\");\n\n\n        if(newSurnom){\n          Meteor.call('modifierSurnom', userIdNow, contact, newSurnom, function() {});\n          Router.go('/contact');\n          Session.set(\"contactID\", null);\n      }\n    }\n  },\n\n  'click #supprimer' : function() {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    if(confirm(\"Etes-vous sûr de vouloir supprimer ce contact\")){\n      Meteor.call('supprimerContact', sessionID, contactID, function() {\n        Meteor.call('supprimerMessage1', sessionID, contactID, function() {\n          Meteor.call('supprimerMessage2', sessionID, contactID, function() {\n          alert(\"Contact supprimé !\");\n          Router.go('/contact');\n        });\n        });\n      });\n    }else{\n      Router.go('/modifier');\n    }\n  },\n});\n","Template.profil.rendered = function() {\n  document.title = \"Profil\";\n\n  var sessionID = Session.get(\"userID\");\n  if(sessionID == null){\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\n\nTemplate.profil.helpers({\n  prenom: function() {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n\n  nom: function() {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.nom;\n    }\n  },\n\n  email: function() {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.email;\n    }\n  },\n\n  age: function() {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.age;\n    }\n  },\n\n});\n\nTemplate.profil.events({\n  'click #modifier' : function(){\n    var sessionID = Session.get(\"userID\");\n    var statut = $(\"#statut\").val();\n    Meteor.call('statut', statut, sessionID);\n    $(\"#statut\").val('');\n  }\n});\n","//\n// Client side activity detection for the session timeout\n// - depends on jquery\n//\n// Meteor settings:\n// - staleSessionHeartbeatInterval: interval (in ms) at which activity heartbeats are sent up to the server\n// - staleSessionActivityEvents: the jquery events which are considered indicator of activity e.g. in an on() call.\n//\nvar heartbeatInterval = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionHeartbeatInterval || (3*60*1000); // 3mins\nvar activityEvents = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionActivityEvents || 'mousemove click keydown';\n\nvar activityDetected = false;\n\nMeteor.startup(function() {\n\n  var inscriptions = Inscription.find({ etat : true}).fetch();\n  var ids = _.pluck(inscriptions, '_id');\n\n    //\n    // periodically send a heartbeat if activity has been detected within the interval\n    //\n    Meteor.setInterval(function() {\n        if (Session.get('userID') && activityDetected) {\n            Meteor.call('heartbeat', Session.get('userID'));\n            activityDetected = false;\n        }\n        if (ids && activityDetected) {\n            Meteor.call('heartbeat', ids);\n            activityDetected = false;\n        }\n    }, heartbeatInterval);\n\n    //\n    // detect activity and mark it as detected on any of the following events\n    //\n    $(document).on(activityEvents, function() {\n       activityDetected = true;\n    });\n});\n","Router.configure({\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n});\n\n\nRouter.route('/inscription', {\n  name: 'inscription'\n});\n\n\nRouter.route('/connexion', {\n  name: 'connexion'\n});\n\nRouter.route('/accueil', {\n  name: 'accueil'\n});\n\nRouter.route('/message', {\n  name: 'message'\n});\n\nRouter.route('/contact', {\n  name: 'contact'\n});\n\nRouter.route('/newContact', {\n  name: 'newContact'\n});\n\nRouter.route('/discussion', {\n  name: 'discussion'\n});\n\nRouter.route('/deconnexion', {\n  name: 'deconnexion'\n});\n\nRouter.route('/profil', {\n  name: 'profil'\n});\n\nRouter.route('/modifier', {\n  name: 'modifier'\n});\n","Inscription =   new Mongo.Collection(\"inscription\");\nConnexion   =   new Mongo.Collection(\"connexion\");\nMessage     =   new Mongo.Collection(\"message\");\nContact     =   new Mongo.Collection(\"contact\");\n"]}}]