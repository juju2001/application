[{"type":"js","data":"(function(){Template.discussion.rendered = function() {\n  document.title = \"Actualité de vos discussions\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.discussion.helpers({\n  discussion: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var last = Contact.find({\n      userIdNow: sessionID,\n    }).fetch();\n    if (last) {\n      return last;\n    };\n  },\n});\n\nTemplate.discussion.events({\n  'click .goDiscu': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var contactId = id.contact;\n    if (contactId) {\n      LocalStore.set(\"contactID\", contactId);\n      Router.go('/message');\n    };\n  },\n});\n\n}).call(this);\n","servePath":"/client/Chat/Discussion/discussion.js","sourceMap":null},{"type":"js","data":"(function(){Template.message.rendered = function() {\n  document.title = \"Message\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.message.helpers({\n  messages: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n\n    return Message.find({\n      $or: [{\n        idClient1: sessionID,\n        idClient2: contactID,\n      },{\n        idClient1: contactID,\n        idClient2: sessionID,\n      }],\n    }, {\n      $sort: {\n        hours: 1,\n      },\n    });\n  },\n  color: function() {\n    // String solution\n    if (this.idClient1 === LocalStore.get(\"userID\")) {\n      return 'text-success text-right';\n    }\n    return 'text-danger text-left ';\n  },\n});\n\n\nTemplate.message.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var find = Connexion.findOne({\n      userIdNow: sessionID,\n    });\n    var message = event.target.message.value;\n    if (message) {\n      var now = new Date();\n      var hash3 = {\n        idClient1: sessionID,\n        idClient2: contactID,\n        message: message,\n        lu: \"false\",\n        hours: now.getTime(),\n      };\n      var lu = \"true\";\n      var contactID = LocalStore.get(\"contactID\");\n      Meteor.call('message', hash3, function(data3) {});\n      $('#messages').val('');\n      if(LocalStore.get(\"userID\")){\n        Meteor.call('notification', lu, sessionID, contactID, function(data3) {});\n      }\n    }\n  },\n});\n\n}).call(this);\n","servePath":"/client/Chat/message/message.js","sourceMap":null},{"type":"js","data":"(function(){Template.contact.rendered = function() {\n  document.title = \"Contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.contact.helpers({\n  contacter: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var last = Contact.find({\n      userIdNow: sessionID,\n    }).fetch();\n    if (last) {\n      return last;\n    };\n  }\n});\n\nTemplate.contact.events({\n  'click .modifier': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var contactId = id.contact;\n    if (contactId) {\n      LocalStore.set(\"newContactID\", contactId);\n      Router.go('/modifier');\n    }\n    }\n})\n\n}).call(this);\n","servePath":"/client/Contact/contact/contact.js","sourceMap":null},{"type":"js","data":"(function(){Template.newContact.rendered = function() {\n  document.title = \"Nouveau contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.newContact.helpers({\n  nom : function(){\n    var newContact = Inscription.findOne({\n      _id : LocalStore.get(\"newContactID\"),\n    });\n    if(newContact){\n      return newContact.nom;\n    }\n  },\n\nprenom : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.prenom;\n  }\n},\n\nage : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.age;\n  }\n},\n\npseudo : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.pseudo;\n  }\n},\nemail : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.email;\n  }\n},\n});\n\nTemplate.newContact.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\"),\n    });\n    if (trouver) {\n        var nom = trouver.nom;\n        var prenom = trouver.prenom;\n        var pseudo = trouver.pseudo;\n        var age = trouver.age;\n        var email = trouver.email;\n        var surnom = event.target.surnom.value;\n        var now = new Date();\n        var hash5 = {\n          userIdNow: LocalStore.get(\"userID\"),\n          nom: nom,\n          prenom: prenom,\n          age: age,\n          email: email,\n          pseudo: pseudo,\n          surnom: surnom,\n          contact: LocalStore.get(\"newContactID\"),\n          hours: now.getTime(),\n        };\n        Meteor.call('newContact', hash5)\n        Router.go('/contact');\n                LocalStore.set(\"newContactID\", null);\n      }\n  },\n});\n\n}).call(this);\n","servePath":"/client/Contact/newContact/newContact.js","sourceMap":null},{"type":"js","data":"(function(){Template.accueil.rendered = function() {\n  document.title = \"Accueil\";\n};\n\n\nTemplate.accueil.helpers({\n  prenomAccueil: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n\n  contacter: function() {\n    var sessionID = LocalStore.get(\"userID\");\n\n    var contacts = Contact.find({\n      userIdNow : sessionID,\n    }).fetch();\n\n    var ids = _.pluck(contacts, 'contact');\n\n    ids.push(sessionID);\n\n    return Inscription.find({\n      _id: {\n        $nin: ids,\n      },\n    }).fetch();\n  },\n});\n\n\nTemplate.accueil.events({\n  'click .goAjouter': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var identifiant = Inscription.findOne({\n      _id: this._id,\n    });\n    var id = identifiant._id;\n    if (id) {\n      LocalStore.set(\"newContactID\", id);\n      Router.go('/newContact');\n    }\n  },\n})\n\n}).call(this);\n","servePath":"/client/accueil/accueil.js","sourceMap":null},{"type":"js","data":"(function(){Template.connexion.rendered = function() {\n  document.title = \"Connexion\";\n};\n\n\nTemplate.connexion.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    var pseudo_connexion = event.target.pseudo_connexion.value;\n    var password_connexion = event.target.password_connexion.value;\n    var controle_user = Inscription.findOne({\n      pseudo: pseudo_connexion,\n    });\n    var userIdNow = controle_user._id;\n    var now = new Date();\n    if (controle_user) {\n      if (controle_user.password != password_connexion) {\n        alert(\"Le mot de passe n'est pas juste !\")\n      } else {\n        LocalStore.set(\"userID\", userIdNow);\n        var prenom = controle_user.prenom;\n        var hash2 = {\n          userIdNow: controle_user._id,\n          hours: now.getTime(),\n        };\n        Meteor.call('connexion', hash2, function(data) {\n          if (LocalStore.get(\"userID\")) {\n            event.preventDefault();\n          }\n        });\n        Router.go('/accueil');\n      }\n    } else {\n      alert(\"Le pseudo n'est pas juste !\");\n    }\n  },\n});\n\n}).call(this);\n","servePath":"/client/connexion/connexion.js","sourceMap":null},{"type":"js","data":"(function(){Template.deconnexion.rendered = function(){\n      document.title = \"Déconnexion\";\n      if(confirm(\"Tu veux te déconnecter\")){\n        LocalStore.set(\"userID\", null);\n        if (LocalStore.get(\"userID\") == null) {\n          Router.go('/connexion');\n        };\n      }else{\n        Router.go('/accueil');\n      }\n    };\n\n}).call(this);\n","servePath":"/client/deconnexion/deconnexion.js","sourceMap":null},{"type":"js","data":"(function(){Template.inscription.rendered = function() {\n  document.title = \"Insciption\";\n};\n\nTemplate.inscription.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var mdp1 = event.target.mdp1.value;\n    var mdp2 = event.target.mdp2.value;\n    var pseudo = event.target.pseudo.value;\n    var pseudoDb = Inscription.findOne({\n      pseudo: pseudo,\n    });\n    if (mdp1 == mdp2) {\n      if (mdp1.length > 3) {\n        if (!pseudoDb) {\n          alert(\"Merci de l'inscription !\");\n          var hash = {\n            nom       :  event.target.name.value,\n            prenom    :  event.target.prenom.value,\n            age       :  event.target.age.value,\n            email     :  event.target.email.value,\n            pseudo    :  event.target.pseudo.value,\n            password  :  event.target.mdp1.value,\n          };\n          Meteor.call('insertInscription', hash, function(error, result) {\n            if (result) {\n              console.log(result);\n\n              Router.go('/connexion');\n            }\n            if (error) {\n              console.log(error);\n            }\n          });\n           }\n         else {\n          alert(\"Le pseudo que vous avez choisi est déjà utilisé !\");\n         }\n        }\n       else {\n        alert(\"Votre mot de passe est trop court !\");\n      };\n\n    }\n     else {\n      alert(\"Vos mots de passe ne sont pas identiques ! \");\n    }\n  }\n});\n\n}).call(this);\n","servePath":"/client/inscription/inscription.js","sourceMap":null},{"type":"js","data":"(function(){Template.modifier.rendered = function() {\n  document.title = \"Modifier\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID && find != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.modifier.helpers({\n  nom : function(){\n    var newContact = Inscription.findOne({\n      _id : LocalStore.get(\"newContactID\"),\n    });\n    if(newContact){\n      return newContact.nom;\n    }\n  },\n\nprenom : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.prenom;\n  }\n},\n\nage : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.age;\n  }\n},\n\npseudo : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.pseudo;\n  }\n},\nemail : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.email;\n  }\n},\n});\n\nTemplate.modifier.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\"),\n    });\n    if (trouver) {\n        var newSurnom = event.target.surnom.value;\n        var userIdNow = LocalStore.get(\"userID\");\n        var contact = LocalStore.get(\"newContactID\");\n\n\n        if(newSurnom){\n          Meteor.call('modifierSurnom', userIdNow, contact, newSurnom, function() {})\n          Router.go('/contact');\n    //    LocalStore.set(\"newContactID\", null);\n      }\n    }\n  },\n});\n\n}).call(this);\n","servePath":"/client/modifier/modifier.js","sourceMap":null},{"type":"js","data":"(function(){Template.profil.rendered = function() {\n  document.title = \"Profil\";\n};\n\n\nTemplate.profil.helpers({\n  prenom: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n});\n\n}).call(this);\n","servePath":"/client/profil/profil.js","sourceMap":null},{"type":"js","data":"(function(){Router.configure({\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n});\n\n\nRouter.route('/inscription', {\n  name: 'inscription'\n});\n\n\nRouter.route('/connexion', {\n  name: 'connexion'\n});\n\nRouter.route('/accueil', {\n  name: 'accueil'\n});\n\nRouter.route('/message', {\n  name: 'message'\n});\n\nRouter.route('/contact', {\n  name: 'contact'\n});\n\nRouter.route('/newContact', {\n  name: 'newContact'\n});\n\nRouter.route('/discussion', {\n  name: 'discussion'\n});\n\nRouter.route('/deconnexion', {\n  name: 'deconnexion'\n});\n\nRouter.route('/profil', {\n  name: 'profil'\n});\n\nRouter.route('/modifier', {\n  name: 'modifier'\n});\n\n}).call(this);\n","servePath":"/Router/router.js","sourceMap":null},{"type":"js","data":"(function(){Inscription = new Mongo.Collection(\"inscription\");\nConnexion = new Mongo.Collection(\"connexion\");\nMessage = new Mongo.Collection(\"message\");\nContact = new Mongo.Collection(\"contact\");\n\n}).call(this);\n","servePath":"/collection/collection.js","sourceMap":null}]