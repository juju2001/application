[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nSession = Package.session.Session;\nAccounts = Package['accounts-base'].Accounts;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nLocalStore = Package['frozeman:storage'].LocalStore;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"Chat\":{\"Discussion\":{\"template.discussion.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/Chat/Discussion/template.discussion.js                                         //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n\nTemplate.__checkName(\"discussion\");\nTemplate[\"discussion\"] = new Template(\"Template.discussion\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n  \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n    \", HTML.Raw('<h1 id=\"form-titre\">Actualité de vos discussions</h1>'), \"\\n    \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n      <div class=\"container-fluid\">\\n        <div class=\"navbar-header\">\\n          <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n        </div>\\n        <ul class=\"nav navbar-nav\">\\n          <li><a href=\"/accueil\">Accueil</a></li>\\n          <li class=\"active\"><a href=\"/discussion\">Discussion</a></li>\\n          <li><a href=\"/connexion\">Connexion</a></li>\\n          <li><a href=\"/inscription\">Insciption</a></li>\\n          <li><a href=\"/contact\">Contact</a></li>\\n          <li><a href=\"/profil\">Profil</a></li>\\n          <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          <form class=\"navbar-form navbar-left\">\\n            <div class=\"input-group\">\\n               <input type=\"text\" id=\"recherche\" class=\"form-control\" placeholder=\"Search\">\\n               <div class=\"input-group-btn\">\\n                 <button class=\"btn btn-default\" type=\"submit\">\\n                   <i class=\"glyphicon glyphicon-search\"></i>\\n                 </button>\\n               </div>\\n             </div>\\n        </form>\\n      </ul>\\n    </div>\\n    </nav>'), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"discussion\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"discu\"\n    }, \"\\n      \", HTML.P({\n      id: \"infos\"\n    }, Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \" \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \"\\n      \", HTML.BUTTON({\n      class: \"goDiscu\",\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"contact\"));\n      },\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"prenom\"));\n      }\n    }, \"Discussion\"), \"\\n  \", HTML.DIV({\n      class: function() {\n        return [ \"rond \", Spacebars.mustache(view.lookup(\"noti\")) ];\n      }\n    }, \"\\n      \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"notification\"));\n    }, function() {\n      return \"\\n      \";\n    }), \"\\n  \"), \"\\n    \"), \"\\n    \"), \"\\n    \", HTML.BR(), \"\\n    \" ];\n  }), \"\\n    \", HTML.Raw(\"<div>\\n  </div>\"), \"\\n  \"), \"\\n\");\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"discussion.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/Chat/Discussion/discussion.js                                                  //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nTemplate.discussion.rendered = function () {\n  document.title = \"Actualité de vos discussions\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.discussion.helpers({\n  discussion: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    return Contact.find({\n      userIdNow: sessionID\n    }, {\n      sort: {\n        lastMessage: -1\n      }\n    }).fetch();\n  },\n  notification: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var notification = Message.find({\n      idClient1: id.contact,\n      idClient2: sessionID,\n      lu: \"false\"\n    });\n\n    if (notification) {\n      return notification;\n    }\n  },\n  noti: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var notification = Message.find({\n      idClient1: id.contact,\n      idClient2: sessionID,\n      lu: \"false\"\n    });\n\n    if (notification) {\n      return 'bg-primary';\n    }\n  }\n});\nTemplate.discussion.events({\n  'click .goDiscu': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var contactId = id.contact;\n\n    if (contactId) {\n      LocalStore.set(\"contactID\", contactId);\n      Router.go('/message');\n    }\n\n    ;\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"message\":{\"template.message.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/Chat/message/template.message.js                                               //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n\nTemplate.__checkName(\"message\");\nTemplate[\"message\"] = new Template(\"Template.message\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n  \", HTML.FORM(\"\\n    \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n      \", HTML.Raw('<h1 id=\"form-titre\">Message</h1>'), \"\\n      \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li><a href=\"/accueil\">Accueil</a></li>\\n            <li class=\"active\"><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>'), \"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"messages\"));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      class: function() {\n        return [ \" chat col-sm-12 \", Spacebars.mustache(view.lookup(\"color\")), \" \" ];\n      }\n    }, \"\\n          \", Blaze.View(\"lookup:message\", function() {\n      return Spacebars.mustache(view.lookup(\"message\"));\n    }), \"\\n        \"), \"\\n        \", HTML.BR(), \"\\n      \" ];\n  }), \"\\n      \", HTML.Raw(\"<br>\"), \"\\n      \", HTML.Raw(\"<br>\"), \"\\n     \", HTML.Raw(\"<br>\"), \"\\n    \", HTML.Raw('<div class=\"form-groupe\">\\n      <input type=\"text\" class=\"form-control\" name=\"message\" id=\"messages\">\\n      <br>\\n      <input type=\"submit\" name=\"envoyer\" value=\"Envoyer\">\\n    </div>'), \"\\n  \"), \"\\n  \", HTML.Raw('<a href=\"/discussion\">Retour</a>'), \"\\n  \"), \"\\n\");\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"message.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/Chat/message/message.js                                                        //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nTemplate.message.rendered = function () {\n  document.title = \"Message\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.message.helpers({\n  messages: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    Meteor.call('notification', sessionID, contactID);\n    return Message.find({\n      $or: [{\n        idClient1: sessionID,\n        idClient2: contactID\n      }, {\n        idClient1: contactID,\n        idClient2: sessionID\n      }]\n    }, {\n      sort: {\n        hours: 1\n      }\n    }).fetch();\n  },\n  color: function () {\n    if (this.idClient1 === LocalStore.get(\"userID\")) {\n      return 'text-success text-right';\n    }\n\n    return 'text-danger text-left ';\n  }\n});\nTemplate.message.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var find = Connexion.findOne({\n      userIdNow: sessionID\n    });\n    var message = event.target.message.value;\n\n    if (message) {\n      var now = new Date();\n      var hash3 = {\n        idClient1: sessionID,\n        idClient2: contactID,\n        message: message,\n        lu: \"false\",\n        hours: now.getTime()\n      };\n      var time = now.getTime();\n      Meteor.call('message', hash3, function (data3) {});\n      Meteor.call('lastMessage', time, sessionID, contactID);\n      $('#messages').val('');\n    }\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"Contact\":{\"contact\":{\"template.contact.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/Contact/contact/template.contact.js                                            //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n\nTemplate.__checkName(\"contact\");\nTemplate[\"contact\"] = new Template(\"Template.contact\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, HTML.Raw('\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Contact</h1>\\n      <nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li class=\"active\"><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </div>\\n  </form>\\n  '), HTML.FORM(\"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"contacter\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"col-sm-3\"\n    }, \"\\n      Nom : \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \"\\n      \", HTML.BR(), \" Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \"\\n      \", HTML.BR(), \" Surnom : \", Blaze.View(\"lookup:surnom\", function() {\n      return Spacebars.mustache(view.lookup(\"surnom\"));\n    }), \"\\n      \", HTML.BR(), \" Age : \", Blaze.View(\"lookup:age\", function() {\n      return Spacebars.mustache(view.lookup(\"age\"));\n    }), \"\\n      \", HTML.BR(), \" E-mail : \", Blaze.View(\"lookup:email\", function() {\n      return Spacebars.mustache(view.lookup(\"email\"));\n    }), \"\\n      \", HTML.BR(), \" Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n      return Spacebars.mustache(view.lookup(\"pseudo\"));\n    }), \"\\n      \", HTML.BR(), \"\\n      \", HTML.BUTTON({\n      class: \"modifier\",\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"contact\"));\n      }\n    }, \"Modifier\"), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n  \"), \"\\n\");\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"contact.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/Contact/contact/contact.js                                                     //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nTemplate.contact.rendered = function () {\n  document.title = \"Contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.contact.helpers({\n  contacter: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var last = Contact.find({\n      userIdNow: sessionID\n    }).fetch();\n\n    if (last) {\n      return last;\n    }\n\n    ;\n  }\n});\nTemplate.contact.events({\n  'click .modifier': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var contactId = id.contact;\n\n    if (contactId) {\n      LocalStore.set(\"newContactID\", contactId);\n      Router.go('/modifier');\n    }\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"newContact\":{\"template.newContact.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/Contact/newContact/template.newContact.js                                      //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n\nTemplate.__checkName(\"newContact\");\nTemplate[\"newContact\"] = new Template(\"Template.newContact\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n    \", HTML.FORM(\"\\n      \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n        \", HTML.Raw('<h1 id=\"form-titre\">Nouveau contact</h1>'), \"\\n        \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n          <div class=\"container-fluid\">\\n            <div class=\"navbar-header\">\\n              <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n            </div>\\n            <ul class=\"nav navbar-nav\">\\n              <li><a href=\"/accueil\">Accueil</a></li>\\n              <li><a href=\"/message\">Message</a></li>\\n              <li><a href=\"/connexion\">Connexion</a></li>\\n              <li><a href=\"/inscription\">Insciption</a></li>\\n              <li class=\"active\"><a href=\"/contact\">Contact</a></li>\\n              <li><a href=\"/profil\">Profil</a></li>\\n              <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n            </ul>\\n          </div>\\n        </nav>'), \"\\n        \", HTML.LABEL({\n    for: \"name\"\n  }, \"Nom : \", Blaze.View(\"lookup:nom\", function() {\n    return Spacebars.mustache(view.lookup(\"nom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"prenom\"\n  }, \"Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n    return Spacebars.mustache(view.lookup(\"prenom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<label for=\"prenom\">Surnom :</label>'), \"\\n        \", HTML.Raw('<input type=\"text\" name=\"surnom\" id=\"surnom\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n    return Spacebars.mustache(view.lookup(\"pseudo\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Age :  \", Blaze.View(\"lookup:age\", function() {\n    return Spacebars.mustache(view.lookup(\"age\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"E-mail : \", Blaze.View(\"lookup:email\", function() {\n    return Spacebars.mustache(view.lookup(\"email\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<input type=\"submit\" name=\"enregister\" value=\"Enregister\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<a href=\"/contact\">Retourner à la page contact</a>'), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"newContact.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/Contact/newContact/newContact.js                                               //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nTemplate.newContact.rendered = function () {\n  document.title = \"Nouveau contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.newContact.helpers({\n  nom: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.nom;\n    }\n  },\n  prenom: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.prenom;\n    }\n  },\n  age: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.age;\n    }\n  },\n  pseudo: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.pseudo;\n    }\n  },\n  email: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.email;\n    }\n  }\n});\nTemplate.newContact.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (trouver) {\n      var nom = trouver.nom;\n      var prenom = trouver.prenom;\n      var pseudo = trouver.pseudo;\n      var age = trouver.age;\n      var email = trouver.email;\n      var surnom = event.target.surnom.value;\n      var now = new Date();\n      var hash5 = {\n        userIdNow: LocalStore.get(\"userID\"),\n        nom: nom,\n        prenom: prenom,\n        age: age,\n        email: email,\n        pseudo: pseudo,\n        surnom: surnom,\n        contact: LocalStore.get(\"newContactID\"),\n        hours: now.getTime(),\n        lastMessage: 0\n      };\n      Meteor.call('newContact', hash5);\n      Router.go('/contact');\n      LocalStore.set(\"newContactID\", null);\n    }\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"accueil\":{\"template.accueil.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/accueil/template.accueil.js                                                    //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n\nTemplate.__checkName(\"accueil\");\nTemplate[\"accueil\"] = new Template(\"Template.accueil\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n  \", HTML.FORM(\"\\n    \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n      \", HTML.Raw('<h1 id=\"form-titre\">Accueil</h1>'), \"\\n      \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li class=\"active\"><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>'), \"\\n      \", HTML.H2(\"Bonjour, \", Blaze.View(\"lookup:prenomAccueil\", function() {\n    return Spacebars.mustache(view.lookup(\"prenomAccueil\"));\n  })), \"\\n    \"), \"\\n    \", HTML.Raw(\"<p>Avec cette application tu pourras chatter avec tes amis à tous moments, partager ta journée et les moments les plus importants de ta vie.</p>\"), \"\\n  \"), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"contacter\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"col-sm-3\"\n    }, \"\\n    Nom : \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \"\\n    \", HTML.BR(), \"\\n    Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \"\\n    \", HTML.BR(), \"\\n    Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n      return Spacebars.mustache(view.lookup(\"pseudo\"));\n    }), \"\\n    \", HTML.BR(), \"\\n    \", HTML.BUTTON({\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"_id\"));\n      },\n      class: \"goAjouter\"\n    }, \"Ajouter\"), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n\");\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"accueil.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/accueil/accueil.js                                                             //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nTemplate.accueil.rendered = function () {\n  document.title = \"Accueil\";\n};\n\nTemplate.accueil.helpers({\n  prenomAccueil: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n  contacter: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var contacts = Contact.find({\n      userIdNow: sessionID\n    }).fetch();\n\n    var ids = _.pluck(contacts, 'contact');\n\n    ids.push(sessionID);\n    return Inscription.find({\n      _id: {\n        $nin: ids\n      }\n    }).fetch();\n  }\n});\nTemplate.accueil.events({\n  'click .goAjouter': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var identifiant = Inscription.findOne({\n      _id: this._id\n    });\n    var id = identifiant._id;\n\n    if (id) {\n      LocalStore.set(\"newContactID\", id);\n      Router.go('/newContact');\n    }\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"connexion\":{\"template.connexion.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/connexion/template.connexion.js                                                //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n\nTemplate.__checkName(\"connexion\");\nTemplate[\"connexion\"] = new Template(\"Template.connexion\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Connexion</h1>\\n        <div class=\"form-group\">\\n          <nav class=\"navbar navbar-default\">\\n            <div class=\"container-fluid\">\\n              <div class=\"navbar-header\">\\n                <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n              </div>\\n              <ul class=\"nav navbar-nav\">\\n                <li><a href=\"/accueil\">Accueil</a></li>\\n                <li><a href=\"/discussion\">Discussion</a></li>\\n                <li class=\"active\"><a href=\"/connexion\">Connexion</a></li>\\n                <li><a href=\"/inscription\">Insciption</a></li>\\n                <li><a href=\"/contact\">Contact</a></li>\\n                <li><a href=\"/profil\">Profil</a></li>\\n                <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n              </ul>\\n            </div>\\n          </nav>\\n      </div>\\n      <label for=\"name\">Pseudo :</label>\\n      <input class=\"form-control\" type=\"text\" id=\"pseudo_connexion\" name=\"pseudo_connexion\">\\n      <label for=\"password\">password : </label>\\n      <input class=\"form-control\" type=\"password\" id=\"password_connexion\" name=\"password_connexion\">\\n      <br>\\n      <input type=\"submit\" id=\"envoyer\" name=\"envoyer\" value=\"Connexion\">\\n    </div>\\n  </form>\\n  <a href=\"/inscription\">S\\'inscrire</a>\\n</div>');\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"deconnexion\":{\"template.deconnexion.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/deconnexion/template.deconnexion.js                                            //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n\nTemplate.__checkName(\"deconnexion\");\nTemplate[\"deconnexion\"] = new Template(\"Template.deconnexion\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Deconnexion</h1>\\n      <nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li class=\"active\"><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </div>\\n  </form>\\n</div>');\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"deconnexion.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/deconnexion/deconnexion.js                                                     //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nTemplate.deconnexion.rendered = function () {\n  document.title = \"Déconnexion\";\n\n  if (confirm(\"Tu veux te déconnecter\")) {\n    LocalStore.set(\"userID\", null);\n\n    if (LocalStore.get(\"userID\") == null) {\n      Router.go('/connexion');\n    }\n\n    ;\n  } else {\n    Router.go('/accueil');\n  }\n};\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"inscription\":{\"template.inscription.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/inscription/template.inscription.js                                            //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n\nTemplate.__checkName(\"inscription\");\nTemplate[\"inscription\"] = new Template(\"Template.inscription\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n    <form>\\n      <div class=\"form-group\">\\n        <h1 id=\"form-titre\">Formulaire d\\'inscription</h1>\\n          <div class=\"form-group\">\\n            <nav class=\"navbar navbar-default\">\\n              <div class=\"container-fluid\">\\n                <div class=\"navbar-header\">\\n                  <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n                </div>\\n                <ul class=\"nav navbar-nav\">\\n                  <li><a href=\"/accueil\">Accueil</a></li>\\n                  <li><a href=\"/discussion\">Discussion</a></li>\\n                  <li><a href=\"/connexion\">Connexion</a></li>\\n                  <li class=\"active\"><a href=\"/inscription\">Insciption</a></li>\\n                  <li><a href=\"/contact\">Contact</a></li>\\n                  <li><a href=\"/profil\">Profil</a></li>\\n                  <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n                </ul>\\n              </div>\\n            </nav>\\n        </div>\\n        <label for=\"name\">Nom :</label>\\n        <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\">\\n        <label for=\"prenom\">Prénom </label>\\n        <input class=\"form-control\" type=\"text\" id=\"prenom\" name=\"prenom\">\\n        <label for=\"age\">Age :</label>\\n        <input class=\"form-control\" type=\"number\" id=\"age\" name=\"age\" min=\"10\" max=\"110\">\\n        <label for=\"email\">E-mail :</label>\\n        <input class=\"form-control\" type=\"email\" id=\"email\" name=\"email\">\\n        <label for=\"prenom\">Pseudo </label>\\n        <input class=\"form-control\" type=\"text\" id=\"pseudo\" name=\"pseudo\">\\n        <label for=\"password\">password : </label>\\n        <input class=\"form-control\" type=\"password\" id=\"mdp1\" name=\"password1\">\\n        <label for=\"password\">password :</label>\\n        <input class=\"form-control\" type=\"password\" id=\"mdp2\" name=\"password2\">\\n        <br>\\n        <input type=\"submit\" name=\"envoyer\" value=\"Envoyer\">\\n      </div>\\n    </form>\\n    <a href=\"/connexion\">Connexion</a>\\n  </div>');\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"inscription.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/inscription/inscription.js                                                     //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nTemplate.inscription.rendered = function () {\n  document.title = \"Insciption\";\n};\n\nTemplate.inscription.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var mdp1 = event.target.mdp1.value;\n    var mdp2 = event.target.mdp2.value;\n    var pseudo = event.target.pseudo.value;\n    var pseudoDb = Inscription.findOne({\n      pseudo: pseudo\n    });\n\n    if (mdp1 == mdp2) {\n      if (mdp1.length > 3) {\n        if (!pseudoDb) {\n          alert(\"Merci de l'inscription !\");\n          var hash = {\n            nom: event.target.name.value,\n            prenom: event.target.prenom.value,\n            age: event.target.age.value,\n            email: event.target.email.value,\n            pseudo: event.target.pseudo.value,\n            password: event.target.mdp1.value\n          };\n          Meteor.call('insertInscription', hash, function (error, result) {\n            if (result) {\n              console.log(result);\n              Router.go('/connexion');\n            }\n\n            if (error) {\n              console.log(error);\n            }\n          });\n        } else {\n          alert(\"Le pseudo que vous avez choisi est déjà utilisé !\");\n        }\n      } else {\n        alert(\"Votre mot de passe est trop court !\");\n      }\n\n      ;\n    } else {\n      alert(\"Vos mots de passe ne sont pas identiques ! \");\n    }\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"modifier\":{\"template.modifier.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/modifier/template.modifier.js                                                  //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n\nTemplate.__checkName(\"modifier\");\nTemplate[\"modifier\"] = new Template(\"Template.modifier\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n    \", HTML.FORM(\"\\n      \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n        \", HTML.Raw('<h1 id=\"form-titre\">Nouveau contact</h1>'), \"\\n        \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n          <div class=\"container-fluid\">\\n            <div class=\"navbar-header\">\\n              <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n            </div>\\n            <ul class=\"nav navbar-nav\">\\n              <li><a href=\"/accueil\">Accueil</a></li>\\n              <li><a href=\"/message\">Message</a></li>\\n              <li><a href=\"/connexion\">Connexion</a></li>\\n              <li><a href=\"/inscription\">Insciption</a></li>\\n              <li class=\"active\"><a href=\"/contact\">Contact</a></li>\\n              <li><a href=\"/profil\">Profil</a></li>\\n              <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n            </ul>\\n          </div>\\n        </nav>'), \"\\n        \", HTML.LABEL({\n    for: \"name\"\n  }, \"Nom : \", Blaze.View(\"lookup:nom\", function() {\n    return Spacebars.mustache(view.lookup(\"nom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"prenom\"\n  }, \"Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n    return Spacebars.mustache(view.lookup(\"prenom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<label for=\"prenom\">Surnom :</label>'), \"\\n        \", HTML.Raw('<input type=\"text\" name=\"surnom\" id=\"surnom\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n    return Spacebars.mustache(view.lookup(\"pseudo\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Age :  \", Blaze.View(\"lookup:age\", function() {\n    return Spacebars.mustache(view.lookup(\"age\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"E-mail : \", Blaze.View(\"lookup:email\", function() {\n    return Spacebars.mustache(view.lookup(\"email\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<input type=\"submit\" name=\"Modifier\" value=\"Modifier\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<a href=\"/contact\">Retourner à la page contact</a>'), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"modifier.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/modifier/modifier.js                                                           //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nTemplate.modifier.rendered = function () {\n  document.title = \"Modifier\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID && find != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.modifier.helpers({\n  nom: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.nom;\n    }\n  },\n  prenom: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.prenom;\n    }\n  },\n  age: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.age;\n    }\n  },\n  pseudo: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.pseudo;\n    }\n  },\n  email: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.email;\n    }\n  }\n});\nTemplate.modifier.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (trouver) {\n      var newSurnom = event.target.surnom.value;\n      var userIdNow = LocalStore.get(\"userID\");\n      var contact = LocalStore.get(\"newContactID\");\n\n      if (newSurnom) {\n        Meteor.call('modifierSurnom', userIdNow, contact, newSurnom, function () {});\n        Router.go('/contact'); //    LocalStore.set(\"newContactID\", null);\n      }\n    }\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"profil\":{\"template.profil.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/profil/template.profil.js                                                      //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n\nTemplate.__checkName(\"profil\");\nTemplate[\"profil\"] = new Template(\"Template.profil\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Profil</h1>\\n      <nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li class=\"active\"><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </div>\\n  </form>\\n  Statut :\\n  <input type=\"text\" name=\"statut\" value=\"\">\\n</div>');\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"profil.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/profil/profil.js                                                               //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nTemplate.profil.rendered = function () {\n  document.title = \"Profil\";\n};\n\nTemplate.profil.helpers({\n  prenom: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"template.not_found.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/template.not_found.js                                                          //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n\nTemplate.__checkName(\"notFound\");\nTemplate[\"notFound\"] = new Template(\"Template.notFound\", (function() {\n  var view = this;\n  return HTML.Raw('<h1>Test not found</h1>\\n  <a href=\"/inscription\">S\\'inscrire</a>\\n  <br>\\n  <a href=\"/connexion\">Se connecter</a>');\n}));\n\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Router\":{\"router.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// Router/router.js                                                                      //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nRouter.configure({\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound'\n});\nRouter.route('/inscription', {\n  name: 'inscription'\n});\nRouter.route('/connexion', {\n  name: 'connexion'\n});\nRouter.route('/accueil', {\n  name: 'accueil'\n});\nRouter.route('/message', {\n  name: 'message'\n});\nRouter.route('/contact', {\n  name: 'contact'\n});\nRouter.route('/newContact', {\n  name: 'newContact'\n});\nRouter.route('/discussion', {\n  name: 'discussion'\n});\nRouter.route('/deconnexion', {\n  name: 'deconnexion'\n});\nRouter.route('/profil', {\n  name: 'profil'\n});\nRouter.route('/modifier', {\n  name: 'modifier'\n});\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collection\":{\"collection.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// collection/collection.js                                                              //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nInscription = new Mongo.Collection(\"inscription\");\nConnexion = new Mongo.Collection(\"connexion\");\nMessage = new Mongo.Collection(\"message\");\nContact = new Mongo.Collection(\"contact\");\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\nrequire(\"/client/Chat/Discussion/template.discussion.js\");\nrequire(\"/client/Chat/message/template.message.js\");\nrequire(\"/client/Contact/contact/template.contact.js\");\nrequire(\"/client/Contact/newContact/template.newContact.js\");\nrequire(\"/client/accueil/template.accueil.js\");\nrequire(\"/client/connexion/template.connexion.js\");\nrequire(\"/client/deconnexion/template.deconnexion.js\");\nrequire(\"/client/inscription/template.inscription.js\");\nrequire(\"/client/modifier/template.modifier.js\");\nrequire(\"/client/profil/template.profil.js\");\nrequire(\"/client/template.not_found.js\");\nrequire(\"/client/Chat/Discussion/discussion.js\");\nrequire(\"/client/Chat/message/message.js\");\nrequire(\"/client/Contact/contact/contact.js\");\nrequire(\"/client/Contact/newContact/newContact.js\");\nrequire(\"/client/accueil/accueil.js\");\nrequire(\"/client/deconnexion/deconnexion.js\");\nrequire(\"/client/inscription/inscription.js\");\nrequire(\"/client/modifier/modifier.js\");\nrequire(\"/client/profil/profil.js\");\nrequire(\"/Router/router.js\");\nrequire(\"/collection/collection.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/Chat/Discussion/discussion.js","client/Chat/message/message.js","client/Contact/contact/contact.js","client/Contact/newContact/newContact.js","client/accueil/accueil.js","client/deconnexion/deconnexion.js","client/inscription/inscription.js","client/modifier/modifier.js","client/profil/profil.js","Router/router.js","collection/collection.js"],"names":["Template","discussion","rendered","document","title","sessionID","LocalStore","get","find","Connexion","findOne","userIdNow","Router","go","helpers","Contact","sort","lastMessage","fetch","notification","contactID","id","_id","Message","idClient1","contact","idClient2","lu","noti","events","event","preventDefault","stopPropagation","contactId","set","message","messages","Meteor","call","$or","hours","color","target","value","now","Date","hash3","getTime","time","data3","$","val","contacter","last","newContact","nom","Inscription","prenom","age","pseudo","email","trouver","surnom","hash5","accueil","prenomAccueil","contacts","ids","_","pluck","push","$nin","identifiant","deconnexion","confirm","inscription","mdp1","mdp2","pseudoDb","length","alert","hash","name","password","error","result","console","log","modifier","newSurnom","profil","configure","loadingTemplate","notFoundTemplate","route","Mongo","Collection"],"mappings":"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","file":"/app.js","sourcesContent":["Template.discussion.rendered = function() {\n  document.title = \"Actualité de vos discussions\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.discussion.helpers({\n  discussion: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    return Contact.find({\n      userIdNow: sessionID,\n    }, {\n      sort: {\n        lastMessage: -1,\n      },\n    }).fetch();\n  },\n\n  notification: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var notification = Message.find({\n      idClient1: id.contact,\n      idClient2: sessionID,\n      lu: \"false\",\n    });\n    if (notification) {\n      return notification;\n    }\n  },\n\n  noti: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var notification = Message.find({\n      idClient1: id.contact,\n      idClient2: sessionID,\n      lu: \"false\",\n    });\n    if (notification) {\n      return 'bg-primary';\n    }\n  },\n});\n\nTemplate.discussion.events({\n  'click .goDiscu': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var contactId = id.contact;\n    if (contactId) {\n      LocalStore.set(\"contactID\", contactId);\n      Router.go('/message');\n    };\n  },\n});\n","Template.message.rendered = function() {\n  document.title = \"Message\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.message.helpers({\n  messages: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    Meteor.call('notification', sessionID, contactID);\n    return Message.find({\n      $or: [{\n        idClient1: sessionID,\n        idClient2: contactID,\n      }, {\n        idClient1: contactID,\n        idClient2: sessionID,\n      }],\n    }, {\n      sort: {\n        hours: 1,\n      },\n    }).fetch();\n  },\n  color: function() {\n  if (this.idClient1 === LocalStore.get(\"userID\")) {\n      return 'text-success text-right';\n    }\n    return 'text-danger text-left ';\n  },\n});\n\n\nTemplate.message.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var find = Connexion.findOne({\n      userIdNow: sessionID,\n    });\n    var message = event.target.message.value;\n    if (message) {\n      var now = new Date();\n      var hash3 = {\n        idClient1: sessionID,\n        idClient2: contactID,\n        message: message,\n        lu: \"false\",\n        hours: now.getTime(),\n      };\n      var time = now.getTime();\n      Meteor.call('message', hash3, function(data3) {});\n      Meteor.call('lastMessage', time, sessionID, contactID);\n      $('#messages').val('');\n    }\n  },\n});\n","Template.contact.rendered = function() {\n  document.title = \"Contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.contact.helpers({\n  contacter: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var last = Contact.find({\n      userIdNow: sessionID,\n    }).fetch();\n    if (last) {\n      return last;\n    };\n  }\n});\n\nTemplate.contact.events({\n  'click .modifier': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var contactId = id.contact;\n    if (contactId) {\n      LocalStore.set(\"newContactID\", contactId);\n      Router.go('/modifier');\n    }\n    }\n})\n","Template.newContact.rendered = function() {\n  document.title = \"Nouveau contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.newContact.helpers({\n  nom : function(){\n    var newContact = Inscription.findOne({\n      _id : LocalStore.get(\"newContactID\"),\n    });\n    if(newContact){\n      return newContact.nom;\n    }\n  },\n\nprenom : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.prenom;\n  }\n},\n\nage : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.age;\n  }\n},\n\npseudo : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.pseudo;\n  }\n},\nemail : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.email;\n  }\n},\n});\n\nTemplate.newContact.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\"),\n    });\n    if (trouver) {\n        var nom = trouver.nom;\n        var prenom = trouver.prenom;\n        var pseudo = trouver.pseudo;\n        var age = trouver.age;\n        var email = trouver.email;\n        var surnom = event.target.surnom.value;\n        var now = new Date();\n        var hash5 = {\n          userIdNow: LocalStore.get(\"userID\"),\n          nom: nom,\n          prenom: prenom,\n          age: age,\n          email: email,\n          pseudo: pseudo,\n          surnom: surnom,\n          contact: LocalStore.get(\"newContactID\"),\n          hours: now.getTime(),\n          lastMessage : 0,\n        };\n        Meteor.call('newContact', hash5)\n        Router.go('/contact');\n                LocalStore.set(\"newContactID\", null);\n      }\n  },\n});\n","Template.accueil.rendered = function() {\n  document.title = \"Accueil\";\n};\n\n\nTemplate.accueil.helpers({\n  prenomAccueil: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n\n  contacter: function() {\n    var sessionID = LocalStore.get(\"userID\");\n\n    var contacts = Contact.find({\n      userIdNow : sessionID,\n    }).fetch();\n\n    var ids = _.pluck(contacts, 'contact');\n\n    ids.push(sessionID);\n\n    return Inscription.find({\n      _id: {\n        $nin: ids,\n      },\n    }).fetch();\n  },\n});\n\n\nTemplate.accueil.events({\n  'click .goAjouter': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var identifiant = Inscription.findOne({\n      _id: this._id,\n    });\n    var id = identifiant._id;\n    if (id) {\n      LocalStore.set(\"newContactID\", id);\n      Router.go('/newContact');\n    }\n  },\n})\n","Template.deconnexion.rendered = function(){\n      document.title = \"Déconnexion\";\n      if(confirm(\"Tu veux te déconnecter\")){\n        LocalStore.set(\"userID\", null);\n        if (LocalStore.get(\"userID\") == null) {\n          Router.go('/connexion');\n        };\n      }else{\n        Router.go('/accueil');\n      }\n    };\n","Template.inscription.rendered = function() {\n  document.title = \"Insciption\";\n};\n\nTemplate.inscription.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var mdp1 = event.target.mdp1.value;\n    var mdp2 = event.target.mdp2.value;\n    var pseudo = event.target.pseudo.value;\n    var pseudoDb = Inscription.findOne({\n      pseudo: pseudo,\n    });\n    if (mdp1 == mdp2) {\n      if (mdp1.length > 3) {\n        if (!pseudoDb) {\n          alert(\"Merci de l'inscription !\");\n          var hash = {\n            nom       :  event.target.name.value,\n            prenom    :  event.target.prenom.value,\n            age       :  event.target.age.value,\n            email     :  event.target.email.value,\n            pseudo    :  event.target.pseudo.value,\n            password  :  event.target.mdp1.value,\n          };\n          Meteor.call('insertInscription', hash, function(error, result) {\n            if (result) {\n              console.log(result);\n\n              Router.go('/connexion');\n            }\n            if (error) {\n              console.log(error);\n            }\n          });\n           }\n         else {\n          alert(\"Le pseudo que vous avez choisi est déjà utilisé !\");\n         }\n        }\n       else {\n        alert(\"Votre mot de passe est trop court !\");\n      };\n\n    }\n     else {\n      alert(\"Vos mots de passe ne sont pas identiques ! \");\n    }\n  }\n});\n","Template.modifier.rendered = function() {\n  document.title = \"Modifier\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID && find != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.modifier.helpers({\n  nom : function(){\n    var newContact = Inscription.findOne({\n      _id : LocalStore.get(\"newContactID\"),\n    });\n    if(newContact){\n      return newContact.nom;\n    }\n  },\n\nprenom : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.prenom;\n  }\n},\n\nage : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.age;\n  }\n},\n\npseudo : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.pseudo;\n  }\n},\nemail : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.email;\n  }\n},\n});\n\nTemplate.modifier.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\"),\n    });\n    if (trouver) {\n        var newSurnom = event.target.surnom.value;\n        var userIdNow = LocalStore.get(\"userID\");\n        var contact = LocalStore.get(\"newContactID\");\n\n\n        if(newSurnom){\n          Meteor.call('modifierSurnom', userIdNow, contact, newSurnom, function() {})\n          Router.go('/contact');\n    //    LocalStore.set(\"newContactID\", null);\n      }\n    }\n  },\n});\n","Template.profil.rendered = function() {\n  document.title = \"Profil\";\n};\n\n\nTemplate.profil.helpers({\n  prenom: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n});\n","Router.configure({\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n});\n\n\nRouter.route('/inscription', {\n  name: 'inscription'\n});\n\n\nRouter.route('/connexion', {\n  name: 'connexion'\n});\n\nRouter.route('/accueil', {\n  name: 'accueil'\n});\n\nRouter.route('/message', {\n  name: 'message'\n});\n\nRouter.route('/contact', {\n  name: 'contact'\n});\n\nRouter.route('/newContact', {\n  name: 'newContact'\n});\n\nRouter.route('/discussion', {\n  name: 'discussion'\n});\n\nRouter.route('/deconnexion', {\n  name: 'deconnexion'\n});\n\nRouter.route('/profil', {\n  name: 'profil'\n});\n\nRouter.route('/modifier', {\n  name: 'modifier'\n});\n","Inscription = new Mongo.Collection(\"inscription\");\nConnexion = new Mongo.Collection(\"connexion\");\nMessage = new Mongo.Collection(\"message\");\nContact = new Mongo.Collection(\"contact\");\n"]}}]