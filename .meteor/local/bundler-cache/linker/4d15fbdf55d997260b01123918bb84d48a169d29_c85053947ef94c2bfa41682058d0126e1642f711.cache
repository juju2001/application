[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nAccounts = Package['accounts-base'].Accounts;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nLocalStore = Package['frozeman:storage'].LocalStore;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"Router\":{\"router.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// Router/router.js                                                  //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nRouter.configure({\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound'\n});\nRouter.route('/inscription', {\n  name: 'inscription'\n});\nRouter.route('/connexion', {\n  name: 'connexion'\n});\nRouter.route('/accueil', {\n  name: 'accueil'\n});\nRouter.route('/message', {\n  name: 'message'\n});\nRouter.route('/contact', {\n  name: 'contact'\n});\nRouter.route('/newContact', {\n  name: 'newContact'\n});\nRouter.route('/discussion', {\n  name: 'discussion'\n});\nRouter.route('/deconnexion', {\n  name: 'deconnexion'\n});\nRouter.route('/profil', {\n  name: 'profil'\n});\nRouter.route('/modifier', {\n  name: 'modifier'\n});\n///////////////////////////////////////////////////////////////////////\n\n}},\"collection\":{\"collection.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// collection/collection.js                                          //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nInscription = new Mongo.Collection(\"inscription\");\nConnexion = new Mongo.Collection(\"connexion\");\nMessage = new Mongo.Collection(\"message\");\nContact = new Mongo.Collection(\"contact\");\n///////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"server.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/server.js                                                  //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nMeteor.startup(() => {// code to run on server at startup\n});\nMeteor.methods({\n  insertInscription: function (data) {\n    console.log(data); //retourne l'ID\n\n    return Inscription.insert(data);\n  }\n});\nMeteor.methods({\n  connexion: function (data) {\n    return Connexion.insert(data);\n  }\n});\nMeteor.methods({\n  message: function (data3) {\n    return Message.insert(data3);\n  }\n});\nMeteor.methods({\n  newContact: function (data5) {\n    return Contact.insert(data5);\n  }\n});\nMeteor.methods({\n  recherche: function (data) {\n    return Recherche.insert(data);\n  }\n});\nMeteor.methods({\n  modifierSurnom: function (userIdNow, contact, newSurnom) {\n    return Contact.update({\n      userIdNow: userIdNow,\n      contact: contact\n    }, {\n      $set: {\n        surnom: newSurnom\n      }\n    });\n  }\n});\nMeteor.methods({\n  notification: function (sessionID, contactID) {\n    return Message.update({\n      idClient1: contactID,\n      idClient2: sessionID,\n      lu: \"false\"\n    }, {\n      $set: {\n        lu: \"true\"\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  lastMessage: function (time, sessionID, contactID) {\n    return Contact.update({\n      contact: sessionID,\n      userIdNow: contactID\n    }, {\n      $set: {\n        lastMessage: time\n      }\n    });\n  }\n});\nMeteor.methods({\n  deco: function (sessionID) {\n    return Inscription.update({\n      _id: sessionID\n    }, {\n      $set: {\n        etat: \"false\"\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  heureDeco: function (sessionID, heureDeco) {\n    return Connexion.update({\n      userIdNow: sessionID\n    }, {\n      $set: {\n        deconnexion: heureDeco\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  etat: function (userIdNow) {\n    return Inscription.update({\n      _id: userIdNow\n    }, {\n      $set: {\n        etat: \"true\"\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  dec0: function (userIdNow) {\n    return Connexion.update({\n      userIdNow: userIdNow\n    }, {\n      $set: {\n        deconnexion: 0\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  statut: function (statut, sessionID) {\n    return Inscription.update({\n      _id: sessionID\n    }, {\n      $set: {\n        statut: statut\n      }\n    });\n  }\n});\nMeteor.methods({\n  supprimerContact: function (sessionID, contactID) {\n    return Contact.remove({\n      userIdNow: sessionID,\n      contact: contactID\n    });\n  }\n});\nMeteor.methods({\n  supprimerMessage1: function (sessionID, contactID) {\n    return Message.update({\n      idClient1: sessionID,\n      idClient2: contactID\n    }, {\n      $set: {\n        luClient1: \"false\"\n      }\n    }, {\n      multi: true\n    });\n  }\n});\nMeteor.methods({\n  supprimerMessage2: function (sessionID, contactID) {\n    return Message.update({\n      idClient1: contactID,\n      idClient2: sessionID\n    }, {\n      $set: {\n        luClient2: \"false\"\n      }\n    }, {\n      multi: true\n    });\n  }\n});\n///////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nrequire(\"/Router/router.js\");\nrequire(\"/collection/collection.js\");\nrequire(\"/server/server.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["Router/router.js","collection/collection.js","server/server.js"],"names":["Router","configure","loadingTemplate","notFoundTemplate","route","name","Inscription","Mongo","Collection","Connexion","Message","Contact","Meteor","module","watch","require","v","startup","methods","insertInscription","data","console","log","insert","connexion","message","data3","newContact","data5","recherche","Recherche","modifierSurnom","userIdNow","contact","newSurnom","update","$set","surnom","notification","sessionID","contactID","idClient1","idClient2","lu","multi","lastMessage","time","deco","_id","etat","heureDeco","deconnexion","dec0","statut","supprimerContact","remove","supprimerMessage1","luClient1","supprimerMessage2","luClient2"],"mappings":"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","file":"/app.js","sourcesContent":["Router.configure({\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n});\n\n\nRouter.route('/inscription', {\n  name: 'inscription'\n});\n\n\nRouter.route('/connexion', {\n  name: 'connexion'\n});\n\nRouter.route('/accueil', {\n  name: 'accueil'\n});\n\nRouter.route('/message', {\n  name: 'message'\n});\n\nRouter.route('/contact', {\n  name: 'contact'\n});\n\nRouter.route('/newContact', {\n  name: 'newContact'\n});\n\nRouter.route('/discussion', {\n  name: 'discussion'\n});\n\nRouter.route('/deconnexion', {\n  name: 'deconnexion'\n});\n\nRouter.route('/profil', {\n  name: 'profil'\n});\n\nRouter.route('/modifier', {\n  name: 'modifier'\n});\n","Inscription =   new Mongo.Collection(\"inscription\");\nConnexion   =   new Mongo.Collection(\"connexion\");\nMessage     =   new Mongo.Collection(\"message\");\nContact     =   new Mongo.Collection(\"contact\");\n","import {\n  Meteor\n} from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n\nMeteor.methods({\n  insertInscription: function(data) {\n    console.log(data);\n    //retourne l'ID\n    return Inscription.insert(data);\n  },\n});\n\n\nMeteor.methods({\n  connexion: function(data) {\n    return Connexion.insert(data);\n  },\n});\n\n\nMeteor.methods({\n  message: function(data3) {\n    return Message.insert(data3);\n  },\n});\n\nMeteor.methods({\n  newContact: function(data5) {\n    return Contact.insert(data5);\n  },\n});\n\nMeteor.methods({\n  recherche: function(data) {\n    return Recherche.insert(data);\n  },\n});\n\nMeteor.methods({\n  modifierSurnom: function(userIdNow, contact, newSurnom) {\n    return Contact.update({\n      userIdNow: userIdNow,\n      contact: contact\n    }, {\n      $set: {\n        surnom: newSurnom\n      }\n    });\n  },\n});\n\nMeteor.methods({\n  notification: function(sessionID, contactID) {\n    return Message.update({\n      idClient1: contactID,\n      idClient2: sessionID,\n      lu: \"false\",\n    }, {\n      $set: {\n        lu: \"true\"\n      }\n    }, {\n      multi: true\n    });\n  },\n});\n\nMeteor.methods({\n  lastMessage: function(time, sessionID, contactID) {\n    return Contact.update({\n      contact: sessionID,\n      userIdNow: contactID,\n    }, {\n      $set: {\n        lastMessage: time,\n      }\n    });\n  },\n});\n\nMeteor.methods({\n  deco: function(sessionID) {\n    return Inscription.update({\n      _id: sessionID,\n    }, {\n      $set: {\n        etat: \"false\",\n      }\n    }, {\n      multi: true\n    });\n  },\n});\n\nMeteor.methods({\n  heureDeco: function(sessionID, heureDeco) {\n    return Connexion.update({\n      userIdNow: sessionID,\n    }, {\n      $set: {\n        deconnexion: heureDeco,\n      }\n    }, {\n      multi: true\n    });\n  },\n});\n\nMeteor.methods({\n  etat: function(userIdNow) {\n    return Inscription.update({\n      _id: userIdNow,\n    }, {\n      $set: {\n        etat: \"true\",\n      }\n    }, {\n      multi: true\n    });\n  },\n});\n\n\nMeteor.methods({\n  dec0: function(userIdNow) {\n    return Connexion.update({\n      userIdNow: userIdNow,\n    }, {\n      $set: {\n        deconnexion: 0,\n      }\n    }, {\n      multi: true,\n    });\n  },\n});\n\nMeteor.methods({\n  statut: function(statut, sessionID) {\n    return Inscription.update({\n      _id: sessionID,\n    }, {\n      $set: {\n        statut: statut,\n      }\n    });\n  },\n});\n\nMeteor.methods({\n  supprimerContact: function(sessionID, contactID) {\n    return Contact.remove({\n      userIdNow: sessionID,\n      contact: contactID,\n    });\n  },\n});\n\nMeteor.methods({\n  supprimerMessage1: function(sessionID, contactID) {\n    return Message.update({\n        idClient1: sessionID,\n        idClient2: contactID,\n}, {\n  $set : {\n    luClient1 : \"false\",\n  }\n},{\n        multi : true,\n      });\n  },\n});\n\nMeteor.methods({\n  supprimerMessage2: function(sessionID, contactID) {\n    return Message.update({\n        idClient1: contactID,\n        idClient2: sessionID,\n}, {\n  $set : {\n    luClient2 : \"false\",\n  }\n},{\n        multi : true,\n      });\n  },\n});\n"]}}]