[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar EJSON = Package.ejson.EJSON;\n\n/* Package-scope variables */\nvar LocalStore;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////\n//                                                                            //\n// packages/frozeman_storage/LocalStore.js                                    //\n//                                                                            //\n////////////////////////////////////////////////////////////////////////////////\n                                                                              //\n\n/**\nThe LocalStore singleton.\n\n@class TemplateStore\n@constructor\n**/\nLocalStore = {\n    /**\n    This object stores all keys and their values.\n\n    @property keys\n    @type Object\n    @default {}\n    @example\n\n        {\n            name->myProperty: \"myValue\",\n            ...\n        }\n\n    **/\n    keys: {},\n\n\n    /**\n    Keeps the dependencies for the keys in the store.\n\n    @property deps\n    @type Object\n    @default {}\n    @example\n\n        {\n            name->myProperty: new Tracker.Dependency,\n            ...\n        }\n\n    **/\n    deps: {},\n\n    // METHODS\n\n    // PRIVATE\n    /**\n    Creates at least ones a `Tracker.Dependency` object to a key.\n\n    @method _ensureDeps\n    @private\n    @param {String} key     the name of the key to add a dependecy tracker to\n    @return undefined\n    **/\n    _ensureDeps: function (key) {\n        if (!this.deps[key]){\n            this.deps[key] = new Tracker.Dependency;\n        }\n    },\n\tset: function(key, value, options, callback){\n\n        this._ensureDeps(key);\n\n\t\t// USE CHROME STORAGE\n\t\tif(typeof chrome !== 'undefined' && chrome.storage) {\n\t\t\tvar item = {};\n\t\t\titem[key] = value;\n\n\t\t\t// set\n\t\t\tchrome.storage.local.set(item, function(){\n\n\t\t\t\t// re-run reactive functions\n\t\t\t\tif(!options || options.reactive !== false)\n\t                this.deps[key].changed();\n\n\t            // run callbacks\n\t\t\t\tif(_.isFunction(callback))\n\t\t\t\t\tcallback();\n\t\t\t});\n\n\n\t\t// USE LOCALSTORAGE\n\t\t} else {\n\t\t\t// stringify\n\t\t\tif(_.isObject(value))\n\t\t\t\tvalue = EJSON.stringify(value);\n\n\t\t\t// set\n            // use try to prevent warnings from low cache storages\n            try {\n    \t\t\tlocalStorage.setItem(key, value);\n            } catch(e) {\n\n            }\n\n\t\t\t// re-run reactive functions\n\t\t\tif(!options || options.reactive !== false)\n                this.deps[key].changed();\n\n\t\t\t// run callbacks\n\t\t\tif(_.isFunction(callback))\n\t\t\t\tcallback();\n\t\t}\n\t},\n\tget: function(key, options, callback){\n\n        this._ensureDeps(key);\n\n\n        // DEPEND REACTIVE FUNCTIONS\n\t\tif(!options || options.reactive !== false)\n            this.deps[key].depend();\n\n\n\t\t// use chrome storage\n\t\tif(typeof chrome !== 'undefined' && chrome.storage) {\n\n\t\t\t// get\n\t\t\tchrome.storage.local.get(key, callback);\n\n\n\t\t// USE LOCALSTORAGE\n\t\t} else {\n\t\t\t// get\n\t\t\tvar value = localStorage.getItem(key),\n\t\t\t\tretunValue = value;\n\n\t\t\t// try to parse\n            if(value && _.isString(value)) {\n            \ttry {\n\t                retunValue = EJSON.parse(value);\n            \t} catch(error){\n            \t\tretunValue = value;\n            \t}\n            }\n\n            return retunValue;\n\t\t}\n\n\t}\n}\n////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"frozeman:storage\", {\n  LocalStore: LocalStore\n});\n\n})();\n","servePath":"/packages/frozeman_storage.js"}]