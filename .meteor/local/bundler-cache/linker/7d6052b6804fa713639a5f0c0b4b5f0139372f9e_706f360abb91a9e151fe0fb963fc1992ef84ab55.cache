[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nSession = Package.session.Session;\nAccounts = Package['accounts-base'].Accounts;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nLocalStore = Package['frozeman:storage'].LocalStore;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"Chat\":{\"Discussion\":{\"template.discussion.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/Chat/Discussion/template.discussion.js                                                               //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate.__checkName(\"discussion\");\nTemplate[\"discussion\"] = new Template(\"Template.discussion\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n  \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n    \", HTML.Raw('<h1 id=\"form-titre\">Actualité de vos discussions</h1>'), \"\\n    \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n      <div class=\"container-fluid\">\\n        <div class=\"navbar-header\">\\n          <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n        </div>\\n        <ul class=\"nav navbar-nav\">\\n          <li><a href=\"/accueil\">Accueil</a></li>\\n          <li class=\"active\"><a href=\"/discussion\">Discussion</a></li>\\n          <li><a href=\"/connexion\">Connexion</a></li>\\n          <li><a href=\"/inscription\">Insciption</a></li>\\n          <li><a href=\"/contact\">Contact</a></li>\\n          <li><a href=\"/profil\">Profil</a></li>\\n          <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          <form class=\"navbar-form navbar-left\">\\n            <div class=\"input-group\">\\n               <input type=\"text\" name=\"recherche\" id=\"recherche\" class=\"form-control\" placeholder=\"Search\">\\n               <div class=\"input-group-btn\">\\n                 <button class=\"btn btn-default\" id=\"goRecherche\" type=\"submit\">\\n                   <i class=\"glyphicon glyphicon-search\"></i>\\n                 </button>\\n               </div>\\n             </div>\\n        </form>\\n      </ul>\\n    </div>\\n    </nav>'), \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"discussion\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"discu\"\n    }, \"\\n      \", HTML.P({\n      id: \"infos\",\n      class: function() {\n        return Spacebars.mustache(view.lookup(\"couleur\"));\n      }\n    }, \"\\n      \", HTML.A({\n      href: \"message\",\n      style: \"color : #4d4d4d\",\n      class: \"goDiscu\",\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"contact\"));\n      },\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"prenom\"));\n      }\n    }, Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \" \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \" \", Blaze.View(\"lookup:surnom\", function() {\n      return Spacebars.mustache(view.lookup(\"surnom\"));\n    })), \"\\n      \", Blaze.View(\"lookup:lastConnexion\", function() {\n      return Spacebars.mustache(view.lookup(\"lastConnexion\"));\n    }), \"\\n      \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"notification\"));\n    }, function() {\n      return HTML.DIV({\n        class: \"rond\"\n      });\n    }), \"\\n    \"), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n  \"), HTML.Raw('\\n  <h1 style=\"text-align:center\">Recherche</h1>\\n  '), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"recherche\"));\n  }, function() {\n    return [ \"\\n  \", HTML.DIV({\n      style: \"background-color : green;\"\n    }, \"\\n    \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \" \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \" \", Blaze.View(\"lookup:age\", function() {\n      return Spacebars.mustache(view.lookup(\"age\"));\n    }), \" \", Blaze.View(\"lookup:email\", function() {\n      return Spacebars.mustache(view.lookup(\"email\"));\n    }), \"\\n  \"), \"\\n  \" ];\n  }), \"\\n\\n  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"inscriptionFind\"));\n  }, function() {\n    return [ \"\\n  \", HTML.DIV({\n      class: \"recherche\"\n    }, \"\\n    \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \" \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \" \", Blaze.View(\"lookup:age\", function() {\n      return Spacebars.mustache(view.lookup(\"age\"));\n    }), \" \", Blaze.View(\"lookup:email\", function() {\n      return Spacebars.mustache(view.lookup(\"email\"));\n    }), \"\\n  \"), \"\\n  \", HTML.BR(), \"\\n  \" ];\n  }), \"\\n\\n  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"messageFind\"));\n  }, function() {\n    return [ \"\\n  \", HTML.DIV({\n      class: \"recherche\"\n    }, \"\\n     \", Blaze.View(\"lookup:message\", function() {\n      return Spacebars.mustache(view.lookup(\"message\"));\n    }), \"\\n  \"), \"\\n  \", HTML.BR(), \"\\n  \" ];\n  }), \"\\n  \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"message\":{\"template.message.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/Chat/message/template.message.js                                                                     //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate.__checkName(\"message\");\nTemplate[\"message\"] = new Template(\"Template.message\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n  \", HTML.FORM(\"\\n    \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n      \", HTML.Raw('<h1 id=\"form-titre\">Message</h1>'), \"\\n      \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li><a href=\"/accueil\">Accueil</a></li>\\n            <li class=\"active\"><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>'), \"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"infoPerso\"));\n  }, function() {\n    return [ \"\\n          \", HTML.DIV({\n      class: \"info\"\n    }, \"\\n          \", HTML.P({\n      class: \"text-center\",\n      style: \"font-size:18px\"\n    }, Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \" \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    })), \"\\n          \", HTML.P({\n      class: function() {\n        return [ \"text-center \", Spacebars.mustache(view.lookup(\"couleur\")) ];\n      }\n    }, Blaze.View(\"lookup:lastConnexion\", function() {\n      return Spacebars.mustache(view.lookup(\"lastConnexion\"));\n    })), \"\\n          \", HTML.P({\n      style: \"text-align : center\"\n    }, Blaze.View(\"lookup:statut\", function() {\n      return Spacebars.mustache(view.lookup(\"statut\"));\n    })), \"\\n        \"), \"\\n      \" ];\n  }), \"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"messages\"));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      class: function() {\n        return [ \" chat col-sm-12 \", Spacebars.mustache(view.lookup(\"color\")), \" \" ];\n      }\n    }, \"\\n          \", Blaze.View(\"lookup:message\", function() {\n      return Spacebars.mustache(view.lookup(\"message\"));\n    }), \"\\n        \"), \"\\n        \", HTML.BR(), \"\\n      \" ];\n  }), \"\\n      \", HTML.Raw(\"<br>\"), \"\\n      \", HTML.Raw(\"<br>\"), \"\\n     \", HTML.Raw(\"<br>\"), \"\\n    \", HTML.Raw('<div class=\"form-groupe\">\\n      <input type=\"text\" class=\"form-control\" name=\"message\" id=\"messages\">\\n      <br>\\n      <input type=\"submit\" name=\"envoyer\" value=\"Envoyer\">\\n    </div>'), \"\\n  \"), \"\\n  \", HTML.Raw('<a href=\"/discussion\">Retour</a>'), \"\\n  \"), \"\\n\");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"message.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/Chat/message/message.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nTemplate.message.rendered = function () {\n  document.title = \"Message\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.message.helpers({\n  messages: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    Meteor.call('notification', sessionID, contactID);\n    return Message.find({\n      $or: [{\n        idClient1: sessionID,\n        idClient2: contactID\n      }, {\n        idClient1: contactID,\n        idClient2: sessionID\n      }]\n    }, {\n      sort: {\n        hours: 1\n      }\n    }).fetch();\n  },\n  color: function () {\n    if (this.idClient1 === LocalStore.get(\"userID\")) {\n      return 'text-success text-right';\n    }\n\n    return 'text-danger text-left ';\n  },\n  infoPerso: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var infoPersonne = Contact.find({\n      userIdNow: sessionID,\n      contact: contactID\n    });\n    return infoPersonne;\n  },\n  lastConnexion: function () {\n    var contactID = LocalStore.get(\"contactID\");\n    var sessionID = LocalStore.get(\"sessionID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID\n    });\n\n    if (deco.deconnexion != 0) {\n      var deconnexion = deco.deconnexion;\n      var date = new Date(deconnexion);\n      var day = date.getDate();\n      var month = date.getMonth() + 1;\n      var year = date.getFullYear();\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n      var final = \"Hors ligne depuis \" + day + \"/\" + month + \"/\" + year + \"  \" + hours + \":\" + minutes;\n      return final;\n    } else {\n      return \"En ligne\";\n    }\n  },\n  couleur: function () {\n    var contactID = LocalStore.get(\"contactID\");\n    var sessionID = LocalStore.get(\"sessionID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID\n    });\n\n    if (deco.deconnexion == 0) {\n      return 'text-success';\n    } else {\n      return 'text-danger';\n    }\n  },\n  statut: function () {\n    var contactID = LocalStore.get(\"contactID\");\n    var statut = Inscription.findOne({\n      _id: contactID\n    });\n\n    if (statut) {\n      return statut.statut;\n    }\n  }\n});\nTemplate.message.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var find = Connexion.findOne({\n      userIdNow: sessionID\n    });\n    var message = event.target.message.value;\n\n    if (message) {\n      var now = new Date();\n      var hash3 = {\n        idClient1: sessionID,\n        idClient2: contactID,\n        message: message,\n        lu: \"false\",\n        hours: now.getTime()\n      };\n      var time = now.getTime();\n      Meteor.call('message', hash3, function (data3) {});\n      Meteor.call('lastMessage', time, sessionID, contactID);\n      $('#messages').val('');\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"Contact\":{\"contact\":{\"template.contact.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/Contact/contact/template.contact.js                                                                  //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate.__checkName(\"contact\");\nTemplate[\"contact\"] = new Template(\"Template.contact\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, HTML.Raw('\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Contact</h1>\\n      <nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li class=\"active\"><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </div>\\n  </form>\\n  '), HTML.FORM(\"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"contacter\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"col-sm-3\"\n    }, \"\\n      Nom : \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \"\\n      \", HTML.BR(), \" Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \"\\n      \", HTML.BR(), \" Surnom : \", Blaze.View(\"lookup:surnom\", function() {\n      return Spacebars.mustache(view.lookup(\"surnom\"));\n    }), \"\\n      \", HTML.BR(), \" Age : \", Blaze.View(\"lookup:age\", function() {\n      return Spacebars.mustache(view.lookup(\"age\"));\n    }), \"\\n      \", HTML.BR(), \" E-mail : \", Blaze.View(\"lookup:email\", function() {\n      return Spacebars.mustache(view.lookup(\"email\"));\n    }), \"\\n      \", HTML.BR(), \" Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n      return Spacebars.mustache(view.lookup(\"pseudo\"));\n    }), \"\\n      \", HTML.BR(), \"\\n      \", HTML.BUTTON({\n      class: \"modifier\",\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"contact\"));\n      }\n    }, \"Modifier\"), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n  \"), \"\\n\");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"contact.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/Contact/contact/contact.js                                                                           //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nTemplate.contact.rendered = function () {\n  document.title = \"Contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.contact.helpers({\n  contacter: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var last = Contact.find({\n      userIdNow: sessionID\n    }).fetch();\n\n    if (last) {\n      return last;\n    }\n\n    ;\n  }\n});\nTemplate.contact.events({\n  'click .modifier': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var contactId = id.contact;\n\n    if (contactId) {\n      LocalStore.set(\"newContactID\", contactId);\n      Router.go('/modifier');\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"newContact\":{\"template.newContact.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/Contact/newContact/template.newContact.js                                                            //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate.__checkName(\"newContact\");\nTemplate[\"newContact\"] = new Template(\"Template.newContact\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n    \", HTML.FORM(\"\\n      \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n        \", HTML.Raw('<h1 id=\"form-titre\">Nouveau contact</h1>'), \"\\n        \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n          <div class=\"container-fluid\">\\n            <div class=\"navbar-header\">\\n              <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n            </div>\\n            <ul class=\"nav navbar-nav\">\\n              <li><a href=\"/accueil\">Accueil</a></li>\\n              <li><a href=\"/message\">Message</a></li>\\n              <li><a href=\"/connexion\">Connexion</a></li>\\n              <li><a href=\"/inscription\">Insciption</a></li>\\n              <li class=\"active\"><a href=\"/contact\">Contact</a></li>\\n              <li><a href=\"/profil\">Profil</a></li>\\n              <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n            </ul>\\n          </div>\\n        </nav>'), \"\\n        \", HTML.LABEL({\n    for: \"name\"\n  }, \"Nom : \", Blaze.View(\"lookup:nom\", function() {\n    return Spacebars.mustache(view.lookup(\"nom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"prenom\"\n  }, \"Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n    return Spacebars.mustache(view.lookup(\"prenom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<label for=\"prenom\">Surnom :</label>'), \"\\n        \", HTML.Raw('<input type=\"text\" name=\"surnom\" id=\"surnom\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n    return Spacebars.mustache(view.lookup(\"pseudo\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Age :  \", Blaze.View(\"lookup:age\", function() {\n    return Spacebars.mustache(view.lookup(\"age\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"E-mail : \", Blaze.View(\"lookup:email\", function() {\n    return Spacebars.mustache(view.lookup(\"email\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<input type=\"submit\" name=\"enregister\" value=\"Enregister\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<a href=\"/contact\">Retourner à la page contact</a>'), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"newContact.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/Contact/newContact/newContact.js                                                                     //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nTemplate.newContact.rendered = function () {\n  document.title = \"Nouveau contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.newContact.helpers({\n  nom: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.nom;\n    }\n  },\n  prenom: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.prenom;\n    }\n  },\n  age: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.age;\n    }\n  },\n  pseudo: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.pseudo;\n    }\n  },\n  email: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.email;\n    }\n  }\n});\nTemplate.newContact.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (trouver) {\n      var nom = trouver.nom;\n      var prenom = trouver.prenom;\n      var pseudo = trouver.pseudo;\n      var age = trouver.age;\n      var email = trouver.email;\n      var surnom = event.target.surnom.value;\n      var now = new Date();\n      var hash5 = {\n        userIdNow: LocalStore.get(\"userID\"),\n        nom: nom,\n        prenom: prenom,\n        age: age,\n        email: email,\n        pseudo: pseudo,\n        surnom: surnom,\n        contact: LocalStore.get(\"newContactID\"),\n        hours: now.getTime(),\n        lastMessage: 0\n      };\n      Meteor.call('newContact', hash5);\n      Router.go('/contact');\n      LocalStore.set(\"newContactID\", null);\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"accueil\":{\"template.accueil.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/accueil/template.accueil.js                                                                          //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate.__checkName(\"accueil\");\nTemplate[\"accueil\"] = new Template(\"Template.accueil\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n  \", HTML.FORM(\"\\n    \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n      \", HTML.Raw('<h1 id=\"form-titre\">Accueil</h1>'), \"\\n      \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li class=\"active\"><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>'), \"\\n      \", HTML.H2(\"Bonjour, \", Blaze.View(\"lookup:prenomAccueil\", function() {\n    return Spacebars.mustache(view.lookup(\"prenomAccueil\"));\n  })), \"\\n    \"), \"\\n    \", HTML.Raw(\"<p>Avec cette application tu pourras chatter avec tes amis à tous moments, partager ta journée et les moments les plus importants de ta vie.</p>\"), \"\\n  \"), HTML.Raw(\"\\n\\n  <h1>Amis actuellement connectés !</h1>\\n  \"), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"connecté\"));\n  }, function() {\n    return [ \"\\n  \", HTML.DIV({\n      class: \"col-sm-3\",\n      id: \"connecté\"\n    }, \"\\n  Nom : \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \"\\n  \", HTML.BR(), \"\\n  Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \"\\n  \"), \"\\n  \" ];\n  }), HTML.Raw(\"\\n<br><br><br><br><br>\\n  <h1>Ajouter de nouveaux amis !</h1>\\n    \"), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"contacter\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"col-sm-3\"\n    }, \"\\n    Nom : \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \"\\n    \", HTML.BR(), \"\\n    Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \"\\n    \", HTML.BR(), \"\\n    Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n      return Spacebars.mustache(view.lookup(\"pseudo\"));\n    }), \"\\n    \", HTML.BR(), \"\\n    \", HTML.BUTTON({\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"_id\"));\n      },\n      class: \"goAjouter\"\n    }, \"Ajouter\"), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n\");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"accueil.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/accueil/accueil.js                                                                                   //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nTemplate.accueil.rendered = function () {\n  document.title = \"Accueil\";\n};\n\nTemplate.accueil.helpers({\n  prenomAccueil: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n  contacter: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var contacts = Contact.find({\n      userIdNow: sessionID\n    }).fetch();\n\n    var ids = _.pluck(contacts, 'contact');\n\n    ids.push(sessionID);\n    return Inscription.find({\n      _id: {\n        $nin: ids\n      }\n    }).fetch();\n  },\n  connecté: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var contacts = Inscription.find({\n      etat: \"true\"\n    }).fetch();\n\n    var ids = _.pluck(contacts, '_id');\n\n    ids.push(sessionID);\n    return Contact.find({\n      contact: {\n        $in: ids\n      },\n      userIdNow: sessionID\n    }).fetch();\n  }\n});\nTemplate.accueil.events({\n  'click .goAjouter': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var identifiant = Inscription.findOne({\n      _id: this._id\n    });\n    var id = identifiant._id;\n\n    if (id) {\n      LocalStore.set(\"newContactID\", id);\n      Router.go('/newContact');\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"connexion\":{\"template.connexion.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/connexion/template.connexion.js                                                                      //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate.__checkName(\"connexion\");\nTemplate[\"connexion\"] = new Template(\"Template.connexion\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Connexion</h1>\\n        <div class=\"form-group\">\\n          <nav class=\"navbar navbar-default\">\\n            <div class=\"container-fluid\">\\n              <div class=\"navbar-header\">\\n                <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n              </div>\\n              <ul class=\"nav navbar-nav\">\\n                <li><a href=\"/accueil\">Accueil</a></li>\\n                <li><a href=\"/discussion\">Discussion</a></li>\\n                <li class=\"active\"><a href=\"/connexion\">Connexion</a></li>\\n                <li><a href=\"/inscription\">Insciption</a></li>\\n                <li><a href=\"/contact\">Contact</a></li>\\n                <li><a href=\"/profil\">Profil</a></li>\\n                <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n              </ul>\\n            </div>\\n          </nav>\\n      </div>\\n      <label for=\"name\">Pseudo :</label>\\n      <input class=\"form-control\" type=\"text\" id=\"pseudo_connexion\" name=\"pseudo_connexion\">\\n      <label for=\"password\">password : </label>\\n      <input class=\"form-control\" type=\"password\" id=\"password_connexion\" name=\"password_connexion\">\\n      <br>\\n      <input type=\"submit\" id=\"envoyer\" name=\"envoyer\" value=\"Connexion\">\\n    </div>\\n  </form>\\n  <a href=\"/inscription\">S\\'inscrire</a>\\n</div>');\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"connexion.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/connexion/connexion.js                                                                               //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nTemplate.connexion.rendered = function () {\n  document.title = \"Connexion\";\n};\n\nTemplate.connexion.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var pseudo_connexion = event.target.pseudo_connexion.value;\n    var password_connexion = event.target.password_connexion.value;\n    var controle_user = Inscription.findOne({\n      pseudo: pseudo_connexion\n    });\n    var userIdNow = controle_user._id;\n    var now = new Date();\n\n    if (controle_user) {\n      if (controle_user.password != password_connexion) {\n        alert(\"Le mot de passe n'est pas juste !\");\n      } else {\n        var pseudoInscription = Inscription.findOne({\n          pseudo: pseudo_connexion\n        });\n\n        if (pseudoInscription) {\n          var alreadyConnexion = Connexion.findOne({\n            userIdNow: pseudoInscription._id\n          });\n\n          if (!alreadyConnexion) {\n            LocalStore.set(\"userID\", userIdNow);\n            var hash = {\n              userIdNow: controle_user._id,\n              hours: now.getTime(),\n              deconnexion: 0\n            };\n            Meteor.call('connexion', hash, function (data) {\n              if (LocalStore.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          } else {\n            LocalStore.set(\"userID\", userIdNow);\n            Meteor.call('dec0', userIdNow);\n            Meteor.call('etat', userIdNow, function (data) {\n              if (LocalStore.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          }\n        }\n\n        Router.go('/accueil');\n      }\n    } else {\n      alert(\"Le pseudo n'est pas juste !\");\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"deconnexion\":{\"template.deconnexion.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/deconnexion/template.deconnexion.js                                                                  //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate.__checkName(\"deconnexion\");\nTemplate[\"deconnexion\"] = new Template(\"Template.deconnexion\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Deconnexion</h1>\\n      <nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li class=\"active\"><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </div>\\n  </form>\\n</div>');\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"deconnexion.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/deconnexion/deconnexion.js                                                                           //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nTemplate.deconnexion.rendered = function () {\n  document.title = \"Déconnexion\";\n\n  if (confirm(\"Tu veux te déconnecter\")) {\n    var sessionID = LocalStore.get(\"userID\");\n    var heure = new Date();\n    var heureDeco = heure.getTime();\n    Meteor.call('deco', sessionID);\n    Meteor.call('heureDeco', sessionID, heureDeco);\n    LocalStore.set(\"userID\", null);\n\n    if (LocalStore.get(\"userID\") == null) {\n      Router.go('/connexion');\n    }\n\n    ;\n  } else {\n    Router.go('/accueil');\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"inscription\":{\"template.inscription.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/inscription/template.inscription.js                                                                  //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate.__checkName(\"inscription\");\nTemplate[\"inscription\"] = new Template(\"Template.inscription\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n    <form>\\n      <div class=\"form-group\">\\n        <h1 id=\"form-titre\">Formulaire d\\'inscription</h1>\\n          <div class=\"form-group\">\\n            <nav class=\"navbar navbar-default\">\\n              <div class=\"container-fluid\">\\n                <div class=\"navbar-header\">\\n                  <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n                </div>\\n                <ul class=\"nav navbar-nav\">\\n                  <li><a href=\"/accueil\">Accueil</a></li>\\n                  <li><a href=\"/discussion\">Discussion</a></li>\\n                  <li><a href=\"/connexion\">Connexion</a></li>\\n                  <li class=\"active\"><a href=\"/inscription\">Insciption</a></li>\\n                  <li><a href=\"/contact\">Contact</a></li>\\n                  <li><a href=\"/profil\">Profil</a></li>\\n                  <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n                </ul>\\n              </div>\\n            </nav>\\n        </div>\\n        <label for=\"name\">Nom :</label>\\n        <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\">\\n        <label for=\"prenom\">Prénom </label>\\n        <input class=\"form-control\" type=\"text\" id=\"prenom\" name=\"prenom\">\\n        <label for=\"age\">Age :</label>\\n        <input class=\"form-control\" type=\"number\" id=\"age\" name=\"age\" min=\"10\" max=\"110\">\\n        <label for=\"email\">E-mail :</label>\\n        <input class=\"form-control\" type=\"email\" id=\"email\" name=\"email\">\\n        <label for=\"prenom\">Pseudo </label>\\n        <input class=\"form-control\" type=\"text\" id=\"pseudo\" name=\"pseudo\">\\n        <label for=\"password\">password : </label>\\n        <input class=\"form-control\" type=\"password\" id=\"mdp1\" name=\"password1\">\\n        <label for=\"password\">password :</label>\\n        <input class=\"form-control\" type=\"password\" id=\"mdp2\" name=\"password2\">\\n        <br>\\n        <input type=\"submit\" name=\"envoyer\" value=\"Envoyer\">\\n      </div>\\n    </form>\\n    <a href=\"/connexion\">Connexion</a>\\n  </div>');\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"inscription.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/inscription/inscription.js                                                                           //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nTemplate.inscription.rendered = function () {\n  document.title = \"Insciption\";\n};\n\nTemplate.inscription.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var mdp1 = event.target.mdp1.value;\n    var mdp2 = event.target.mdp2.value;\n    var pseudo = event.target.pseudo.value;\n    var pseudoDb = Inscription.findOne({\n      pseudo: pseudo\n    });\n\n    if (mdp1 == mdp2) {\n      if (mdp1.length > 3) {\n        if (!pseudoDb) {\n          alert(\"Merci de l'inscription !\");\n          var hash = {\n            nom: event.target.name.value,\n            prenom: event.target.prenom.value,\n            age: event.target.age.value,\n            email: event.target.email.value,\n            pseudo: event.target.pseudo.value,\n            password: event.target.mdp1.value,\n            etat: \"false\",\n            statut: \"\"\n          };\n          Meteor.call('insertInscription', hash, function (error, result) {\n            if (result) {\n              Router.go('/connexion');\n            }\n\n            if (error) {\n              console.log(error);\n            }\n          });\n        } else {\n          alert(\"Le pseudo que vous avez choisi est déjà utilisé !\");\n        }\n      } else {\n        alert(\"Votre mot de passe est trop court !\");\n      }\n\n      ;\n    } else {\n      alert(\"Vos mots de passe ne sont pas identiques ! \");\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"modifier\":{\"template.modifier.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/modifier/template.modifier.js                                                                        //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate.__checkName(\"modifier\");\nTemplate[\"modifier\"] = new Template(\"Template.modifier\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n    \", HTML.FORM(\"\\n      \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n        \", HTML.Raw('<h1 id=\"form-titre\">Nouveau contact</h1>'), \"\\n        \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n          <div class=\"container-fluid\">\\n            <div class=\"navbar-header\">\\n              <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n            </div>\\n            <ul class=\"nav navbar-nav\">\\n              <li><a href=\"/accueil\">Accueil</a></li>\\n              <li><a href=\"/message\">Message</a></li>\\n              <li><a href=\"/connexion\">Connexion</a></li>\\n              <li><a href=\"/inscription\">Insciption</a></li>\\n              <li class=\"active\"><a href=\"/contact\">Contact</a></li>\\n              <li><a href=\"/profil\">Profil</a></li>\\n              <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n            </ul>\\n          </div>\\n        </nav>'), \"\\n        \", HTML.LABEL({\n    for: \"name\"\n  }, \"Nom : \", Blaze.View(\"lookup:nom\", function() {\n    return Spacebars.mustache(view.lookup(\"nom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"prenom\"\n  }, \"Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n    return Spacebars.mustache(view.lookup(\"prenom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<label for=\"prenom\">Surnom :</label>'), \"\\n        \", HTML.Raw('<input type=\"text\" name=\"surnom\" id=\"surnom\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n    return Spacebars.mustache(view.lookup(\"pseudo\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Age :  \", Blaze.View(\"lookup:age\", function() {\n    return Spacebars.mustache(view.lookup(\"age\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"E-mail : \", Blaze.View(\"lookup:email\", function() {\n    return Spacebars.mustache(view.lookup(\"email\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<input type=\"submit\" name=\"Modifier\" value=\"Modifier\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<a href=\"/contact\">Retourner à la page contact</a>'), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"modifier.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/modifier/modifier.js                                                                                 //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nTemplate.modifier.rendered = function () {\n  document.title = \"Modifier\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID && find != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\nTemplate.modifier.helpers({\n  nom: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.nom;\n    }\n  },\n  prenom: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.prenom;\n    }\n  },\n  age: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.age;\n    }\n  },\n  pseudo: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.pseudo;\n    }\n  },\n  email: function () {\n    var newContact = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.email;\n    }\n  }\n});\nTemplate.modifier.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\")\n    });\n\n    if (trouver) {\n      var newSurnom = event.target.surnom.value;\n      var userIdNow = LocalStore.get(\"userID\");\n      var contact = LocalStore.get(\"newContactID\");\n\n      if (newSurnom) {\n        Meteor.call('modifierSurnom', userIdNow, contact, newSurnom, function () {});\n        Router.go('/contact'); //    LocalStore.set(\"newContactID\", null);\n      }\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"profil\":{\"template.profil.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/profil/template.profil.js                                                                            //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate.__checkName(\"profil\");\nTemplate[\"profil\"] = new Template(\"Template.profil\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, HTML.Raw('\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Profil</h1>\\n      <nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li class=\"active\"><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </div>\\n  </form>\\n  '), HTML.DIV({\n    style: \"font-size:19px\"\n  }, \"\\n  Nom : \", Blaze.View(\"lookup:nom\", function() {\n    return Spacebars.mustache(view.lookup(\"nom\"));\n  }), \"\\n  \", HTML.Raw(\"<br>\"), \"\\n  Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n    return Spacebars.mustache(view.lookup(\"prenom\"));\n  }), \"\\n  \", HTML.Raw(\"<br>\"), \"\\n  Age : \", Blaze.View(\"lookup:age\", function() {\n    return Spacebars.mustache(view.lookup(\"age\"));\n  }), \"\\n  \", HTML.Raw(\"<br>\"), \"\\n  E-mail : \", Blaze.View(\"lookup:email\", function() {\n    return Spacebars.mustache(view.lookup(\"email\"));\n  }), \"\\n  \", HTML.Raw(\"<br>\"), \"\\n  Statut :\\n  \", HTML.Raw('<input type=\"text\" name=\"statut\" id=\"statut\" placeholder=\"happy\">'), \"\\n\"), HTML.Raw('\\n<br>\\n<button id=\"modifier\">Modifier</button>\\n'));\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"profil.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/profil/profil.js                                                                                     //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nTemplate.profil.rendered = function () {\n  document.title = \"Profil\";\n};\n\nTemplate.profil.helpers({\n  prenom: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n  nom: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.nom;\n    }\n  },\n  email: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.email;\n    }\n  },\n  age: function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.age;\n    }\n  }\n});\nTemplate.profil.events({\n  'click #modifier': function () {\n    var sessionID = LocalStore.get(\"userID\");\n    var statut = $(\"#statut\").val();\n    Meteor.call('statut', statut, sessionID);\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"template.not_found.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/template.not_found.js                                                                                //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nTemplate.__checkName(\"notFound\");\nTemplate[\"notFound\"] = new Template(\"Template.notFound\", (function() {\n  var view = this;\n  return HTML.Raw('<h1>Test not found</h1>\\n  <a href=\"/inscription\">S\\'inscrire</a>\\n  <br>\\n  <a href=\"/connexion\">Se connecter</a>');\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"deco.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// client/deco.js                                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"Router\":{\"router.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// Router/router.js                                                                                            //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nRouter.configure({\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound'\n});\nRouter.route('/inscription', {\n  name: 'inscription'\n});\nRouter.route('/connexion', {\n  name: 'connexion'\n});\nRouter.route('/accueil', {\n  name: 'accueil'\n});\nRouter.route('/message', {\n  name: 'message'\n});\nRouter.route('/contact', {\n  name: 'contact'\n});\nRouter.route('/newContact', {\n  name: 'newContact'\n});\nRouter.route('/discussion', {\n  name: 'discussion'\n});\nRouter.route('/deconnexion', {\n  name: 'deconnexion'\n});\nRouter.route('/profil', {\n  name: 'profil'\n});\nRouter.route('/modifier', {\n  name: 'modifier'\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collection\":{\"collection.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// collection/collection.js                                                                                    //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\nInscription = new Mongo.Collection(\"inscription\");\nConnexion = new Mongo.Collection(\"connexion\");\nMessage = new Mongo.Collection(\"message\");\nContact = new Mongo.Collection(\"contact\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\nrequire(\"/client/Chat/Discussion/template.discussion.js\");\nrequire(\"/client/Chat/message/template.message.js\");\nrequire(\"/client/Contact/contact/template.contact.js\");\nrequire(\"/client/Contact/newContact/template.newContact.js\");\nrequire(\"/client/accueil/template.accueil.js\");\nrequire(\"/client/connexion/template.connexion.js\");\nrequire(\"/client/deconnexion/template.deconnexion.js\");\nrequire(\"/client/inscription/template.inscription.js\");\nrequire(\"/client/modifier/template.modifier.js\");\nrequire(\"/client/profil/template.profil.js\");\nrequire(\"/client/template.not_found.js\");\nrequire(\"/client/Chat/message/message.js\");\nrequire(\"/client/Contact/contact/contact.js\");\nrequire(\"/client/Contact/newContact/newContact.js\");\nrequire(\"/client/accueil/accueil.js\");\nrequire(\"/client/connexion/connexion.js\");\nrequire(\"/client/deconnexion/deconnexion.js\");\nrequire(\"/client/inscription/inscription.js\");\nrequire(\"/client/modifier/modifier.js\");\nrequire(\"/client/profil/profil.js\");\nrequire(\"/Router/router.js\");\nrequire(\"/client/deco.js\");\nrequire(\"/collection/collection.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/Chat/message/message.js","client/Contact/contact/contact.js","client/Contact/newContact/newContact.js","client/accueil/accueil.js","client/connexion/connexion.js","client/deconnexion/deconnexion.js","client/inscription/inscription.js","client/modifier/modifier.js","client/profil/profil.js","Router/router.js","collection/collection.js"],"names":["Template","message","rendered","document","title","sessionID","LocalStore","get","find","Connexion","findOne","userIdNow","Router","go","helpers","messages","contactID","Meteor","call","Message","$or","idClient1","idClient2","sort","hours","fetch","color","infoPerso","infoPersonne","Contact","contact","lastConnexion","deco","deconnexion","date","Date","day","getDate","month","getMonth","year","getFullYear","getHours","minutes","getMinutes","final","couleur","statut","Inscription","_id","events","event","preventDefault","stopPropagation","target","value","now","hash3","lu","getTime","time","data3","$","val","contacter","last","id","contactId","set","newContact","nom","prenom","age","pseudo","email","trouver","surnom","hash5","lastMessage","accueil","prenomAccueil","contacts","ids","_","pluck","push","$nin","connecté","etat","$in","identifiant","connexion","pseudo_connexion","password_connexion","controle_user","password","alert","pseudoInscription","alreadyConnexion","hash","data","confirm","heure","heureDeco","inscription","mdp1","mdp2","pseudoDb","length","name","error","result","console","log","modifier","newSurnom","profil","configure","loadingTemplate","notFoundTemplate","route","Mongo","Collection"],"mappings":"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","file":"/app.js","sourcesContent":["Template.message.rendered = function() {\n  document.title = \"Message\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.message.helpers({\n  messages: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    Meteor.call('notification', sessionID, contactID);\n    return Message.find({\n      $or: [{\n        idClient1: sessionID,\n        idClient2: contactID,\n      }, {\n        idClient1: contactID,\n        idClient2: sessionID,\n      }],\n    }, {\n      sort: {\n        hours: 1,\n      },\n    }).fetch();\n  },\n\n  color: function() {\n    if (this.idClient1 === LocalStore.get(\"userID\")) {\n      return 'text-success text-right';\n    }\n    return 'text-danger text-left ';\n  },\n\n  infoPerso: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var infoPersonne = Contact.find({\n      userIdNow: sessionID,\n      contact: contactID,\n    });\n    return infoPersonne;\n  },\n\n  lastConnexion: function() {\n    var contactID = LocalStore.get(\"contactID\");\n    var sessionID = LocalStore.get(\"sessionID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID,\n    });\n    if(deco.deconnexion != 0){\n      var deconnexion = deco.deconnexion;\n      var date = new Date(deconnexion);\n      var day = date.getDate();\n      var month = date.getMonth()+1;\n      var year = date.getFullYear();\n      var hours = date.getHours();\n      var minutes =  date.getMinutes();\n      var final = \"Hors ligne depuis \"+day+\"/\"+month+\"/\"+year+\"  \"+hours +\":\"+minutes;\n      return final ;\n    }else{\n      return \"En ligne\";\n    }\n  },\n\n  couleur: function(){\n    var contactID = LocalStore.get(\"contactID\");\n    var sessionID = LocalStore.get(\"sessionID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID,\n    });\n    if(deco.deconnexion == 0){\n      return 'text-success'\n    }else{\n      return 'text-danger'\n    }\n  },\n\n  statut : function(){\n    var contactID = LocalStore.get(\"contactID\");\n    var statut = Inscription.findOne({\n      _id : contactID,\n    });\n    if(statut){\n      return statut.statut;\n    }\n  }\n\n});\n\n\nTemplate.message.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = LocalStore.get(\"userID\");\n    var contactID = LocalStore.get(\"contactID\");\n    var find = Connexion.findOne({\n      userIdNow: sessionID,\n    });\n    var message = event.target.message.value;\n    if (message) {\n      var now = new Date();\n      var hash3 = {\n        idClient1: sessionID,\n        idClient2: contactID,\n        message: message,\n        lu: \"false\",\n        hours: now.getTime(),\n      };\n      var time = now.getTime();\n      Meteor.call('message', hash3, function(data3) {});\n      Meteor.call('lastMessage', time, sessionID, contactID);\n      $('#messages').val('');\n    }\n  },\n});\n","Template.contact.rendered = function() {\n  document.title = \"Contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.contact.helpers({\n  contacter: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var last = Contact.find({\n      userIdNow: sessionID,\n    }).fetch();\n    if (last) {\n      return last;\n    };\n  }\n});\n\nTemplate.contact.events({\n  'click .modifier': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var contactId = id.contact;\n    if (contactId) {\n      LocalStore.set(\"newContactID\", contactId);\n      Router.go('/modifier');\n    }\n    }\n})\n","Template.newContact.rendered = function() {\n  document.title = \"Nouveau contact\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.newContact.helpers({\n  nom : function(){\n    var newContact = Inscription.findOne({\n      _id : LocalStore.get(\"newContactID\"),\n    });\n    if(newContact){\n      return newContact.nom;\n    }\n  },\n\nprenom : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.prenom;\n  }\n},\n\nage : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.age;\n  }\n},\n\npseudo : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.pseudo;\n  }\n},\nemail : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.email;\n  }\n},\n});\n\nTemplate.newContact.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\"),\n    });\n    if (trouver) {\n        var nom = trouver.nom;\n        var prenom = trouver.prenom;\n        var pseudo = trouver.pseudo;\n        var age = trouver.age;\n        var email = trouver.email;\n        var surnom = event.target.surnom.value;\n        var now = new Date();\n        var hash5 = {\n          userIdNow: LocalStore.get(\"userID\"),\n          nom: nom,\n          prenom: prenom,\n          age: age,\n          email: email,\n          pseudo: pseudo,\n          surnom: surnom,\n          contact: LocalStore.get(\"newContactID\"),\n          hours: now.getTime(),\n          lastMessage : 0,\n        };\n        Meteor.call('newContact', hash5)\n        Router.go('/contact');\n                LocalStore.set(\"newContactID\", null);\n      }\n  },\n});\n","Template.accueil.rendered = function() {\n  document.title = \"Accueil\";\n};\n\n\nTemplate.accueil.helpers({\n  prenomAccueil: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n\n  contacter: function() {\n    var sessionID = LocalStore.get(\"userID\");\n\n    var contacts = Contact.find({\n      userIdNow: sessionID,\n    }).fetch();\n    var ids = _.pluck(contacts, 'contact');\n    ids.push(sessionID);\n    return Inscription.find({\n      _id: {\n        $nin: ids,\n      },\n    }).fetch();\n  },\n\n  connecté: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var contacts = Inscription.find({\n      etat:  \"true\",\n    }).fetch();\n    var ids = _.pluck(contacts, '_id');\n    ids.push(sessionID);\n    return Contact.find({\n      contact: {\n        $in: ids,\n      },\n      userIdNow: sessionID,\n    }).fetch();\n  },\n});\n\nTemplate.accueil.events({\n  'click .goAjouter': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var identifiant = Inscription.findOne({\n      _id: this._id,\n    });\n    var id = identifiant._id;\n    if (id) {\n      LocalStore.set(\"newContactID\", id);\n      Router.go('/newContact');\n    }\n  },\n})\n","Template.connexion.rendered = function() {\n  document.title = \"Connexion\";\n};\n\n\nTemplate.connexion.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    var pseudo_connexion = event.target.pseudo_connexion.value;\n    var password_connexion = event.target.password_connexion.value;\n    var controle_user = Inscription.findOne({\n      pseudo: pseudo_connexion,\n    });\n    var userIdNow = controle_user._id;\n    var now = new Date();\n    if (controle_user) {\n      if (controle_user.password != password_connexion) {\n        alert(\"Le mot de passe n'est pas juste !\")\n      } else {\n        var pseudoInscription = Inscription.findOne({\n          pseudo: pseudo_connexion,\n        });\n        if (pseudoInscription) {\n          var alreadyConnexion = Connexion.findOne({\n            userIdNow: pseudoInscription._id,\n          });\n          if (!alreadyConnexion) {\n            LocalStore.set(\"userID\", userIdNow);\n            var hash = {\n              userIdNow: controle_user._id,\n              hours: now.getTime(),\n              deconnexion: 0,\n            };\n            Meteor.call('connexion', hash, function(data) {\n              if (LocalStore.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          } else {\n            LocalStore.set(\"userID\", userIdNow);\n            Meteor.call('dec0', userIdNow);\n            Meteor.call('etat', userIdNow,function(data) {\n              if (LocalStore.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          }\n        }\n        Router.go('/accueil');\n      }\n    }else{\n      alert(\"Le pseudo n'est pas juste !\");\n    }\n  },\n});\n","Template.deconnexion.rendered = function(){\n      document.title = \"Déconnexion\";\n      if(confirm(\"Tu veux te déconnecter\")){\n        var sessionID = LocalStore.get(\"userID\");\n        var heure = new Date();\n        var heureDeco = heure.getTime();\n        Meteor.call('deco', sessionID);\n        Meteor.call('heureDeco', sessionID, heureDeco);\n        LocalStore.set(\"userID\", null);\n        if (LocalStore.get(\"userID\") == null) {\n          Router.go('/connexion');\n        };\n      }else{\n        Router.go('/accueil');\n      }\n    };\n","Template.inscription.rendered = function() {\n  document.title = \"Insciption\";\n};\n\nTemplate.inscription.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var mdp1 = event.target.mdp1.value;\n    var mdp2 = event.target.mdp2.value;\n    var pseudo = event.target.pseudo.value;\n    var pseudoDb = Inscription.findOne({\n      pseudo: pseudo,\n    });\n    if (mdp1 == mdp2) {\n      if (mdp1.length > 3) {\n        if (!pseudoDb) {\n          alert(\"Merci de l'inscription !\");\n          var hash = {\n            nom       :  event.target.name.value,\n            prenom    :  event.target.prenom.value,\n            age       :  event.target.age.value,\n            email     :  event.target.email.value,\n            pseudo    :  event.target.pseudo.value,\n            password  :  event.target.mdp1.value,\n            etat      :  \"false\",\n            statut    :  \"\"\n          };\n          Meteor.call('insertInscription', hash, function(error, result) {\n            if (result) {\n              Router.go('/connexion');\n            }\n            if (error) {\n              console.log(error);\n            }\n          });\n           }\n         else {\n          alert(\"Le pseudo que vous avez choisi est déjà utilisé !\");\n         }\n        }\n       else {\n        alert(\"Votre mot de passe est trop court !\");\n      };\n\n    }\n     else {\n      alert(\"Vos mots de passe ne sont pas identiques ! \");\n    }\n  }\n});\n","Template.modifier.rendered = function() {\n  document.title = \"Modifier\";\n  var sessionID = LocalStore.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID && find != find.userIdNow) {\n    Router.go('/connexion');\n  }\n};\n\n\nTemplate.modifier.helpers({\n  nom : function(){\n    var newContact = Inscription.findOne({\n      _id : LocalStore.get(\"newContactID\"),\n    });\n    if(newContact){\n      return newContact.nom;\n    }\n  },\n\nprenom : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.prenom;\n  }\n},\n\nage : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.age;\n  }\n},\n\npseudo : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.pseudo;\n  }\n},\nemail : function(){\n  var newContact = Inscription.findOne({\n    _id : LocalStore.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.email;\n  }\n},\n});\n\nTemplate.modifier.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: LocalStore.get(\"newContactID\"),\n    });\n    if (trouver) {\n        var newSurnom = event.target.surnom.value;\n        var userIdNow = LocalStore.get(\"userID\");\n        var contact = LocalStore.get(\"newContactID\");\n\n\n        if(newSurnom){\n          Meteor.call('modifierSurnom', userIdNow, contact, newSurnom, function() {})\n          Router.go('/contact');\n    //    LocalStore.set(\"newContactID\", null);\n      }\n    }\n  },\n});\n","Template.profil.rendered = function() {\n  document.title = \"Profil\";\n};\n\n\nTemplate.profil.helpers({\n  prenom: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n\n  nom: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.nom;\n    }\n  },\n\n  email: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.email;\n    }\n  },\n\n  age: function() {\n    var sessionID = LocalStore.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.age;\n    }\n  },\n\n});\n\nTemplate.profil.events({\n  'click #modifier' : function(){\n    var sessionID = LocalStore.get(\"userID\");\n    var statut = $(\"#statut\").val();\n    Meteor.call('statut', statut, sessionID);\n  }\n});\n","Router.configure({\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n});\n\n\nRouter.route('/inscription', {\n  name: 'inscription'\n});\n\n\nRouter.route('/connexion', {\n  name: 'connexion'\n});\n\nRouter.route('/accueil', {\n  name: 'accueil'\n});\n\nRouter.route('/message', {\n  name: 'message'\n});\n\nRouter.route('/contact', {\n  name: 'contact'\n});\n\nRouter.route('/newContact', {\n  name: 'newContact'\n});\n\nRouter.route('/discussion', {\n  name: 'discussion'\n});\n\nRouter.route('/deconnexion', {\n  name: 'deconnexion'\n});\n\nRouter.route('/profil', {\n  name: 'profil'\n});\n\nRouter.route('/modifier', {\n  name: 'modifier'\n});\n","Inscription =   new Mongo.Collection(\"inscription\");\nConnexion   =   new Mongo.Collection(\"connexion\");\nMessage     =   new Mongo.Collection(\"message\");\nContact     =   new Mongo.Collection(\"contact\");\n"]}}]