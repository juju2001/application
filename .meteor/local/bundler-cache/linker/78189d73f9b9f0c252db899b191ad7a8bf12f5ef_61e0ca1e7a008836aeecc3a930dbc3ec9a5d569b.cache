[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nSession = Package.session.Session;\nAccounts = Package['accounts-base'].Accounts;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nLocalStore = Package['frozeman:storage'].LocalStore;\nPersistentSession = Package['u2622:persistent-session'].PersistentSession;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-client'].Symbol;\nMap = Package['ecmascript-runtime-client'].Map;\nSet = Package['ecmascript-runtime-client'].Set;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"Chat\":{\"Discussion\":{\"template.discussion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Chat/Discussion/template.discussion.js                                                                    //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"discussion\");\nTemplate[\"discussion\"] = new Template(\"Template.discussion\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n  \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n    \", HTML.Raw('<h1 id=\"form-titre\">Actualité de vos discussions</h1>'), \"\\n    \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n      <div class=\"container-fluid\">\\n        <div class=\"navbar-header\">\\n          <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n        </div>\\n        <ul class=\"nav navbar-nav\">\\n          <li><a href=\"/accueil\">Accueil</a></li>\\n          <li class=\"active\"><a href=\"/discussion\">Discussion</a></li>\\n          <li><a href=\"/connexion\">Connexion</a></li>\\n          <li><a href=\"/inscription\">Insciption</a></li>\\n          <li><a href=\"/contact\">Contact</a></li>\\n          <li><a href=\"/profil\">Profil</a></li>\\n          <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          <form class=\"navbar-form navbar-left\">\\n            <div class=\"input-group\">\\n               <input type=\"text\" name=\"recherche\" id=\"recherche\" class=\"form-control\" placeholder=\"Search\">\\n               <div class=\"input-group-btn\">\\n                 <button class=\"btn btn-default\" id=\"goRecherche\" type=\"submit\">\\n                   <i class=\"glyphicon glyphicon-search\"></i>\\n                 </button>\\n               </div>\\n             </div>\\n        </form>\\n      </ul>\\n    </div>\\n    </nav>'), \"\\n      \", HTML.TABLE({\n    class: \"discu\"\n  }, \"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"discussion\"));\n  }, function() {\n    return [ \"\\n        \", HTML.TR(\"\\n        \", HTML.TD(HTML.A({\n      href: \"message\",\n      style: \"color : #4d4d4d \",\n      class: \"goDiscu\",\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"contact\"));\n      },\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"prenom\"));\n      }\n    }, Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \" \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \" \")), \"\\n        \", HTML.TD(\"       \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"notification\"));\n    }, function() {\n      return [ \"\\n                      \", HTML.DIV({\n        class: \"rond\"\n      }), \"\\n                   \" ];\n    }), \"\\n       \"), \"\\n          \", HTML.TD({\n      id: \"infos\",\n      class: function() {\n        return Spacebars.mustache(view.lookup(\"couleur\"));\n      },\n      style: \"text-align : center\"\n    }, \"\\n                \", Blaze.View(\"lookup:lastConnexion\", function() {\n      return Spacebars.mustache(view.lookup(\"lastConnexion\"));\n    }), \"\\n        \"), \"\\n        \", HTML.TD({\n      style: \"text-align:right\"\n    }, HTML.A({\n      style: \"color : red\",\n      id: \"supp\",\n      href: \"\"\n    }, \"Supprimer\")), \"\\n    \"), \"\\n    \", HTML.TR({\n      style: \"background-color : #EFEFEF\"\n    }, \"\\n      \", HTML.TD(), \"\\n      \", HTML.TD({\n      style: \"color : #EFEFEF\"\n    }, \".\"), \"\\n      \", HTML.TD(), \"\\n      \", HTML.TD(), \"\\n    \"), \"\\n        \" ];\n  }), \"\\n    \"), \"\\n    \", HTML.Raw(\"<br>\"), \"\\n  \"), HTML.Raw('\\n  <h1 style=\"text-align:center\">Recherche</h1>\\n  '), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"recherche\"));\n  }, function() {\n    return [ \"\\n  \", HTML.DIV({\n      style: \"background-color : green;\"\n    }, \"\\n    \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \" \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \" \", Blaze.View(\"lookup:age\", function() {\n      return Spacebars.mustache(view.lookup(\"age\"));\n    }), \" \", Blaze.View(\"lookup:email\", function() {\n      return Spacebars.mustache(view.lookup(\"email\"));\n    }), \"\\n  \"), \"\\n  \" ];\n  }), \"\\n\\n  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"inscriptionFind\"));\n  }, function() {\n    return [ \"\\n  \", HTML.DIV({\n      class: \"recherche\"\n    }, \"\\n    \", HTML.A({\n      href: \"\"\n    }, Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \" \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \" \", Blaze.View(\"lookup:email\", function() {\n      return Spacebars.mustache(view.lookup(\"email\"));\n    })), \"\\n  \"), \"\\n  \", HTML.BR(), \"\\n  \" ];\n  }), \"\\n\\n  \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"messageFind\"));\n  }, function() {\n    return [ \"\\n  \", HTML.DIV({\n      class: \"recherche\"\n    }, \"\\n     \", Blaze.View(\"lookup:message\", function() {\n      return Spacebars.mustache(view.lookup(\"message\"));\n    }), \"\\n    \", HTML.P({\n      style: \"text-align : right ; color: blue\"\n    }, \"De : \", Blaze.View(\"lookup:infoNom\", function() {\n      return Spacebars.mustache(view.lookup(\"infoNom\"));\n    }), \" \", Blaze.View(\"lookup:infoPrenom\", function() {\n      return Spacebars.mustache(view.lookup(\"infoPrenom\"));\n    }), \"  \", Blaze.View(\"lookup:infoHeure\", function() {\n      return Spacebars.mustache(view.lookup(\"infoHeure\"));\n    })), \"\\n  \"), \"\\n  \", HTML.BR(), \"\\n  \" ];\n  }), \"\\n  \");\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"message\":{\"template.message.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Chat/message/template.message.js                                                                          //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"message\");\nTemplate[\"message\"] = new Template(\"Template.message\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n  \", HTML.FORM(\"\\n    \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n      \", HTML.Raw('<h1 id=\"form-titre\">Message</h1>'), \"\\n      \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li><a href=\"/accueil\">Accueil</a></li>\\n            <li class=\"active\"><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>'), \"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"infoPerso\"));\n  }, function() {\n    return [ \"\\n          \", HTML.DIV({\n      class: \"info\"\n    }, \"\\n          \", HTML.P({\n      class: \"text-center\",\n      style: \"font-size:18px\"\n    }, Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \" \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    })), \"\\n          \", HTML.P({\n      class: function() {\n        return [ \"text-center \", Spacebars.mustache(view.lookup(\"couleur\")) ];\n      }\n    }, Blaze.View(\"lookup:lastConnexion\", function() {\n      return Spacebars.mustache(view.lookup(\"lastConnexion\"));\n    })), \"\\n          \", HTML.P({\n      style: \"text-align : center\"\n    }, Blaze.View(\"lookup:statut\", function() {\n      return Spacebars.mustache(view.lookup(\"statut\"));\n    })), \"\\n        \"), \"\\n      \" ];\n  }), \"\\n      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"messages\"));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      class: function() {\n        return [ \" chat col-sm-12 \", Spacebars.mustache(view.lookup(\"color\")), \" \" ];\n      }\n    }, \"\\n          \", Blaze.View(\"lookup:message\", function() {\n      return Spacebars.mustache(view.lookup(\"message\"));\n    }), \"\\n        \"), \"\\n        \", HTML.BR(), \"\\n      \" ];\n  }), \"\\n      \", HTML.Raw(\"<br>\"), \"\\n      \", HTML.Raw(\"<br>\"), \"\\n     \", HTML.Raw(\"<br>\"), \"\\n    \", HTML.Raw('<div class=\"form-groupe\">\\n      <input type=\"text\" class=\"form-control\" name=\"message\" id=\"messages\">\\n      <br>\\n      <input type=\"submit\" name=\"envoyer\" value=\"Envoyer\">\\n    </div>'), \"\\n  \"), \"\\n  \", HTML.Raw('<a href=\"/discussion\">Retour</a>'), \"\\n  \"), \"\\n\");\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"message.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Chat/message/message.js                                                                                   //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.message.rendered = function () {\n  document.title = \"Message\";\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.message.helpers({\n  messages: function () {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    Meteor.call('notification', sessionID, contactID);\n    return Message.find({\n      $or: [{\n        idClient1: sessionID,\n        idClient2: contactID,\n        luClient1: \"true\"\n      }, {\n        idClient1: contactID,\n        idClient2: sessionID,\n        luClient2: \"true\"\n      }]\n    }, {\n      sort: {\n        hours: 1\n      }\n    }).fetch();\n  },\n  color: function () {\n    if (this.idClient1 === Session.get(\"userID\")) {\n      return 'text-success text-right';\n    }\n\n    return 'text-danger text-left ';\n  },\n  infoPerso: function () {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    var infoPersonne = Contact.find({\n      userIdNow: sessionID,\n      contact: contactID\n    });\n    return infoPersonne;\n  },\n  lastConnexion: function () {\n    var contactID = Session.get(\"contactID\");\n    var sessionID = Session.get(\"userID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID\n    });\n\n    if (deco.deconnexion != 0) {\n      var deconnexion = deco.deconnexion;\n      var date = new Date(deconnexion);\n      var day = date.getDate();\n      var month = date.getMonth() + 1;\n      var year = date.getFullYear();\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n      var final = \"Hors ligne depuis \" + day + \"/\" + month + \"/\" + year + \"  \" + hours + \":\" + minutes;\n      return final;\n    } else {\n      return \"En ligne\";\n    }\n  },\n  couleur: function () {\n    var contactID = Session.get(\"contactID\");\n    var sessionID = Session.get(\"userID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID\n    });\n\n    if (deco.deconnexion == 0) {\n      return 'text-success';\n    } else {\n      return 'text-danger';\n    }\n  },\n  statut: function () {\n    var contactID = Session.get(\"contactID\");\n    var statut = Inscription.findOne({\n      _id: contactID\n    });\n\n    if (statut) {\n      return statut.statut;\n    }\n  }\n});\nTemplate.message.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    var find = Connexion.findOne({\n      userIdNow: sessionID\n    });\n    var message = event.target.message.value;\n\n    if (message) {\n      var now = new Date();\n      var hash3 = {\n        idClient1: sessionID,\n        idClient2: contactID,\n        message: message,\n        lu: \"false\",\n        hours: now.getTime(),\n        luClient1: \"true\",\n        luClient2: \"true\"\n      };\n      var time = now.getTime();\n      Meteor.call('message', hash3, function (data3) {});\n      Meteor.call('lastMessage', time, sessionID, contactID);\n      $('#messages').val('');\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"Contact\":{\"contact\":{\"template.contact.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Contact/contact/template.contact.js                                                                       //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"contact\");\nTemplate[\"contact\"] = new Template(\"Template.contact\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, HTML.Raw('\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Contact</h1>\\n      <nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li class=\"active\"><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </div>\\n  </form>\\n  '), HTML.FORM(\"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"contacter\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"col-sm-3\"\n    }, \"\\n      Nom : \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \"\\n      \", HTML.BR(), \" Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \"\\n      \", HTML.BR(), \" Surnom : \", Blaze.View(\"lookup:surnom\", function() {\n      return Spacebars.mustache(view.lookup(\"surnom\"));\n    }), \"\\n      \", HTML.BR(), \" Age : \", Blaze.View(\"lookup:anni\", function() {\n      return Spacebars.mustache(view.lookup(\"anni\"));\n    }), \"\\n      \", HTML.BR(), \" Date naissance : \", Blaze.View(\"lookup:date\", function() {\n      return Spacebars.mustache(view.lookup(\"date\"));\n    }), \"\\n      \", HTML.BR(), \" E-mail : \", Blaze.View(\"lookup:email\", function() {\n      return Spacebars.mustache(view.lookup(\"email\"));\n    }), \"\\n      \", HTML.BR(), \" Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n      return Spacebars.mustache(view.lookup(\"pseudo\"));\n    }), \"\\n      \", HTML.BR(), \"\\n      \", HTML.BUTTON({\n      class: \"modifier\",\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"contact\"));\n      }\n    }, \"Modifier\"), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n  \"), \"\\n\");\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"contact.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Contact/contact/contact.js                                                                                //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.contact.rendered = function () {\n  document.title = \"Contact\";\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.contact.helpers({\n  contacter: function () {\n    var sessionID = Session.get(\"userID\");\n    var last = Contact.find({\n      userIdNow: sessionID\n    }).fetch();\n\n    if (last) {\n      return last;\n    }\n\n    ;\n  },\n  anni: function () {\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id: this._id\n    });\n\n    if (id) {\n      var contactID = id.contact;\n      var last = Inscription.findOne({\n        _id: contactID\n      });\n\n      if (last) {\n        var date = last.date;\n        var birthday = new Date(date);\n        var nouveau = new Date();\n        var age = new Number(nouveau.getTime() - birthday.getTime()) / 31557600000;\n        return Math.floor(age);\n      }\n\n      ;\n    }\n  }\n});\nTemplate.contact.events({\n  'click .modifier': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id\n    });\n    var contactId = id.contact;\n\n    if (contactId) {\n      Session.set(\"contactID\", contactId);\n      Router.go('/modifier');\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"newContact\":{\"template.newContact.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Contact/newContact/template.newContact.js                                                                 //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"newContact\");\nTemplate[\"newContact\"] = new Template(\"Template.newContact\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n    \", HTML.FORM(\"\\n      \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n        \", HTML.Raw('<h1 id=\"form-titre\">Nouveau contact</h1>'), \"\\n        \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n          <div class=\"container-fluid\">\\n            <div class=\"navbar-header\">\\n              <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n            </div>\\n            <ul class=\"nav navbar-nav\">\\n              <li><a href=\"/accueil\">Accueil</a></li>\\n              <li><a href=\"/message\">Message</a></li>\\n              <li><a href=\"/connexion\">Connexion</a></li>\\n              <li><a href=\"/inscription\">Insciption</a></li>\\n              <li class=\"active\"><a href=\"/contact\">Contact</a></li>\\n              <li><a href=\"/profil\">Profil</a></li>\\n              <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n            </ul>\\n          </div>\\n        </nav>'), \"\\n        \", HTML.LABEL({\n    for: \"name\"\n  }, \"Nom : \", Blaze.View(\"lookup:nom\", function() {\n    return Spacebars.mustache(view.lookup(\"nom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"prenom\"\n  }, \"Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n    return Spacebars.mustache(view.lookup(\"prenom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<label for=\"prenom\">Surnom :</label>'), \"\\n        \", HTML.Raw('<input type=\"text\" name=\"surnom\" id=\"surnom\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n    return Spacebars.mustache(view.lookup(\"pseudo\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Age :  \", Blaze.View(\"lookup:age\", function() {\n    return Spacebars.mustache(view.lookup(\"age\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"E-mail : \", Blaze.View(\"lookup:email\", function() {\n    return Spacebars.mustache(view.lookup(\"email\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<input type=\"submit\" name=\"enregister\" value=\"Enregister\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<a href=\"/contact\">Retourner à la page contact</a>'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"newContact.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/Contact/newContact/newContact.js                                                                          //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.newContact.rendered = function () {\n  document.title = \"Nouveau contact\";\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.newContact.helpers({\n  nom: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.nom;\n    }\n  },\n  prenom: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.prenom;\n    }\n  },\n  age: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.age;\n    }\n  },\n  pseudo: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.pseudo;\n    }\n  },\n  email: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"newContactID\")\n    });\n\n    if (newContact) {\n      return newContact.email;\n    }\n  }\n});\nTemplate.newContact.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: Session.get(\"newContactID\")\n    });\n\n    if (trouver) {\n      var nom = trouver.nom;\n      var prenom = trouver.prenom;\n      var pseudo = trouver.pseudo;\n      var age = trouver.age;\n      var date = trouver.date;\n      var email = trouver.email;\n      var surnom = event.target.surnom.value;\n      var now = new Date();\n      var hash5 = {\n        userIdNow: Session.get(\"userID\"),\n        nom: nom,\n        prenom: prenom,\n        age: age,\n        date: date,\n        email: email,\n        pseudo: pseudo,\n        surnom: surnom,\n        contact: Session.get(\"newContactID\"),\n        hours: now.getTime(),\n        lastMessage: 0\n      };\n      Meteor.call('newContact', hash5);\n      Router.go('/contact');\n      Session.set(\"newContactID\", null);\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"accueil\":{\"template.accueil.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/accueil/template.accueil.js                                                                               //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"accueil\");\nTemplate[\"accueil\"] = new Template(\"Template.accueil\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n  \", HTML.FORM(\"\\n    \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n      \", HTML.Raw('<h1 id=\"form-titre\">Accueil</h1>'), \"\\n      \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li class=\"active\"><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>'), \"\\n      \", HTML.H2(\"Bonjour, \", Blaze.View(\"lookup:prenomAccueil\", function() {\n    return Spacebars.mustache(view.lookup(\"prenomAccueil\"));\n  })), \"\\n    \"), \"\\n    \", HTML.Raw(\"<p>Avec cette application tu pourras chatter avec tes amis à tous moments, partager ta journée et les moments les plus importants de ta vie.</p>\"), \"\\n  \"), HTML.Raw(\"\\n\\n  <h1>Amis actuellement connectés !</h1>\\n  \"), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"connecté\"));\n  }, function() {\n    return [ \"\\n  \", HTML.DIV({\n      class: \"col-sm-3\",\n      id: \"connecté\"\n    }, \"\\n  Nom : \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \"\\n  \", HTML.BR(), \"\\n  Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \"\\n  \"), \"\\n  \" ];\n  }), HTML.Raw(\"\\n<br><br><br><br><br>\\n  <h1>Ajouter de nouveaux amis !</h1>\\n    \"), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"contacter\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"col-sm-3\"\n    }, \"\\n    Nom : \", Blaze.View(\"lookup:nom\", function() {\n      return Spacebars.mustache(view.lookup(\"nom\"));\n    }), \"\\n    \", HTML.BR(), \"\\n    Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n      return Spacebars.mustache(view.lookup(\"prenom\"));\n    }), \"\\n    \", HTML.BR(), \"\\n    Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n      return Spacebars.mustache(view.lookup(\"pseudo\"));\n    }), \"\\n    \", HTML.BR(), \"\\n    \", HTML.BUTTON({\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"_id\"));\n      },\n      class: \"goAjouter\"\n    }, \"Ajouter\"), \"\\n    \"), \"\\n    \" ];\n  }), \"\\n\");\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"accueil.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/accueil/accueil.js                                                                                        //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.accueil.rendered = function () {\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n  document.title = \"Accueil\";\n};\n\nTemplate.accueil.helpers({\n  prenomAccueil: function () {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n  contacter: function () {\n    var sessionID = Session.get(\"userID\");\n    var contacts = Contact.find({\n      userIdNow: sessionID\n    }).fetch();\n\n    var ids = _.pluck(contacts, 'contact');\n\n    ids.push(sessionID);\n    return Inscription.find({\n      _id: {\n        $nin: ids\n      }\n    }).fetch();\n  },\n  connecté: function () {\n    var sessionID = Session.get(\"userID\");\n    var contacts = Inscription.find({\n      etat: \"true\"\n    }).fetch();\n\n    var ids = _.pluck(contacts, '_id');\n\n    ids.push(sessionID);\n    return Contact.find({\n      contact: {\n        $in: ids\n      },\n      userIdNow: sessionID\n    }).fetch();\n  }\n});\nTemplate.accueil.events({\n  'click .goAjouter': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var identifiant = Inscription.findOne({\n      _id: this._id\n    });\n    var id = identifiant._id;\n\n    if (id) {\n      Session.set(\"newContactID\", id);\n      Router.go('/newContact');\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"connexion\":{\"template.connexion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/connexion/template.connexion.js                                                                           //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"connexion\");\nTemplate[\"connexion\"] = new Template(\"Template.connexion\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Connexion</h1>\\n        <div class=\"form-group\">\\n          <nav class=\"navbar navbar-default\">\\n            <div class=\"container-fluid\">\\n              <div class=\"navbar-header\">\\n                <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n              </div>\\n              <ul class=\"nav navbar-nav\">\\n                <li><a href=\"/accueil\">Accueil</a></li>\\n                <li><a href=\"/discussion\">Discussion</a></li>\\n                <li class=\"active\"><a href=\"/connexion\">Connexion</a></li>\\n                <li><a href=\"/inscription\">Insciption</a></li>\\n                <li><a href=\"/contact\">Contact</a></li>\\n                <li><a href=\"/profil\">Profil</a></li>\\n                <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n              </ul>\\n            </div>\\n          </nav>\\n      </div>\\n      <label for=\"name\">Pseudo :</label>\\n      <input class=\"form-control\" type=\"text\" id=\"pseudo_connexion\" name=\"pseudo_connexion\">\\n      <label for=\"password\">password : </label>\\n      <input class=\"form-control\" type=\"password\" id=\"password_connexion\" name=\"password_connexion\">\\n      <br>\\n      <input type=\"submit\" id=\"envoyer\" name=\"envoyer\" value=\"Connexion\">\\n    </div>\\n  </form>\\n  <a href=\"/inscription\">S\\'inscrire</a>\\n</div>');\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"connexion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/connexion/connexion.js                                                                                    //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.connexion.rendered = function () {\n  document.title = \"Connexion\";\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.connexion.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var pseudo_connexion = event.target.pseudo_connexion.value;\n    var password_connexion = event.target.password_connexion.value;\n    var controle_user = Inscription.findOne({\n      pseudo: pseudo_connexion\n    });\n    var userIdNow = controle_user._id;\n    var now = new Date();\n\n    if (controle_user) {\n      if (controle_user.password != password_connexion) {\n        alert(\"Le mot de passe n'est pas juste !\");\n      } else {\n        var pseudoInscription = Inscription.findOne({\n          pseudo: pseudo_connexion\n        });\n\n        if (pseudoInscription) {\n          var alreadyConnexion = Connexion.findOne({\n            userIdNow: pseudoInscription._id\n          });\n\n          if (!alreadyConnexion) {\n            var hash = {\n              userIdNow: controle_user._id,\n              hours: now.getTime(),\n              deconnexion: 0\n            };\n            Meteor.call('connexion', hash, function (data) {\n              Session.setPersistent(\"userID\", userIdNow);\n\n              if (Session.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          } else {\n            Session.setPersistent(\"userID\", userIdNow);\n            Meteor.call('dec0', userIdNow);\n            Meteor.call('etat', userIdNow, function (data) {\n              if (Session.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          }\n        }\n\n        Router.go('/accueil');\n      }\n    } else {\n      alert(\"Le pseudo n'est pas juste !\");\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"deconnexion\":{\"template.deconnexion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/deconnexion/template.deconnexion.js                                                                       //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"deconnexion\");\nTemplate[\"deconnexion\"] = new Template(\"Template.deconnexion\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Deconnexion</h1>\\n      <nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li class=\"active\"><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </div>\\n  </form>\\n</div>');\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"deconnexion.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/deconnexion/deconnexion.js                                                                                //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.deconnexion.rendered = function () {\n  document.title = \"Déconnexion\";\n  var sessionID = Session.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID\n  });\n\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  } else {\n    if (confirm(\"Tu veux te déconnecter\")) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    } else {\n      Router.go('/accueil');\n    }\n  }\n};\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"inscription\":{\"template.inscription.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/inscription/template.inscription.js                                                                       //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"inscription\");\nTemplate[\"inscription\"] = new Template(\"Template.inscription\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"container\">\\n    <form>\\n      <div class=\"form-group\">\\n        <h1 id=\"form-titre\">Formulaire d\\'inscription</h1>\\n          <div class=\"form-group\">\\n            <nav class=\"navbar navbar-default\">\\n              <div class=\"container-fluid\">\\n                <div class=\"navbar-header\">\\n                  <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n                </div>\\n                <ul class=\"nav navbar-nav\">\\n                  <li><a href=\"/accueil\">Accueil</a></li>\\n                  <li><a href=\"/discussion\">Discussion</a></li>\\n                  <li><a href=\"/connexion\">Connexion</a></li>\\n                  <li class=\"active\"><a href=\"/inscription\">Insciption</a></li>\\n                  <li><a href=\"/contact\">Contact</a></li>\\n                  <li><a href=\"/profil\">Profil</a></li>\\n                  <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n                </ul>\\n              </div>\\n            </nav>\\n        </div>\\n        <label for=\"name\">Nom :</label>\\n        <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\">\\n        <label for=\"prenom\">Prénom </label>\\n        <input class=\"form-control\" type=\"text\" id=\"prenom\" name=\"prenom\">\\n        <label for=\"age\">Date de naissance :</label>\\n        <input class=\"form-control\" type=\"date\" id=\"age\" name=\"age\">\\n        <label for=\"email\">E-mail :</label>\\n        <input class=\"form-control\" type=\"email\" id=\"email\" name=\"email\">\\n        <label for=\"prenom\">Pseudo </label>\\n        <input class=\"form-control\" type=\"text\" id=\"pseudo\" name=\"pseudo\">\\n        <label for=\"password\">password : </label>\\n        <input class=\"form-control\" type=\"password\" id=\"mdp1\" name=\"password1\">\\n        <label for=\"password\">password :</label>\\n        <input class=\"form-control\" type=\"password\" id=\"mdp2\" name=\"password2\">\\n        <br>\\n        <input type=\"submit\" name=\"envoyer\" value=\"Envoyer\">\\n      </div>\\n    </form>\\n    <a href=\"/connexion\">Connexion</a>\\n  </div>');\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"inscription.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/inscription/inscription.js                                                                                //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.inscription.rendered = function () {\n  document.title = \"Insciption\";\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.inscription.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var mdp1 = event.target.mdp1.value;\n    var mdp2 = event.target.mdp2.value;\n    var pseudo = event.target.pseudo.value;\n    var pseudoDb = Inscription.findOne({\n      pseudo: pseudo\n    });\n    var age = $(\"#age\").val();\n    var nouveau = new Date(age);\n    var auj = new Date();\n\n    if (mdp1 == mdp2) {\n      if (mdp1.length > 3) {\n        if (!pseudoDb) {\n          if (nouveau.getFullYear() < auj.getFullYear() && nouveau.getFullYear() < auj.getFullYear() - 14) {\n            alert(\"Merci de l'inscription !\");\n            var hash = {\n              nom: event.target.name.value,\n              prenom: event.target.prenom.value,\n              date: event.target.age.value,\n              age: auj.getFullYear() - nouveau.getFullYear(),\n              email: event.target.email.value,\n              pseudo: event.target.pseudo.value,\n              password: event.target.mdp1.value,\n              etat: \"false\",\n              statut: \"\"\n            };\n            Meteor.call('insertInscription', hash, function (error, result) {\n              if (result) {\n                Router.go('/connexion');\n              }\n\n              if (error) {\n                console.log(error);\n              }\n            });\n          } else {\n            alert(\"Date invalide !\");\n          }\n        } else {\n          alert(\"Le pseudo que vous avez choisi est déjà utilisé !\");\n        }\n      } else {\n        alert(\"Votre mot de passe est trop court !\");\n      }\n\n      ;\n    } else {\n      alert(\"Vos mots de passe ne sont pas identiques ! \");\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"modifier\":{\"template.modifier.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/modifier/template.modifier.js                                                                             //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"modifier\");\nTemplate[\"modifier\"] = new Template(\"Template.modifier\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, \"\\n    \", HTML.FORM(\"\\n      \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n        \", HTML.Raw('<h1 id=\"form-titre\">Modifier contact</h1>'), \"\\n        \", HTML.Raw('<nav class=\"navbar navbar-default\">\\n          <div class=\"container-fluid\">\\n            <div class=\"navbar-header\">\\n              <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n            </div>\\n            <ul class=\"nav navbar-nav\">\\n              <li><a href=\"/accueil\">Accueil</a></li>\\n              <li><a href=\"/message\">Message</a></li>\\n              <li><a href=\"/connexion\">Connexion</a></li>\\n              <li><a href=\"/inscription\">Insciption</a></li>\\n              <li class=\"active\"><a href=\"/contact\">Contact</a></li>\\n              <li><a href=\"/profil\">Profil</a></li>\\n              <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n            </ul>\\n          </div>\\n        </nav>'), \"\\n        \", HTML.LABEL({\n    for: \"name\"\n  }, \"Nom : \", Blaze.View(\"lookup:nom\", function() {\n    return Spacebars.mustache(view.lookup(\"nom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"prenom\"\n  }, \"Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n    return Spacebars.mustache(view.lookup(\"prenom\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<label for=\"prenom\">Surnom :</label>'), \"\\n        \", HTML.Raw('<input type=\"text\" name=\"surnom\" id=\"surnom\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Pseudo : \", Blaze.View(\"lookup:pseudo\", function() {\n    return Spacebars.mustache(view.lookup(\"pseudo\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"Age :  \", Blaze.View(\"lookup:age\", function() {\n    return Spacebars.mustache(view.lookup(\"age\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.LABEL({\n    for: \"age\"\n  }, \"E-mail : \", Blaze.View(\"lookup:email\", function() {\n    return Spacebars.mustache(view.lookup(\"email\"));\n  })), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<input type=\"submit\" name=\"Modifier\" value=\"Modifier\">'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<button name=\"supprimer\" id=\"supprimer\">Supprimer</button>'), \"\\n        \", HTML.Raw(\"<br>\"), \"\\n        \", HTML.Raw('<a href=\"/contact\">Retourner à la page contact</a>'), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"modifier.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/modifier/modifier.js                                                                                      //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.modifier.rendered = function () {\n  document.title = \"Modifier\";\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.modifier.helpers({\n  nom: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"contactID\")\n    });\n\n    if (newContact) {\n      return newContact.nom;\n    }\n  },\n  prenom: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"contactID\")\n    });\n\n    if (newContact) {\n      return newContact.prenom;\n    }\n  },\n  age: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"contactID\")\n    });\n\n    if (newContact) {\n      return newContact.age;\n    }\n  },\n  pseudo: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"contactID\")\n    });\n\n    if (newContact) {\n      return newContact.pseudo;\n    }\n  },\n  email: function () {\n    var newContact = Inscription.findOne({\n      _id: Session.get(\"contactID\")\n    });\n\n    if (newContact) {\n      return newContact.email;\n    }\n  }\n});\nTemplate.modifier.events({\n  'submit form': function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: Session.get(\"contactID\")\n    });\n\n    if (trouver) {\n      var newSurnom = event.target.surnom.value;\n      var userIdNow = Session.get(\"userID\");\n      var contact = Session.get(\"contactID\");\n\n      if (newSurnom) {\n        Meteor.call('modifierSurnom', userIdNow, contact, newSurnom, function () {});\n        Router.go('/contact');\n        Session.set(\"contactID\", null);\n      }\n    }\n  },\n  'click #supprimer': function () {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n\n    if (confirm(\"Etes-vous sûr de vouloir supprimer ce contact\")) {\n      Meteor.call('supprimerContact', sessionID, contactID, function () {\n        Meteor.call('supprimerMessage1', sessionID, contactID, function () {\n          Meteor.call('supprimerMessage2', sessionID, contactID, function () {\n            alert(\"Contact supprimé !\");\n            Router.go('/contact');\n          });\n        });\n      });\n    } else {\n      Router.go('/modifier');\n    }\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"profil\":{\"template.profil.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/profil/template.profil.js                                                                                 //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"profil\");\nTemplate[\"profil\"] = new Template(\"Template.profil\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"container\"\n  }, HTML.Raw('\\n  <form>\\n    <div class=\"form-group\">\\n      <h1 id=\"form-titre\">Profil</h1>\\n      <nav class=\"navbar navbar-default\">\\n        <div class=\"container-fluid\">\\n          <div class=\"navbar-header\">\\n            <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\\n          </div>\\n          <ul class=\"nav navbar-nav\">\\n            <li><a href=\"/accueil\">Accueil</a></li>\\n            <li><a href=\"/discussion\">Discussion</a></li>\\n            <li><a href=\"/connexion\">Connexion</a></li>\\n            <li><a href=\"/inscription\">Insciption</a></li>\\n            <li><a href=\"/contact\">Contact</a></li>\\n            <li class=\"active\"><a href=\"/profil\">Profil</a></li>\\n            <li><a href=\"/deconnexion\">Déconnexion</a></li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </div>\\n  </form>\\n  '), HTML.DIV({\n    style: \"font-size:19px\"\n  }, \"\\n  Nom : \", Blaze.View(\"lookup:nom\", function() {\n    return Spacebars.mustache(view.lookup(\"nom\"));\n  }), \"\\n  \", HTML.Raw(\"<br>\"), \"\\n  Prénom : \", Blaze.View(\"lookup:prenom\", function() {\n    return Spacebars.mustache(view.lookup(\"prenom\"));\n  }), \"\\n  \", HTML.Raw(\"<br>\"), \"\\n  Age : \", Blaze.View(\"lookup:age\", function() {\n    return Spacebars.mustache(view.lookup(\"age\"));\n  }), \"\\n  \", HTML.Raw(\"<br>\"), \"\\n  E-mail : \", Blaze.View(\"lookup:email\", function() {\n    return Spacebars.mustache(view.lookup(\"email\"));\n  }), \"\\n  \", HTML.Raw(\"<br>\"), \"\\n  Statut :\\n  \", HTML.Raw('<input type=\"text\" name=\"statut\" id=\"statut\" placeholder=\"happy\">'), \"\\n\"), HTML.Raw('\\n<br>\\n<button id=\"modifier\">Modifier</button>\\n'));\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"profil.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/profil/profil.js                                                                                          //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nTemplate.profil.rendered = function () {\n  document.title = \"Profil\";\n  var sessionID = Session.get(\"userID\");\n\n  if (sessionID == null) {\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function () {\n    Inscription.find();\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      }\n\n      ;\n    }\n  });\n};\n\nTemplate.profil.helpers({\n  prenom: function () {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n  nom: function () {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.nom;\n    }\n  },\n  email: function () {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.email;\n    }\n  },\n  age: function () {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID\n    });\n\n    if (find) {\n      return find.age;\n    }\n  }\n});\nTemplate.profil.events({\n  'click #modifier': function () {\n    var sessionID = Session.get(\"userID\");\n    var statut = $(\"#statut\").val();\n    Meteor.call('statut', statut, sessionID);\n    $(\"#statut\").val('');\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"template.not_found.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/template.not_found.js                                                                                     //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n\nTemplate.__checkName(\"notFound\");\nTemplate[\"notFound\"] = new Template(\"Template.notFound\", (function() {\n  var view = this;\n  return HTML.Raw('<h1>Test not found</h1>\\n  <a href=\"/inscription\">S\\'inscrire</a>\\n  <br>\\n  <a href=\"/connexion\">Se connecter</a>');\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"stale_session.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/lib/stale_session.js                                                                                      //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n//\n// Client side activity detection for the session timeout\n// - depends on jquery\n//\n// Meteor settings:\n// - staleSessionHeartbeatInterval: interval (in ms) at which activity heartbeats are sent up to the server\n// - staleSessionActivityEvents: the jquery events which are considered indicator of activity e.g. in an on() call.\n//\nvar heartbeatInterval = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionHeartbeatInterval || 3 * 60 * 1000; // 3mins\n\nvar activityEvents = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionActivityEvents || 'mousemove click keydown';\nvar activityDetected = false;\nMeteor.startup(function () {\n  var inscriptions = Inscription.find({\n    etat: true\n  }).fetch();\n\n  var ids = _.pluck(inscriptions, '_id'); //\n  // periodically send a heartbeat if activity has been detected within the interval\n  //\n\n\n  Meteor.setInterval(function () {\n    if (Session.get('userID') && activityDetected) {\n      Meteor.call('heartbeat', Session.get('userID'));\n      activityDetected = false;\n    }\n\n    if (ids && activityDetected) {\n      Meteor.call('heartbeat', ids);\n      activityDetected = false;\n    }\n  }, heartbeatInterval); //\n  // detect activity and mark it as detected on any of the following events\n  //\n\n  $(document).on(activityEvents, function () {\n    activityDetected = true;\n  });\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"Router\":{\"router.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// Router/router.js                                                                                                 //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nRouter.configure({\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound'\n});\nRouter.route('/inscription', {\n  name: 'inscription'\n});\nRouter.route('/connexion', {\n  name: 'connexion'\n});\nRouter.route('/accueil', {\n  name: 'accueil'\n});\nRouter.route('/message', {\n  name: 'message'\n});\nRouter.route('/contact', {\n  name: 'contact'\n});\nRouter.route('/newContact', {\n  name: 'newContact'\n});\nRouter.route('/discussion', {\n  name: 'discussion'\n});\nRouter.route('/deconnexion', {\n  name: 'deconnexion'\n});\nRouter.route('/profil', {\n  name: 'profil'\n});\nRouter.route('/modifier', {\n  name: 'modifier'\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collection\":{\"collection.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// collection/collection.js                                                                                         //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nInscription = new Mongo.Collection(\"inscription\");\nConnexion = new Mongo.Collection(\"connexion\");\nMessage = new Mongo.Collection(\"message\");\nContact = new Mongo.Collection(\"contact\");\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\nrequire(\"/client/Chat/Discussion/template.discussion.js\");\nrequire(\"/client/Chat/message/template.message.js\");\nrequire(\"/client/Contact/contact/template.contact.js\");\nrequire(\"/client/Contact/newContact/template.newContact.js\");\nrequire(\"/client/accueil/template.accueil.js\");\nrequire(\"/client/connexion/template.connexion.js\");\nrequire(\"/client/deconnexion/template.deconnexion.js\");\nrequire(\"/client/inscription/template.inscription.js\");\nrequire(\"/client/modifier/template.modifier.js\");\nrequire(\"/client/profil/template.profil.js\");\nrequire(\"/client/template.not_found.js\");\nrequire(\"/client/lib/stale_session.js\");\nrequire(\"/client/Chat/message/message.js\");\nrequire(\"/client/Contact/contact/contact.js\");\nrequire(\"/client/Contact/newContact/newContact.js\");\nrequire(\"/client/accueil/accueil.js\");\nrequire(\"/client/connexion/connexion.js\");\nrequire(\"/client/deconnexion/deconnexion.js\");\nrequire(\"/client/inscription/inscription.js\");\nrequire(\"/client/modifier/modifier.js\");\nrequire(\"/client/profil/profil.js\");\nrequire(\"/Router/router.js\");\nrequire(\"/collection/collection.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/Chat/message/message.js","client/Contact/contact/contact.js","client/Contact/newContact/newContact.js","client/accueil/accueil.js","client/connexion/connexion.js","client/deconnexion/deconnexion.js","client/inscription/inscription.js","client/modifier/modifier.js","client/profil/profil.js","client/lib/stale_session.js","Router/router.js","collection/collection.js"],"names":["Template","message","rendered","document","title","sessionID","Session","get","Router","go","Tracker","autorun","Inscription","find","user","findOne","_id","etat","heure","Date","heureDeco","getTime","Meteor","call","set","helpers","messages","contactID","Message","$or","idClient1","idClient2","luClient1","luClient2","sort","hours","fetch","color","infoPerso","infoPersonne","Contact","userIdNow","contact","lastConnexion","deco","Connexion","deconnexion","date","day","getDate","month","getMonth","year","getFullYear","getHours","minutes","getMinutes","final","couleur","statut","events","event","preventDefault","stopPropagation","target","value","now","hash3","lu","time","data3","$","val","contacter","last","anni","id","birthday","nouveau","age","Number","Math","floor","contactId","newContact","nom","prenom","pseudo","email","trouver","surnom","hash5","lastMessage","accueil","prenomAccueil","contacts","ids","_","pluck","push","$nin","connecté","$in","identifiant","connexion","pseudo_connexion","password_connexion","controle_user","password","alert","pseudoInscription","alreadyConnexion","hash","data","setPersistent","confirm","inscription","mdp1","mdp2","pseudoDb","auj","length","name","error","result","console","log","modifier","newSurnom","profil","heartbeatInterval","settings","public","staleSessionHeartbeatInterval","activityEvents","staleSessionActivityEvents","activityDetected","startup","inscriptions","setInterval","on","configure","loadingTemplate","notFoundTemplate","route","Mongo","Collection"],"mappings":"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","file":"/app.js","sourcesContent":["Template.message.rendered = function() {\n  document.title = \"Message\";\n\n  var sessionID = Session.get(\"userID\");\n  if(sessionID == null){\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\n\nTemplate.message.helpers({\n  messages: function() {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    Meteor.call('notification', sessionID, contactID);\n    return Message.find({\n      $or: [{\n        idClient1: sessionID,\n        idClient2: contactID,\n        luClient1: \"true\",\n      }, {\n        idClient1: contactID,\n        idClient2: sessionID,\n        luClient2: \"true\",\n      }],\n    }, {\n      sort: {\n        hours: 1,\n      },\n    }).fetch();\n  },\n\n  color: function() {\n    if (this.idClient1 === Session.get(\"userID\")) {\n      return 'text-success text-right';\n    }\n    return 'text-danger text-left ';\n  },\n\n  infoPerso: function() {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    var infoPersonne = Contact.find({\n      userIdNow: sessionID,\n      contact: contactID,\n    });\n    return infoPersonne;\n  },\n\n  lastConnexion: function() {\n    var contactID = Session.get(\"contactID\");\n    var sessionID = Session.get(\"userID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID,\n    });\n    if(deco.deconnexion != 0){\n      var deconnexion = deco.deconnexion;\n      var date = new Date(deconnexion);\n      var day = date.getDate();\n      var month = date.getMonth()+1;\n      var year = date.getFullYear();\n      var hours = date.getHours();\n      var minutes =  date.getMinutes();\n      var final = \"Hors ligne depuis \"+day+\"/\"+month+\"/\"+year+\"  \"+hours +\":\"+minutes;\n      return final ;\n    }else{\n      return \"En ligne\";\n    }\n  },\n\n  couleur: function(){\n    var contactID = Session.get(\"contactID\");\n    var sessionID = Session.get(\"userID\");\n    var deco = Connexion.findOne({\n      userIdNow: contactID,\n    });\n    if(deco.deconnexion == 0){\n      return 'text-success'\n    }else{\n      return 'text-danger'\n    }\n  },\n\n  statut : function(){\n    var contactID = Session.get(\"contactID\");\n    var statut = Inscription.findOne({\n      _id : contactID,\n    });\n    if(statut){\n      return statut.statut;\n    }\n  }\n\n});\n\n\nTemplate.message.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    var find = Connexion.findOne({\n      userIdNow: sessionID,\n    });\n    var message = event.target.message.value;\n    if (message) {\n      var now = new Date();\n      var hash3 = {\n        idClient1: sessionID,\n        idClient2: contactID,\n        message: message,\n        lu: \"false\",\n        hours: now.getTime(),\n        luClient1 : \"true\",\n        luClient2 : \"true\",\n      };\n      var time = now.getTime();\n      Meteor.call('message', hash3, function(data3) {});\n      Meteor.call('lastMessage', time, sessionID, contactID);\n      $('#messages').val('');\n    }\n  },\n});\n","Template.contact.rendered = function() {\n  document.title = \"Contact\";\n\n  var sessionID = Session.get(\"userID\");\n  if(sessionID == null){\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\n\nTemplate.contact.helpers({\n  contacter: function() {\n    var sessionID = Session.get(\"userID\");\n    var last = Contact.find({\n      userIdNow: sessionID,\n    }).fetch();\n    if (last) {\n      return last;\n    };\n  },\n\n  anni: function() {\n    var sessionID = Session.get(\"userID\");\n    var id = Contact.findOne({\n      _id : this._id,\n    });\n    if(id) {\n      var contactID = id.contact;\n      var last = Inscription.findOne({\n        _id: contactID,\n      });\n      if (last) {\n        var date = last.date;\n        var birthday = new Date(date);\n        var nouveau = new Date();\n        var age =new Number(nouveau.getTime() - birthday.getTime()) / 31557600000;\n        return Math.floor(age);\n      };\n    }\n  },\n});\n\nTemplate.contact.events({\n  'click .modifier': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var id = Contact.findOne({\n      _id: this._id,\n    });\n    var contactId = id.contact;\n    if (contactId) {\n      Session.set(\"contactID\", contactId);\n      Router.go('/modifier');\n    }\n  }\n})\n","Template.newContact.rendered = function() {\n  document.title = \"Nouveau contact\";\n\n  var sessionID = Session.get(\"userID\");\n  if(sessionID == null){\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\n\nTemplate.newContact.helpers({\n  nom : function(){\n    var newContact = Inscription.findOne({\n      _id : Session.get(\"newContactID\"),\n    });\n    if(newContact){\n      return newContact.nom;\n    }\n  },\n\nprenom : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.prenom;\n  }\n},\n\nage : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.age;\n  }\n},\n\npseudo : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.pseudo;\n  }\n},\nemail : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"newContactID\"),\n  });\n  if(newContact){\n    return newContact.email;\n  }\n},\n});\n\nTemplate.newContact.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: Session.get(\"newContactID\"),\n    });\n    if (trouver) {\n        var nom = trouver.nom;\n        var prenom = trouver.prenom;\n        var pseudo = trouver.pseudo;\n        var age = trouver.age;\n        var date = trouver.date;\n        var email = trouver.email;\n        var surnom = event.target.surnom.value;\n        var now = new Date();\n        var hash5 = {\n          userIdNow: Session.get(\"userID\"),\n          nom: nom,\n          prenom: prenom,\n          age: age,\n          date : date,\n          email: email,\n          pseudo: pseudo,\n          surnom: surnom,\n          contact: Session.get(\"newContactID\"),\n          hours: now.getTime(),\n          lastMessage : 0,\n        };\n        Meteor.call('newContact', hash5)\n        Router.go('/contact');\n                Session.set(\"newContactID\", null);\n      }\n  },\n});\n","Template.accueil.rendered = function() {\n\n  var sessionID = Session.get(\"userID\");\n  if(sessionID == null){\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n\n  document.title = \"Accueil\";\n\n};\n\n\nTemplate.accueil.helpers({\n  prenomAccueil: function() {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n\n  contacter: function() {\n    var sessionID = Session.get(\"userID\");\n\n    var contacts = Contact.find({\n      userIdNow: sessionID,\n    }).fetch();\n    var ids = _.pluck(contacts, 'contact');\n    ids.push(sessionID);\n    return Inscription.find({\n      _id: {\n        $nin: ids,\n      },\n    }).fetch();\n  },\n\n  connecté: function() {\n    var sessionID = Session.get(\"userID\");\n    var contacts = Inscription.find({\n      etat: \"true\",\n    }).fetch();\n    var ids = _.pluck(contacts, '_id');\n    ids.push(sessionID);\n    return Contact.find({\n      contact: {\n        $in: ids,\n      },\n      userIdNow: sessionID,\n    }).fetch();\n  },\n});\n\nTemplate.accueil.events({\n  'click .goAjouter': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var identifiant = Inscription.findOne({\n      _id: this._id,\n    });\n    var id = identifiant._id;\n    if (id) {\n      Session.set(\"newContactID\", id);\n      Router.go('/newContact');\n    }\n  },\n})\n","Template.connexion.rendered = function() {\n  document.title = \"Connexion\";\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\n\nTemplate.connexion.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    var pseudo_connexion = event.target.pseudo_connexion.value;\n    var password_connexion = event.target.password_connexion.value;\n    var controle_user = Inscription.findOne({\n      pseudo: pseudo_connexion,\n    });\n    var userIdNow = controle_user._id;\n    var now = new Date();\n    if (controle_user) {\n      if (controle_user.password != password_connexion) {\n        alert(\"Le mot de passe n'est pas juste !\")\n      } else {\n        var pseudoInscription = Inscription.findOne({\n          pseudo: pseudo_connexion,\n        });\n        if (pseudoInscription) {\n          var alreadyConnexion = Connexion.findOne({\n            userIdNow: pseudoInscription._id,\n          });\n          if (!alreadyConnexion) {\n            var hash = {\n              userIdNow: controle_user._id,\n              hours: now.getTime(),\n              deconnexion: 0,\n            };\n            Meteor.call('connexion', hash, function(data) {\n              Session.setPersistent(\"userID\", userIdNow);\n              if (Session.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          } else {\n            Session.setPersistent(\"userID\", userIdNow);\n            Meteor.call('dec0', userIdNow);\n            Meteor.call('etat', userIdNow,function(data) {\n              if (Session.get(\"userID\")) {\n                event.preventDefault();\n              }\n            });\n          }\n        }\n        Router.go('/accueil');\n      }\n    }else{\n      alert(\"Le pseudo n'est pas juste !\");\n    }\n  },\n});\n","Template.deconnexion.rendered = function() {\n  document.title = \"Déconnexion\";\n  var sessionID = Session.get(\"userID\");\n  var find = Connexion.findOne({\n    userIdNow: sessionID,\n  });\n  if (!sessionID || find && sessionID != find.userIdNow) {\n    Router.go('/connexion');\n  } else {\n    if (confirm(\"Tu veux te déconnecter\")) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    } else {\n      Router.go('/accueil');\n    }\n  }\n};\n","Template.inscription.rendered = function() {\n  document.title = \"Insciption\";\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\nTemplate.inscription.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var mdp1 = event.target.mdp1.value;\n    var mdp2 = event.target.mdp2.value;\n    var pseudo = event.target.pseudo.value;\n    var pseudoDb = Inscription.findOne({\n      pseudo: pseudo,\n    });\n    var age= $(\"#age\").val();\n    var nouveau = new Date(age);\n    var auj = new Date();\n    if (mdp1 == mdp2) {\n      if (mdp1.length > 3) {\n        if (!pseudoDb) {\n          if (nouveau.getFullYear() < auj.getFullYear()  && nouveau.getFullYear() < auj.getFullYear()-14 ) {\n            alert(\"Merci de l'inscription !\");\n            var hash = {\n              nom: event.target.name.value,\n              prenom: event.target.prenom.value,\n              date: event.target.age.value,\n              age : auj.getFullYear() - nouveau.getFullYear(),\n              email: event.target.email.value,\n              pseudo: event.target.pseudo.value,\n              password: event.target.mdp1.value,\n              etat: \"false\",\n              statut: \"\"\n            };\n            Meteor.call('insertInscription', hash, function(error, result) {\n              if (result) {\n                Router.go('/connexion');\n              }\n              if (error) {\n                console.log(error);\n              }\n            });\n          }else{\n            alert(\"Date invalide !\");\n          }\n        } else {\n          alert(\"Le pseudo que vous avez choisi est déjà utilisé !\");\n        }\n      } else {\n        alert(\"Votre mot de passe est trop court !\");\n      };\n\n    } else {\n      alert(\"Vos mots de passe ne sont pas identiques ! \");\n    }\n  }\n});\n","Template.modifier.rendered = function() {\n  document.title = \"Modifier\";\n\n  var sessionID = Session.get(\"userID\");\n  if(sessionID == null){\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\n\nTemplate.modifier.helpers({\n  nom : function(){\n    var newContact = Inscription.findOne({\n      _id : Session.get(\"contactID\"),\n    });\n    if(newContact){\n      return newContact.nom;\n    }\n  },\n\nprenom : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"contactID\"),\n  });\n  if(newContact){\n    return newContact.prenom;\n  }\n},\n\nage : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"contactID\"),\n  });\n  if(newContact){\n    return newContact.age;\n  }\n},\n\npseudo : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"contactID\"),\n  });\n  if(newContact){\n    return newContact.pseudo;\n  }\n},\nemail : function(){\n  var newContact = Inscription.findOne({\n    _id : Session.get(\"contactID\"),\n  });\n  if(newContact){\n    return newContact.email;\n  }\n},\n});\n\nTemplate.modifier.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var trouver = Inscription.findOne({\n      _id: Session.get(\"contactID\"),\n    });\n    if (trouver) {\n        var newSurnom = event.target.surnom.value;\n        var userIdNow = Session.get(\"userID\");\n        var contact = Session.get(\"contactID\");\n\n\n        if(newSurnom){\n          Meteor.call('modifierSurnom', userIdNow, contact, newSurnom, function() {});\n          Router.go('/contact');\n          Session.set(\"contactID\", null);\n      }\n    }\n  },\n\n  'click #supprimer' : function() {\n    var sessionID = Session.get(\"userID\");\n    var contactID = Session.get(\"contactID\");\n    if(confirm(\"Etes-vous sûr de vouloir supprimer ce contact\")){\n      Meteor.call('supprimerContact', sessionID, contactID, function() {\n        Meteor.call('supprimerMessage1', sessionID, contactID, function() {\n          Meteor.call('supprimerMessage2', sessionID, contactID, function() {\n          alert(\"Contact supprimé !\");\n          Router.go('/contact');\n        });\n        });\n      });\n    }else{\n      Router.go('/modifier');\n    }\n  },\n});\n","Template.profil.rendered = function() {\n  document.title = \"Profil\";\n\n  var sessionID = Session.get(\"userID\");\n  if(sessionID == null){\n    Router.go('/connexion');\n  }\n\n  Tracker.autorun(function() {\n    Inscription.find();\n\n    var user = Inscription.findOne({\n      _id: Session.get('userID'),\n      etat: false,\n    });\n\n    if (user) {\n      var sessionID = Session.get(\"userID\");\n      var heure = new Date();\n      var heureDeco = heure.getTime();\n      Meteor.call('deco', sessionID);\n      Meteor.call('heureDeco', sessionID, heureDeco);\n      Session.set(\"userID\", null);\n      if (Session.get(\"userID\") == null) {\n        Router.go('/connexion');\n      };\n    }\n  });\n};\n\n\nTemplate.profil.helpers({\n  prenom: function() {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.prenom;\n    }\n  },\n\n  nom: function() {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.nom;\n    }\n  },\n\n  email: function() {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.email;\n    }\n  },\n\n  age: function() {\n    var sessionID = Session.get(\"userID\");\n    var find = Inscription.findOne({\n      _id: sessionID,\n    });\n\n    if (find) {\n      return find.age;\n    }\n  },\n\n});\n\nTemplate.profil.events({\n  'click #modifier' : function(){\n    var sessionID = Session.get(\"userID\");\n    var statut = $(\"#statut\").val();\n    Meteor.call('statut', statut, sessionID);\n    $(\"#statut\").val('');\n  }\n});\n","//\n// Client side activity detection for the session timeout\n// - depends on jquery\n//\n// Meteor settings:\n// - staleSessionHeartbeatInterval: interval (in ms) at which activity heartbeats are sent up to the server\n// - staleSessionActivityEvents: the jquery events which are considered indicator of activity e.g. in an on() call.\n//\nvar heartbeatInterval = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionHeartbeatInterval || (3*60*1000); // 3mins\nvar activityEvents = Meteor.settings && Meteor.settings.public && Meteor.settings.public.staleSessionActivityEvents || 'mousemove click keydown';\n\nvar activityDetected = false;\n\nMeteor.startup(function() {\n\n  var inscriptions = Inscription.find({ etat : true}).fetch();\n  var ids = _.pluck(inscriptions, '_id');\n\n    //\n    // periodically send a heartbeat if activity has been detected within the interval\n    //\n    Meteor.setInterval(function() {\n        if (Session.get('userID') && activityDetected) {\n            Meteor.call('heartbeat', Session.get('userID'));\n            activityDetected = false;\n        }\n        if (ids && activityDetected) {\n            Meteor.call('heartbeat', ids);\n            activityDetected = false;\n        }\n    }, heartbeatInterval);\n\n    //\n    // detect activity and mark it as detected on any of the following events\n    //\n    $(document).on(activityEvents, function() {\n       activityDetected = true;\n    });\n});\n","Router.configure({\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n});\n\n\nRouter.route('/inscription', {\n  name: 'inscription'\n});\n\n\nRouter.route('/connexion', {\n  name: 'connexion'\n});\n\nRouter.route('/accueil', {\n  name: 'accueil'\n});\n\nRouter.route('/message', {\n  name: 'message'\n});\n\nRouter.route('/contact', {\n  name: 'contact'\n});\n\nRouter.route('/newContact', {\n  name: 'newContact'\n});\n\nRouter.route('/discussion', {\n  name: 'discussion'\n});\n\nRouter.route('/deconnexion', {\n  name: 'deconnexion'\n});\n\nRouter.route('/profil', {\n  name: 'profil'\n});\n\nRouter.route('/modifier', {\n  name: 'modifier'\n});\n","Inscription =   new Mongo.Collection(\"inscription\");\nConnexion   =   new Mongo.Collection(\"connexion\");\nMessage     =   new Mongo.Collection(\"message\");\nContact     =   new Mongo.Collection(\"contact\");\n"]}}]